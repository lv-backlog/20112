From: <Saved by Blink>
Snapshot-Content-Location: https://course.cse.ust.hk/comp2012/assignments/assignment3/
Subject: COMP 2012 Assignment 3: Smart Pointers
Date: Thu, 14 Jul 2022 13:57:07 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----"


------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/html
Content-ID: <frame-822FFED6FF9F26DF3D2EBC4CFB92001A@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.cse.ust.hk/comp2012/assignments/assignment3/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-d3768767-8f62-4a78-834f-c158974b5555@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-7ab8c8d5-3d24-4837=
-91f5-769b869d84a8@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-fca5eb6c-d74b-426c-ba4f-2ee08385eefb@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-8d6e47be-9fc7-44fd-9d=
36-51a8097f115c@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" h=
ref=3D"cid:css-5be81f84-cef7-49c2-b318-2fbaea03b7d8@mhtml.blink" /><link re=
l=3D"stylesheet" type=3D"text/css" href=3D"cid:css-63c54f4e-a087-4c8d-8aec-=
48a8688d4a74@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-1764dc9b-9fbc-43c5-8e5e-ffad24737896@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-e73e2b90-af25-4e8a-a1e6-7=
99bb81dfc9c@mhtml.blink" />

 =20
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1, shrink-to-fit=3Dno">
  <meta name=3D"description" content=3D"">
  <meta name=3D"author" content=3D"">

 =20
 =20

  <title>COMP 2012 Assignment 3: Smart Pointers</title>

  <!-- Bootstrap core CSS -->
  <link href=3D"https://course.cse.ust.hk/comp2012/assignments/assignment3/=
vendor/bootstrap/css/bootstrap.min.css" rel=3D"stylesheet">

  <!-- Custom styles for this template -->
  <link href=3D"https://course.cse.ust.hk/comp2012/assignments/assignment3/=
css/blog-home.css" rel=3D"stylesheet">

  <!-- Prism syntax highlighter -->
  <link href=3D"https://course.cse.ust.hk/comp2012/assignments/assignment3/=
vendor/prism/prism.css" rel=3D"stylesheet">

 =20
</head>

<body><div id=3D"MathJax_Message" style=3D"display: none;"></div>
 =20

  <!-- Page Content -->
  <div class=3D"container">

    <div class=3D"row">

      <!-- Entries Column -->
      <div class=3D"col-md-9">

        <h2 class=3D"my-4">
          <span style=3D"color:darkblue">COMP 2012</span>
          <small>Object-Oriented Programming and Data Structures</small>
        </h2>

        <h3 class=3D"my-4">Assignment 3
          <span style=3D"color:#660066">Smart Pointers</span>
        </h3>

        <!-- Introduction section -->
        <div class=3D"card mb-4">
          <img class=3D"card-img-top" src=3D"https://course.cse.ust.hk/comp=
2012/assignments/assignment3/images/flights.jpg" alt=3D"Card image cap">

          <div class=3D"card-body" id=3D"intro">
            <h3 class=3D"card-title">Introduction</h3>
            <p class=3D"card-text">
              </p><p>
                The main source of bugs in C++ is often believed to be the =
improper use of pointers. While pointers provide a very flexible way of sto=
ring and passing around references to objects, the ownership and lifetime o=
f dynamically allocated objects on the heap becomes unclear. An object on t=
he stack has a clearly defined scope, which also unambiguously defines its =
lifetime. It is obvious that the object should be deallocated once it goes =
out of scope, so obvious that it is handled by the compiler automatically. =
Dynamic memory allocation allows the programmer to control the lifetime of =
the object, but with power comes responsibilities. The programmer must ensu=
re that the object is deallocated when it is no longer used, and that the o=
bject is not used after it has been deallocated.
              </p>
              <p>
                When multiple pointers to the same object are held by diffe=
rent parties, it is unclear who should be responsible for deallocating the =
object. In fact, there is no trivial way to determine whether the object is=
 even safe to deallocate, since there is no way to tell whether another poi=
nter to the same address exists. The worst part is that pointers can also p=
oint to addresses on the stack, so there is no way to determine whether an =
object pointed to by a pointer can even be deallocated by the programmer at=
 all.
              </p>
              <p>
                In an attempt to solve this ownership problem of pointers i=
n C++, we implement the concept of smart pointers, which are wrappers of or=
dinary pointers, with a few restrictions and some extra utilities. Together=
 with the ordinary pointer, the smart pointer keeps track of the number of =
smart pointers holding the same address, and automatically deallocates the =
object when no instances of smart pointers hold the address. To ensure that=
 smart pointers do not accidentally deallocate objects with other reference=
s held as ordinary pointers or references, smart pointers can only be initi=
alized or assigned with a newly allocated address or an address held by ano=
ther instance of smart pointer. The reference counters are always increment=
ed or decremented appropriately by the constructors, destructor, assignment=
 operator and mutators.
              </p>
              <p>
                As an example to demonstrate the ownership problem and the =
application of the smart pointers we just implemented, the second half of t=
his assignment will be an implementation of a simple representation of grap=
hs and operations on them. Since a node can be the neighbor of, and hence h=
ave its reference held by multiple other nodes, smart pointers can be used =
to keep track of the number of held references of a node, and deallocate a =
node when no other nodes hold a reference to it.
              </p>
            <p></p>
          </div>

          <div class=3D"card-footer text-muted">
            <p>
              We value academic integrity very highly. Please read the <a h=
ref=3D"https://course.cse.ust.hk/comp2012/#honorcode">Honor Code</a> sectio=
n on our course web page to make sure you understand what is considered as =
plagiarism and what the penalties are. The following are some of the highli=
ghts:
              </p><ul>
                <li>
                  Do NOT try your "luck" - we use some sophisticated plagia=
rism detection software to find cheaters. It is much better than most stude=
nts think. It has been proven times and times again tricks didn't work. We =
also review codes for potential cases manually.
                </li>
                <li>
                  The penalty (for <b>BOTH</b> the copier and the copiee) i=
s not just getting a zero in your assignment - it is much more than that. I=
t is simply not worth to cheat at all. You would hurt your friend and yours=
elf by doing that. It is obvious that a real friend won't ask you to get in=
volved in a plagiarism act in any way due to the consequences. Read the Hon=
or Code again before you even try to think about cheating.
                </li>
                <li>
                  Serious offenders will fail the course immediately and th=
ere may be additional disciplinary actions from the department and universi=
ty.
                </li>
              </ul>
            <p></p>
          </div>
        </div>

        <!-- Download section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"download">
            <h3 class=3D"card-title">Download</h3>
            <p class=3D"card-text">
              </p><p>
                Skeleton code: <a href=3D"https://course.cse.ust.hk/comp201=
2/assignments/assignment3/files/pa3-skeleton.zip">pa3-skeleton.zip</a>
              </p>
              <p>
                Please note that <b>you should only submit the required fil=
es</b>. While you may modify other files to add your own test cases, you sh=
ould make sure your submitted files can be compiled with the original <code=
>main.cpp</code> and header files on ZINC.
              </p>
              <p>
                If you use VS Code, you may follow the <a href=3D"https://c=
ourse.cse.ust.hk/comp2011/labs/vscode/#terminal">creating a project and usi=
ng the terminal for custom compilation command</a> section on our VS Code u=
sage tutorial. That is, create a folder to hold all the extracted files in =
your file explorer, then open this folder in VS Code. You can then use the =
terminal command <code>g++ -std=3Dc++11 -o programName main.cpp</code> to c=
ompile all sources in the folder to the program. You are also welcome to cr=
eate a Makefile for it yourself. After the compilation, you can then use th=
e command <code>./programName</code> to run the program.=20
              </p>
            <p></p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Download
          </div>
        </div>

        <!-- Review section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"review">
            <h3 class=3D"card-title">Review</h3>
            <p class=3D"card-text">
              <!-- We first review lambda expressions, which you can (optio=
nally) use to implement some of the functions, followed by graphs, which is=
 used as an example to demonstrate the ownership problem. -->
              We first review graphs, which is used as an example to demons=
trate the ownership problem in this assignment.
            </p>

            <!-- <h4 id=3D"lambda">Lambda expressions</h4>
            <p>
              <a href=3D"https://en.cppreference.com/w/cpp/language/lambda"=
><i>Lambda expressions</i></a> construct unnamed function objects, optional=
ly capturing variables in scope. They have been covered in <a href=3D"https=
://course.cse.ust.hk/comp2012/notes/h.review-const-lambda.pdf">the introduc=
tion lecture</a>. You are encouraged to review the lecture notes if you are=
 not familiar with them, since they will be used in the last part of this a=
ssignment. Here's a quick summary:
            </p>
            <pre><code>[ <i>captures</i> ] ( <i>params</i> ) { <i>body</i> =
}</code></pre>
            <p>
              <code><i>captures</i></code> is a comma-separated list of cap=
tures, which may begin with a capture default <code>=3D</code> or <code>&</=
code>, which implicitly captures the used variables by value or by referenc=
e respectively. A capture may be specified with an identifier, or an <code>=
&</code> followed by an identifier, which captures the variable by value or=
 by reference respectively when a default capture is absent, or specifies a=
 different mode of capture when a default capture is present.
            </p>

            <h4 id=3D"graph">Graphs</h4> -->
            <p>
              A <a href=3D"https://en.wikipedia.org/wiki/Graph_(discrete_ma=
thematics)">graph</a> is a structure consisting of a set of <i>nodes</i> an=
d a set of <i>edges</i>, which are pairs of nodes. In this assignment, we c=
onsider undirected graphs only, where an edge from a node <code>n1</code> t=
o another node <code>n2</code> is also an edge from <code>n2</code> to <cod=
e>n1</code>. Additionally, self-edges (an edge from a node to itself) and d=
uplicate edges are forbidden.
            </p>
            <p>
              If an edge from <code>n1</code> to <code>n2</code> exists, we=
 say that <code>n2</code> is a <i>neighbor</i> of <code>n1</code>. To repre=
sent a graph, we store the adjacency list of each node, which is simply a l=
ist of its neighbors. The <i>degree</i> of a node is the number of its neig=
hbors.
            </p>
            <p>
              A node <code>nk</code> is said to be <i>reachable</i> from a =
node <code>n0</code> if a sequence of edges <code>(n0, n1), (n1, n2), ..., =
(nk-1, nk)</code> exists. A <i>connected subgraph</i> of a node <code>n</co=
de> is the set of reachable nodes from <code>n</code>.
            </p>
            <p>
              As an example of graphs, think of the flights of an airline. =
The airports served by the airline are represented as nodes, and flights be=
tween two airports are represented as edges. The degree of a node (an airpo=
rt) would then be the number of other airports connected by a direct flight=
. An airport is reachable from another airport if a sequence of flights con=
nects them. And the connected subgraph of an airport is the set of airport =
reachable by an arbitrary number of flights. Natually, the airline would pr=
efer not to waste storage space for airports they no longer serve, so this =
is a perfect application of our smart pointers, which would deallocate the =
data of an airport when all flights to it have been discontinued (i.e. all =
edges of the node have been removed).
            </p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Review
          </div>
        </div>

        <!-- Description section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"description">
            <h3 class=3D"card-title">Description</h3>
            <p class=3D"card-text">
              This assignment can be divided into three parts, with each de=
pending on the previous one. The first two parts each consists of a class t=
emplate, and the last part consists of some function templates that operate=
 on the class templates. You should ensure that memory leak does not occur =
in <b>all</b> of the functions you implement.
            </p>
           =20
            <h4 id=3D"smartptr">Part (A) <code>SmartPtr&lt;T&gt;</code></h4=
>
            <p>
              </p><p>
                The class template <code>SmartPtr&lt;T&gt;</code> declared =
in <code>smartptr.h</code> provides an abstraction for handling memory allo=
cation and deallocation using reference counting. It contains the following=
 data members:
              </p>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">T<=
span class=3D"token operator">*</span> ptr<span class=3D"token punctuation"=
>;</span>
<span class=3D"token keyword">unsigned</span> <span class=3D"token keyword"=
>int</span><span class=3D"token operator">*</span> count<span class=3D"toke=
n punctuation">;</span></code></pre>
              <p>
                <code>ptr</code> is a pointer to type <code>T</code>. If th=
e address stored in <code>ptr</code> is <code>nullptr</code>, we say that t=
his <code>SmartPtr</code> is <i>null</i>. If <code>ptr</code> is not <code>=
nullptr</code>, it should point to a valid, allocated address. Note that a =
null <code>SmartPtr</code> only conceptually represents a null pointer, and=
 the <code>SmartPtr</code> object itself is still defined. All member funct=
ions beside <code>operator*</code> can still be safely called on a null <co=
de>SmartPtr</code>.
              </p>
              <p>
                <code>count</code> is a pointer to type <code>unsigned int<=
/code>, which is used to store the number of <code>SmartPtr</code> instance=
s containing the address <code>ptr</code>. <code>count</code> should be <co=
de>nullptr</code> if and only if <code>ptr</code> is <code>nullptr</code>.
              </p>
              <p>
                Memory management of the object referred to by <code>SmartP=
tr</code>s are managed by the constructor, destructor, <code>set</code> and=
 <code>unset</code> member functions. The only ways to initialize and assig=
n <code>ptr</code> is by setting it to <code>nullptr</code>, an address all=
ocated by copy-constructing an instance of type <code>T</code>, or the addr=
ess contained in another instance of <code>SmartPtr</code>.
              </p>
              <p>
                When a <code>SmartPtr</code> is created for or set to a new=
 <code>T</code> object, <code>count</code> should be allocated to store the=
 number 1, meaning, the address of the new <code>T</code> object is stored =
in only 1 <code>SmarPtr</code>. For example:
                </p><pre class=3D" language-cpp"><code class=3D" language-c=
pp">SmartPtr sp <span class=3D"token punctuation">{</span><span class=3D"to=
ken number">42</span><span class=3D"token punctuation">}</span><span class=
=3D"token punctuation">;</span></code></pre>
                The number pointed to by <code>count</code> of <code>sp</co=
de> is now 1 and <code>ptr</code> is allocated to store 42.
                <pre class=3D" language-cpp"><code class=3D" language-cpp">=
sp<span class=3D"token punctuation">.</span><span class=3D"token function">=
set</span><span class=3D"token punctuation">(</span><span class=3D"token nu=
mber">0</span><span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">;</span></code></pre>
                Again, the number pointed to by <code>count</code> of <code=
>sp</code> is set to 1 and <code>ptr</code> is allocated to store 0.
              <p></p>
              <p>
                When a <code>SmartPtr</code> is copied by the copy construc=
tor or assignment operator, the address stored in <code>ptr</code> is being=
 copied, the number pointed to by <code>count</code> has to be incremented =
by 1. It means that the <code>T</code> object pointed by to <code>ptr</code=
> is being pointed to by one more <code>SmartPtr</code> instance.
              </p>
              <p>
                Similarly, when a <code>SmartPtr</code> is destructed or se=
t to refer to another object, the number pointed to by <code>count</code> h=
as to be decremented. When the number becomes zero, it means that this inst=
ance of <code>SmartPtr</code> is the last to hold a reference to the object=
 pointed to by <code>ptr</code>. Both <code>ptr</code> and <code>count</cod=
e> should be deallocated properly.
              </p>

              <h5>Member functions</h5>
              <h5><code>SmartPtr&lt;T&gt;::SmartPtr</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token function">SmartPtr</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">;</span></code></pre>
              <p>
                The default constructor initializes a null <code>SmartPtr</=
code>.
              </p>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token function">SmartPtr</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token keyword">const</span> T<span class=3D"token=
 operator">&amp;</span> val<span class=3D"token punctuation">)</span><span =
class=3D"token punctuation">;</span></code></pre>
              <p>
                The conversion constructor allocates memory for a value of =
type <code>T</code> by copy-constructing an instance of <code>T</code> from=
 <code>val</code> and storing its address in <code>ptr</code>. <code>count<=
/code> should be allocated and set to 1.
              </p>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token function">SmartPtr</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token keyword">const</span> SmartPtr<span class=
=3D"token operator">&lt;</span>T<span class=3D"token operator">&gt;</span><=
span class=3D"token operator">&amp;</span> that<span class=3D"token punctua=
tion">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                The copy constructor does not allocate additional memory, b=
ut instead stores the same address in <code>ptr</code> as <code>that.ptr</c=
ode>. As this means one more <code>SmartPtr</code> instance is pointing to =
the address that <code>that.ptr</code> points to, the number pointed by <co=
de>count</code> needs to be incremented accordingly.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::~SmartPtr</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token operator">~</span><span class=3D"token function">SmartPt=
r</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                The destructor deallocates the memory pointed to by <code>p=
tr</code> when no other instances of <code>SmartPtr</code> hold the same ad=
dress.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::operator=3D</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">Sm=
artPtr<span class=3D"token operator">&lt;</span>T<span class=3D"token opera=
tor">&gt;</span><span class=3D"token operator">&amp;</span> <span class=3D"=
token keyword">operator</span><span class=3D"token operator">=3D</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token keyword">const</=
span> SmartPtr<span class=3D"token operator">&lt;</span>T<span class=3D"tok=
en operator">&gt;</span><span class=3D"token operator">&amp;</span> that<sp=
an class=3D"token punctuation">)</span><span class=3D"token punctuation">;<=
/span></code></pre>
              <p>
                The assignment operator stores the same address in <code>pt=
r</code> as <code>that.ptr</code>. The memory originally pointed to by <cod=
e>ptr</code> is deallocated when no other instances of <code>SmartPtr</code=
> hold the same address. As this means one more <code>SmartPtr</code> insta=
nce is pointing to the address that <code>that.ptr</code> points to, the nu=
mber pointed by <code>count</code> needs to be incremented accordingly. The=
 returning value should allow cascading assignment, in other words, <code>s=
p1 =3D sp2 =3D sp3;</code> should be equivalent to <code>sp2 =3D sp3; sp1 =
=3D sp2;</code>.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::set</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">void</span> <span class=3D"token function">set<=
/span><span class=3D"token punctuation">(</span><span class=3D"token keywor=
d">const</span> T<span class=3D"token operator">&amp;</span> val<span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">;</span></=
code></pre>
              <p>
                Allocates memory for a value of type <code>T</code> by copy=
-constructing an instance of <code>T</code> from <code>val</code> and stori=
ng its address in <code>ptr</code>. The memory originally pointed to by <co=
de>ptr</code> is deallocated when no other instances of <code>SmartPtr</cod=
e> hold the same address. This is the first <code>SmartPtr</code> instance =
pointing to a <code>T</code> instance with value <code>val</code>, the numb=
er pointed by <code>count</code> should be 1.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::unset</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">void</span> <span class=3D"token function">unse=
t</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                Sets this <code>SmartPtr</code> to null. The memory origina=
lly pointed to by <code>ptr</code> is deallocated when no other instances o=
f <code>SmartPtr</code> hold the same address.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::is_null</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">bool</span> <span class=3D"token function">is_n=
ull</span><span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span> <span class=3D"token keyword">const</span><span class=
=3D"token punctuation">;</span></code></pre>
              <p>
                Returns <code>true</code> if this <code>SmartPtr</code> is =
null, and <code>false</code> otherwise.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::operator=3D=3D
SmartPtr&lt;T&gt;::operator!=3D</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">bool</span> <span class=3D"token keyword">opera=
tor</span><span class=3D"token operator">=3D=3D</span><span class=3D"token =
punctuation">(</span><span class=3D"token keyword">const</span> SmartPtr<sp=
an class=3D"token operator">&lt;</span>T<span class=3D"token operator">&gt;=
</span><span class=3D"token operator">&amp;</span> that<span class=3D"token=
 punctuation">)</span> <span class=3D"token keyword">const</span><span clas=
s=3D"token punctuation">;</span>
<span class=3D"token keyword">bool</span> <span class=3D"token keyword">ope=
rator</span><span class=3D"token operator">!=3D</span><span class=3D"token =
punctuation">(</span><span class=3D"token keyword">const</span> SmartPtr<sp=
an class=3D"token operator">&lt;</span>T<span class=3D"token operator">&gt;=
</span><span class=3D"token operator">&amp;</span> that<span class=3D"token=
 punctuation">)</span> <span class=3D"token keyword">const</span><span clas=
s=3D"token punctuation">;</span></code></pre>
              <p>
                Compares the pointer member <code>ptr</code> of two instanc=
es of <code>SmartPtr</code> using the corresponding operators.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::operator*</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">T<=
span class=3D"token operator">&amp;</span> <span class=3D"token keyword">op=
erator</span><span class=3D"token operator">*</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">)</span> <span class=
=3D"token keyword">const</span><span class=3D"token punctuation">;</span></=
code></pre>
              <p>
                Returns by reference the object pointed to by <code>ptr</co=
de>. Whether <code>ptr</code> points to <code>nullptr</code> is not checked=
.
              </p>

              <h5><code>SmartPtr&lt;T&gt;::operator-&gt;</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">T<=
span class=3D"token operator">*</span> <span class=3D"token keyword">operat=
or</span><span class=3D"token operator">-&gt;</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">)</span> <span class=
=3D"token keyword">const</span><span class=3D"token punctuation">;</span></=
code></pre>
              <p>
                Returns the address stored in <code>ptr</code>.
              </p>

              <h5>Non-member functions</h5>
              <h5><code>operator&lt;&lt;</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
std<span class=3D"token operator">::</span>ostream<span class=3D"token oper=
ator">&amp;</span> <span class=3D"token keyword">operator</span><span class=
=3D"token operator">&lt;&lt;</span><span class=3D"token punctuation">(</spa=
n>std<span class=3D"token operator">::</span>ostream<span class=3D"token op=
erator">&amp;</span> os<span class=3D"token punctuation">,</span> <span cla=
ss=3D"token keyword">const</span> SmartPtr<span class=3D"token operator">&l=
t;</span>T<span class=3D"token operator">&gt;</span><span class=3D"token op=
erator">&amp;</span> sp<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">;</span></code></pre>
              <p>
                If <code>sp</code> is not null, outputs to <code>os</code> =
the string "<code>SmartPtr(</code>", followed by the object pointed to by <=
code>sp.ptr</code>, then by a "<code>,</code>", then by the number of <code=
>SmartPtr</code> instances containing the address <code>sp.ptr</code>, fina=
lly by "<code>)</code>". The object pointed to by <code>sp.ptr</code> shoul=
d be output by invoking <code>operator&lt;&lt;</code>. Otherwise, outputs t=
o <code>os</code> the string "<code>SmartPtr()</code>".
              </p>
              <p>
                For example, if <code>sp.ptr</code> points to a string "Hel=
lo World", with two instances of <code>SmartPtr</code> holding the same add=
ress, <code>os &lt;&lt; sp</code> should output "<code>SmartPtr(Hello World=
,2)</code>" to <code>os</code>.
              </p>
              <p>
                The return value should follow the convention as the standa=
rd library, where chaining multiple invocations of <code>operator&lt;&lt;</=
code> outputs to the same stream. For example, <code>os &lt;&lt; sp &lt;&lt=
; "\n"</code> would output a newline character following "<code>SmartPtr(He=
llo World,2)</code>" to <code>os</code>.
              </p>
              <p>
                <b>Implement this function template in <code>smartptr-outpu=
t.tpp</code>.</b> No other required implementations should be present in <c=
ode>smartptr-output.tpp</code>. For grading, besides the cases explicitly t=
esting <code>operator&lt;&lt;</code>, your implementation in <code>smartptr=
-output.tpp</code> will be swapped for a standard implementation.
              </p>
            <p></p>

            <h4 id=3D"node">Part (B) <code>Node&lt;T&gt;</code></h4>
            <p>
              </p><p>
                The class template <code>Node&lt;T&gt;</code> represents a =
node or vertex in a graph. It contains the following data members:
              </p>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">T =
val<span class=3D"token punctuation">;</span>
SmartPtr<span class=3D"token operator">&lt;</span>Node<span class=3D"token =
operator">&lt;</span>T<span class=3D"token operator">&gt;&gt;</span><span c=
lass=3D"token operator">*</span> out<span class=3D"token punctuation">;</sp=
an>
<span class=3D"token keyword">unsigned</span> <span class=3D"token keyword"=
>int</span> capacity<span class=3D"token punctuation">;</span>
<span class=3D"token keyword">unsigned</span> <span class=3D"token keyword"=
>int</span> size_p<span class=3D"token punctuation">;</span></code></pre>
              <p>
                <code>val</code> is the data contained in a node, which may=
 be used to identify nodes. (However, note that the equality of nodes are d=
etermined by reference equality, not the equality of their <code>val</code>=
 field.) <code>out</code> is a dynamically allocated array of <code>SmartPt=
r</code>s to the neighbors of a node. <code>capacity</code> is the actual a=
llocated size of the array, while <code>size_p</code> is the number of "use=
d" cells in the array. When a neighbor is removed, the corresponding <code>=
SmartPtr</code> in the array is simply set to null, without modifying other=
 <code>SmartPtr</code>s or <code>size_p</code>. When a neighbor is added, i=
ts <code>SmartPtr</code> is always appended at the end of the "used" cells,=
 not any of the null cells resulted from removing a neighbor.
              </p>

              <h5>Member functions</h5>
              <h5><code>Node&lt;T&gt;::Node</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token function">Node</span><span class=3D"token punctuation">(=
</span><span class=3D"token keyword">const</span> T<span class=3D"token ope=
rator">&amp;</span> val<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">;</span></code></pre>
              <p>
                The conversion constructor initializes a <code>Node</code> =
with no neighbors by copy-constructing an instance of <code>T</code> from <=
code>val</code>. Memory should not be allocated for the array of <code>Smar=
tPtr</code> to neighbors.
              </p>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token function">Node</span><span class=3D"token punctuation">(=
</span><span class=3D"token keyword">const</span> Node<span class=3D"token =
operator">&lt;</span>T<span class=3D"token operator">&gt;</span><span class=
=3D"token operator">&amp;</span> that<span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">;</span></code></pre>
              <p>
                The copy constructor initializes a <code>Node</code> with n=
o neighbors by copy-constructing an instance of <code>T</code> from <code>t=
hat.val</code>. Memory should not be allocated for the array of <code>Smart=
Ptr</code> to neighbors.
              </p>

              <h5><code>Node&lt;T&gt;::~Node</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token operator">~</span><span class=3D"token function">Node</s=
pan><span class=3D"token punctuation">(</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                The destructor deallocates any memory allocated for a node.
              </p>

              <h5><code>Node&lt;T&gt;::operator*</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">T<=
span class=3D"token operator">&amp;</span> <span class=3D"token keyword">op=
erator</span><span class=3D"token operator">*</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>
<span class=3D"token keyword">const</span> T<span class=3D"token operator">=
&amp;</span> <span class=3D"token keyword">operator</span><span class=3D"to=
ken operator">*</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span> <span class=3D"token keyword">const</span><=
span class=3D"token punctuation">;</span></code></pre>
              <p>
                The indirection operator returns by reference the member <c=
ode>val</code>.
              </p>

              <h5><code>Node&lt;T&gt;::degree</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">unsigned</span> <span class=3D"token keyword">i=
nt</span> <span class=3D"token function">degree</span><span class=3D"token =
punctuation">(</span><span class=3D"token punctuation">)</span> <span class=
=3D"token keyword">const</span><span class=3D"token punctuation">;</span></=
code></pre>
              <p>
                Returns the number of neighbors of a node.
              </p>

              <h5><code>Node&lt;T&gt;::size</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">unsigned</span> <span class=3D"token keyword">i=
nt</span> <span class=3D"token function">size</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">)</span> <span class=
=3D"token keyword">const</span><span class=3D"token punctuation">;</span></=
code></pre>
              <p>
                Returns the number of "used" cells in the array of <code>Sm=
artPtr</code> to neighbors, i.e. <code>size_p</code>.
              </p>

              <h5><code>Node&lt;T&gt;::operator[]</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">Sm=
artPtr<span class=3D"token operator">&lt;</span>Node<span class=3D"token op=
erator">&lt;</span>T<span class=3D"token operator">&gt;&gt;</span> <span cl=
ass=3D"token keyword">operator</span><span class=3D"token punctuation">[</s=
pan><span class=3D"token punctuation">]</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token keyword">unsigned</span> <span class=3D"t=
oken keyword">int</span> i<span class=3D"token punctuation">)</span> <span =
class=3D"token keyword">const</span><span class=3D"token punctuation">;</sp=
an></code></pre>
              <p>
                The subscript operator returns the <code>SmartPtr</code> at=
 index <code>i</code> of the array of neighbors. The index includes any nul=
l <code>SmartPtr</code>s resulting the removal of neighbors. The array boun=
ds are unchecked.
              </p>

              <h5><code>Node&lt;T&gt;::add</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">void</span> <span class=3D"token function">add<=
/span><span class=3D"token punctuation">(</span>SmartPtr<span class=3D"toke=
n operator">&lt;</span>Node<span class=3D"token operator">&lt;</span>T<span=
 class=3D"token operator">&gt;&gt;</span> n<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                Adds <code>n</code> to the array of neighbors by appending =
it to the end of the "used" cells. Does nothing if <code>n</code> is null, =
or if <code>n</code> is non-null and already a neighbor, or if <code>n</cod=
e> points to this node itself. If the array of neighbors is full, expand it=
s capacity to double its current capacity or <code>init_capacity</code>, wh=
ichever is larger.
              </p>

              <h5><code>Node&lt;T&gt;::remove</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">void</span> <span class=3D"token function">remo=
ve</span><span class=3D"token punctuation">(</span>SmartPtr<span class=3D"t=
oken operator">&lt;</span>Node<span class=3D"token operator">&lt;</span>T<s=
pan class=3D"token operator">&gt;&gt;</span> n<span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                Removes <code>n</code> from the array of neighbors. Does no=
thing if <code>n</code> is null, or if <code>n</code> is not a neighbor. Do=
 not modify any other <code>SmartPtr</code>s or <code>size_p</code>.
              </p>

              <h5><code>Node&lt;T&gt;::exists</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">bool</span> <span class=3D"token function">exis=
ts</span><span class=3D"token punctuation">(</span>SmartPtr<span class=3D"t=
oken operator">&lt;</span>Node<span class=3D"token operator">&lt;</span>T<s=
pan class=3D"token operator">&gt;&gt;</span> n<span class=3D"token punctuat=
ion">)</span> <span class=3D"token keyword">const</span><span class=3D"toke=
n punctuation">;</span></code></pre>
              <p>
                Returns <code>true</code> if <code>n</code> is non-null and=
 is a neighbor of this node. Returns <code>false</code> otherwise.
              </p>

              <h5><code>Node&lt;T&gt;::find</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp">Sm=
artPtr<span class=3D"token operator">&lt;</span>Node<span class=3D"token op=
erator">&lt;</span>T<span class=3D"token operator">&gt;&gt;</span> <span cl=
ass=3D"token function">find</span><span class=3D"token punctuation">(</span=
>T val<span class=3D"token punctuation">)</span> <span class=3D"token keywo=
rd">const</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                Returns a <code>SmartPtr</code> to the first neighbor conta=
ining a value equal to <code>val</code>. Returns a null <code>SmartPtr</cod=
e> if none of the neighbors contain a value equal to <code>val</code>.
              </p>

              <h5>Non-member functions</h5>
              <h5><code>operator&lt;&lt;</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
std<span class=3D"token operator">::</span>ostream<span class=3D"token oper=
ator">&amp;</span> <span class=3D"token keyword">operator</span><span class=
=3D"token operator">&lt;&lt;</span><span class=3D"token punctuation">(</spa=
n>std<span class=3D"token operator">::</span>ostream<span class=3D"token op=
erator">&amp;</span> os<span class=3D"token punctuation">,</span> <span cla=
ss=3D"token keyword">const</span> Node<span class=3D"token operator">&lt;</=
span>T<span class=3D"token operator">&gt;</span><span class=3D"token operat=
or">&amp;</span> n<span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">;</span></code></pre>
              <p>
                Outputs to <code>os</code> the string "<code>Node(</code>",=
 followed by the value <code>val</code>, then by a "<code>,{</code>", then =
by a list of values <code>val</code> its neighbors, separated by commas, fi=
nally by "<code>})</code>". The values <code>val</code> should be output by=
 invoking <code>operator&lt;&lt;</code>.
              </p>
              <p>
                For example, if <code>n.val</code> is the integer 0, and <c=
ode>n</code> has three neighbors containing 1, 2 and 3 respectively, <code>=
os &lt;&lt; n</code> should output "<code>Node(0,{1,2,3})</code>" to <code>=
os</code>.
              </p>
              <p>
                The return value should follow the convention as the standa=
rd library, where chaining multiple invocations of <code>operator&lt;&lt;</=
code> outputs to the same stream.
              </p>
              <p>
                <b>Implement this function template in <code>graph-output.t=
pp</code>.</b> No other required implementations should be present in <code=
>graph-output.tpp</code>. For grading, besides the cases explicitly testing=
 <code>operator&lt;&lt;</code>, your implementation in <code>graph-output.t=
pp</code> will be swapped for a standard implementation.
              </p>

              <h5>Note: on the array <code>out</code> and related operation=
s</h5>
              <p>
                In case you are confused by the above description, here's a=
n example to illustrate the effect of the operations on the array <code>out=
</code> and the data members. Take <code>init_capacity =3D 4</code> in this=
 example. <code>x</code> denotes a null <code>SmartPtr</code>.
              </p>
              <p>
                Upon initialization, <code>out</code> should point to <code=
>nullptr</code>.
              </p>
              <pre><code>Node<int> n {0};

       v size_p =3D capacity =3D 0
out[i] |
    i   0  1  2  3  4  5  6  7</int></code></pre>
              <p>
                As the first node is added as a neighbor, <code>out</code> =
is expanded to <code>init_capacity</code>. When each node is added, the ele=
ment at index <code>size_p</code> is assigned the value of the correspondin=
g <code>SmartPtr</code>, then <code>size_p</code> is incremented.
              </p>
              <pre><code>n.add(n1);
n.add(n2);
n.add(SmartPtr&lt;Node&lt;int&gt;&gt;{});
n.add(n3);

       size_p =3D 3  4 =3D capacity
                v  v
out[i] |n1|n2|n3| x|
     i   0  1  2  3  4  5  6  7</code></pre>
          <p>
            When a neighbor is removed, the corresponding element is <code>=
out</code> is set to a null <code>SmartPtr</code>. The rest of the elements=
 are not moved to fill the gap, and <code>size_p</code> is unchanged.
          </p>
          <pre><code>n.remove(n2);

       size_p =3D 3  4 =3D capacity
                v  v
out[i] |n1| x|n3| x|
     i   0  1  2  3  4  5  6  7</code></pre>
          <p>
            When more neighbors are added after a neighbor has been removed=
, their entries are still appended to the end of the "used" cells in the ar=
ray, not used to fill the gaps. When the array is full, expand its capacity=
 to twice is original capacity.
          </p>
          <pre><code>n.add(n4);
n.add(n2);

             size_p =3D 5        8 =3D capacity
                      v        v
out[i] |n1| x|n3|n4|n2| x| x| x|
     i   0  1  2  3  4  5  6  7</code></pre>
            <p></p>

            <h4 id=3D"graph-op">Part (C) Graph operations</h4>
            <p>
              </p><p>
                The following are function templates that operate on <code>=
SmartPtr</code>s to <code>Node</code>s. Graphs should be constructed using =
the following functions instead of directly calling the member functions of=
 <code>Node</code>.
              </p>

              <h5><code>new_node</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
SmartPtr<span class=3D"token operator">&lt;</span>Node<span class=3D"token =
operator">&lt;</span>T<span class=3D"token operator">&gt;&gt;</span> <span =
class=3D"token function">new_node</span><span class=3D"token punctuation">(=
</span><span class=3D"token keyword">const</span> T<span class=3D"token ope=
rator">&amp;</span> val<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">;</span></code></pre>
              <p>
                Returns a <code>SmartPtr</code> to a new instance of <code>=
Node</code>. The <code>val</code> member of <code>Node</code> should be cop=
y-constructed (twice) from <code>val</code>.
              </p>

              <h5><code>remove_node</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
<span class=3D"token keyword">void</span> <span class=3D"token function">re=
move_node</span><span class=3D"token punctuation">(</span>SmartPtr<span cla=
ss=3D"token operator">&lt;</span>Node<span class=3D"token operator">&lt;</s=
pan>T<span class=3D"token operator">&gt;&gt;</span> n<span class=3D"token p=
unctuation">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                Removes the node <code>n</code> from a graph by removing al=
l edges between <code>n</code> and each of its neighbors, which would deall=
ocate their memory if no other <code>SmartPtr</code>s hold a reference to t=
hem. Does nothing if <code>n</code> is null.
              </p>

              <h5><code>add_edge</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
<span class=3D"token keyword">void</span> <span class=3D"token function">ad=
d_edge</span><span class=3D"token punctuation">(</span>SmartPtr<span class=
=3D"token operator">&lt;</span>Node<span class=3D"token operator">&lt;</spa=
n>T<span class=3D"token operator">&gt;&gt;</span> n1<span class=3D"token pu=
nctuation">,</span> SmartPtr<span class=3D"token operator">&lt;</span>Node<=
span class=3D"token operator">&lt;</span>T<span class=3D"token operator">&g=
t;&gt;</span> n2<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">;</span></code></pre>
              <p>
                Adds an edge connecting <code>n1</code> and <code>n2</code>=
 by adding each of the nodes to the neighbor list of the other node. Does n=
othing if either <code>n1</code> or <code>n2</code> is null, or if an edge =
between <code>n1</code> and <code>n2</code> already exists, or if <code>n1<=
/code> and <code>n2</code> refers to the same node.
              </p>

              <h5><code>remove_edge</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
<span class=3D"token keyword">void</span> <span class=3D"token function">re=
move_edge</span><span class=3D"token punctuation">(</span>SmartPtr<span cla=
ss=3D"token operator">&lt;</span>Node<span class=3D"token operator">&lt;</s=
pan>T<span class=3D"token operator">&gt;&gt;</span> n1<span class=3D"token =
punctuation">,</span> SmartPtr<span class=3D"token operator">&lt;</span>Nod=
e<span class=3D"token operator">&lt;</span>T<span class=3D"token operator">=
&gt;&gt;</span> n2<span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">;</span></code></pre>
              <p>
                Removes the edge between <code>n1</code> and <code>n2</code=
> by removing each of the nodes from the neighbor list of the other node, w=
hich would deallocate their memory if no other <code>SmartPtr</code>s hold =
a reference to them. Does nothing if either <code>n1</code> or <code>n2</co=
de> is null, or if an edge between <code>n1</code> and <code>n2</code> does=
 not exist.
              </p>

              <h5><code>remove_graph</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
<span class=3D"token keyword">void</span> <span class=3D"token function">re=
move_graph</span><span class=3D"token punctuation">(</span>SmartPtr<span cl=
ass=3D"token operator">&lt;</span>Node<span class=3D"token operator">&lt;</=
span>T<span class=3D"token operator">&gt;&gt;</span> root<span class=3D"tok=
en punctuation">)</span><span class=3D"token punctuation">;</span></code></=
pre>
              <p>
                Removes every node from the connected subgraph of <code>roo=
t</code> by removing all edges between each pair of nodes, which would deal=
locate their memory if no other <code>SmartPtr</code>s hold a reference to =
them. Does nothing if <code>root</code> is null.
              </p>

              <!-- <h5><code>bfs</code></h5>
              <pre><code class=3D"language-cpp">template &lt;typename T, ty=
pename U&gt;
SmartPtr&lt;Node&lt;T&gt;&gt; bfs(SmartPtr&lt;Node&lt;T&gt;&gt; root, U pre=
d);</code></pre>
              <p>
                Takes a predicate <code>pred</code> as argument, and finds =
a node satisfying <code>pred</code> by breadth-first search. <code>pred</co=
de> should be a callable (i.e. function pointer, function object or lambda =
expression) taking a <code>SmartPtr&lt;Node&lt;T&gt;&gt;</code> as its argu=
ment and returning a boolean. Returns a null <code>SmartPtr</code> if none =
of the nodes satisfy <code>pred</code>, or if <code>root</code> is null.
              </p>
              <p>
                In other words, <code>bfs</code> applies <code>pred</code> =
to <code>SmartPtr</code>s to every node in the connected subgraph of <code>=
root</code> in breadth-first order, until <code>pred</code> returns true, w=
hen the corresponding <code>SmartPtr</code> is returned. If <code>pred</cod=
e> returns false for all nodes in the connected subgraph, a null <code>Smar=
tPtr</code> is returned. If <code>pred</code> mutates the node, its neighbo=
rs are stored before <code>pred</code> is called.
              </p>
              <p>
                The implementation of this function is given to you. You ar=
e not required to understand breadth-first search or the breadth-first orde=
r. You can (and should) utilize this function template to implement the oth=
er functions.
              </p> -->

              <h5><code>find</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
SmartPtr<span class=3D"token operator">&lt;</span>Node<span class=3D"token =
operator">&lt;</span>T<span class=3D"token operator">&gt;&gt;</span> <span =
class=3D"token function">find</span><span class=3D"token punctuation">(</sp=
an>SmartPtr<span class=3D"token operator">&lt;</span>Node<span class=3D"tok=
en operator">&lt;</span>T<span class=3D"token operator">&gt;&gt;</span> roo=
t<span class=3D"token punctuation">,</span> T val<span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">;</span></code></pre>
              <p>
                Finds a node whose <code>val</code> field is equal to <code=
>val</code>. Returns a null <code>SmartPtr</code> if none of the nodes have=
 a <code>val</code> field is equal to <code>val</code>, or if <code>root</c=
ode> is null.
              </p>
              <p>
                For grading, you can assume that there is at most one node =
in the graph whose <code>val</code> field is equal to <code>val</code>, but=
 the rest of the nodes may have equal <code>val</code> fields.
              </p>

              <h5><code>reachable</code></h5>
              <pre class=3D" language-cpp"><code class=3D" language-cpp"><s=
pan class=3D"token keyword">template</span> <span class=3D"token operator">=
&lt;</span><span class=3D"token keyword">typename</span> <span class=3D"tok=
en class-name">T</span><span class=3D"token operator">&gt;</span>
<span class=3D"token keyword">bool</span> <span class=3D"token function">re=
achable</span><span class=3D"token punctuation">(</span>SmartPtr<span class=
=3D"token operator">&lt;</span>Node<span class=3D"token operator">&lt;</spa=
n>T<span class=3D"token operator">&gt;&gt;</span> root<span class=3D"token =
punctuation">,</span> SmartPtr<span class=3D"token operator">&lt;</span>Nod=
e<span class=3D"token operator">&lt;</span>T<span class=3D"token operator">=
&gt;&gt;</span> dest<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">;</span></code></pre>
              <p>
                Returns <code>true</code> if <code>dest</code> is reachable=
 from <code>root</code>, i.e. <code>dest</code> is in the connected subgrap=
h of <code>root</code>, and <code>false</code> otherwise. Returns <code>fal=
se</code> if either <code>root</code> or <code>dest</code> is null.
              </p>
            <p></p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Description
          </div>
        </div>

        <!-- Task section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"tasks">
            <h3 class=3D"card-title">Tasks</h3>
            <p class=3D"card-text">
              </p><p>
                Your task is to implement the missing member functions of t=
he two classes and function templates in <code>smartptr.tpp</code>, <code>s=
martptr-output.tpp</code>, <code>graph.tpp</code> and <code>graph-output.tp=
p</code>.
              </p>
            <p></p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Tasks
          </div>
        </div>

        <!-- Grading section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"grading">
            <h3 class=3D"card-title">Sample Output and Grading</h3>
            <p class=3D"card-text">
              </p><p>
                Your finished program should produce the same output as our=
 <a href=3D"https://course.cse.ust.hk/comp2012/assignments/assignment3/file=
s/pa3-expected.zip">sample output</a> for all given test cases. User input,=
 if any, is omitted in the files. Please note that the sample output, natur=
ally, does not show all possible cases. It is part of the assessment for yo=
u to design your own test cases to test your program. Be reminded to <u>rem=
ove any debugging message</u> that you might have added before submitting y=
our code.
              </p>
              <p>
                There are 27 given test cases of which the code can be foun=
d in the given main function. These 27 test cases are first run without any=
 memory leak checking (they are numbered #1 - #27 on ZINC). Then, the same =
27 test cases will be run again, in the same order, with memory leak checki=
ng (those will be numbered #101 - #127 on ZINC). For example, test case #10=
8 on ZINC is actually the given test case #8 (in the given main function) r=
un with memory leak checking.
              </p>
              <p>
                Each of the test cases run without memory leak checking (i.=
e., #1 - #27 on ZINC) is worth 1 mark. The second run of each test case wit=
h memory leak checking (i.e., #101 - #127 on ZINC) is worth 0.5 mark. The m=
aximum score you can get on ZINC, before the deadline, will therefore be 27=
*(1+0.5) =3D 40.5.
              </p>
            <p></p>

            <h4>About memory leak and other potential errors</h4>
            <p>
              Memory leak checking is done via the <code>-fsanitize=3Daddre=
ss,leak,undefined</code> option (<a href=3D"https://gcc.gnu.org/onlinedocs/=
gcc/Instrumentation-Options.html">related documentation here</a>) of a rece=
nt g++ compiler on Linux (it won't work on Windows for the versions we have=
 tested). Check the "Errors" tab (next to "Your Output" tab in the test cas=
e details popup) for errors such as memory leak. Other errors/bugs such as =
out-of-bounds, use-after-free bugs, and some undefined-behavior-related bug=
s may also be detected. You will get 0 mark for the test case if there is a=
ny error there. Note that if your program has no errors detected by the san=
itizers, then the "Errors" tab may not appear. If you wish to check for mem=
ory leak yourself using the same options, you may follow our <a href=3D"htt=
ps://course.cse.ust.hk/comp2012/assignments/assignment1/leak-checking/">Che=
cking for memory leak yourself</a> guide.
            </p>
     =20
            <h4>After the deadline</h4>
            <p>
              We will have 21 additional test cases which won't be revealed=
 to you before the deadline. Together with the 27 given test cases, there w=
ill then be 48 test cases used to give you the final assignment grade. All =
48 test cases will be run two times as well: once without memory leak check=
ing and once with memory leak checking. The assignment total will therefore=
 be 48*(1+0.5) =3D 72. Details will be provided in the marking scheme which=
 will be released after the deadline.
            </p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Sample Output and Grading
          </div>
        </div>

        <!-- Submission and deadline section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"submission">
            <h3 class=3D"card-title">Submission and Deadline</h3>
            <p class=3D"card-text">
              </p><p>
                <u>Deadline: 23:59:00 on 24 Apr 2022 (Sunday)</u>=20
              </p>
              <p>
                Submit a single zip file <code>pa3.zip</code> containing th=
e following files only: <code>smartptr.tpp</code>, <code>smartptr-output.tp=
p</code>, <code>graph.tpp</code> and <code>graph-output.tpp</code>. Submit =
the file to <a href=3D"https://zinc.cse.ust.hk/">ZINC</a>. ZINC usage instr=
uctions can be found <a href=3D"https://zinc.cse.ust.hk/guide">here</a>.
              </p>
              <p>
                Notes:
                </p><ul>
                  <li>You may submit your file multiple times, but only the=
 last submission will be graded. <b>You do NOT get to choose which version =
we grade.</b> If you submit after the deadline, late penalty will be applie=
d according to the submission time of your last submission.</li>
                  <li>Submit early to avoid any last-minute problem. Only Z=
INC submissions will be accepted.</li>
                  <li>The ZINC server will be very busy on the last day esp=
ecially in the last few hours, so you should expect you would get the gradi=
ng result report not-very-quickly. However, as long as your submission is s=
uccessful, we would grade your latest submission with all test cases after =
the deadline.</li>
                  <li>In the grading report, pay attention to various error=
s reported. For example, <b>under the "make" section, if you see a red cros=
s, click on the STDERR tab to see the compilation errors.</b> You must fix =
those before you can see any program output for the test cases below.</li>
                  <li>Make sure you submit the correct file yourself. You c=
an download your own file back from ZINC to verify. Again, <b>we only grade=
 what you uploaded last to ZINC</b>.</li>
                </ul>
              <p></p>
            <p></p>

            <h4>Compilation Requirement</h4>
            <p>
              It is <strong>required</strong> that your submissions can be =
compiled and run successfully in our online auto-grader ZINC. If we cannot =
even compile your work, it won't be graded. Therefore, for parts that you c=
annot finish, just put in dummy implementation so that your whole program c=
an be compiled for ZINC to grade the other parts that you have done. Empty =
implementations can be like:
              </p><pre class=3D" language-cpp"><code class=3D" language-cpp=
"><span class=3D"token keyword">int</span> <span class=3D"token class-name"=
>SomeClass</span><span class=3D"token operator">::</span><span class=3D"tok=
en function">SomeFunctionICannotFinishRightNow</span><span class=3D"token p=
unctuation">(</span><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>

<span class=3D"token keyword">void</span> <span class=3D"token class-name">=
SomeClass</span><span class=3D"token operator">::</span><span class=3D"toke=
n function">SomeFunctionICannotFinishRightNowButIWantOtherPartsGraded</span=
><span class=3D"token punctuation">(</span><span class=3D"token punctuation=
">)</span>
<span class=3D"token punctuation">{</span>
<span class=3D"token punctuation">}</span></code></pre>
            <p></p>

            <h4>Late submission policy</h4>
            <p>
              There will be a penalty of -1% (out of a maximum 100%) for ev=
ery minute you are late. For instance, since the deadline of the assignment=
 is 23:59:00 on 24 Apr, if you submit your solution at 1:00:00 on 25 Apr, t=
here will be a penalty of -61% for your assignment. However, the lowest gra=
de you may get from an assignment is zero: any negative score after the ded=
uction due to a late penalty (and any other penalties) will be reset to zer=
o.
            </p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Submission and Deadline
          </div>
        </div>

        <!-- FAQ section -->
        <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"faq">
            <h3 class=3D"card-title">Frequently Asked Questions</h3>
            <p class=3D"card-text">
              </p><h4>General</h4>
              <p>
                Q: My code doesn't work / there is an error, here is the co=
de, can you help me fix it?
              </p>
              <p>
                A: As the assignment is a major course assessment, to be fa=
ir, you are supposed to work on it on your own and we should not finish the=
 tasks for you. We might provide some very general hints to you, but we sha=
ll not fix the problem or debug for you.
              </p>
              <br>

              <p>
                Q: Can I add extra helper functions?
              </p>
              <p>
                A: You may do so in the files that you are allowed to modif=
y and submit. That implies you cannot add new member functions to any given=
 class.
              </p>
              <br>

              <p>
                Q: Can I include additional libraries?
              </p>
              <p>
                A: No. Everything you need is already included - there is n=
o need for you to add any include statement (under our official environment=
).
              </p>
              <br>

              <p>
                Q: Can I use global variable or static variable such as "st=
atic int x"?
              </p>
              <p>
                A: No.
              </p>
              <br>

              <p>
                Q: Can I use "auto"?
              </p>
              <p>
                A: No.
              </p>
              <br>

              <p>
                Q: Can I use function X or class Y in this assignment?
              </p>
              <p>
                A: In general if it is not forbidden in the description and=
 the previous FAQs, and you can use it without including any additional lib=
rary on ZINC, then you can use it. We suggest quickly testing it on ZINC (t=
o see if a basic usage of it compiles there) before committing to using it =
as library inclusion requirement may differ on different environments.
              </p>
              <br>

              <p>
                Q: My program gives the correct output on my computer, but =
it gives a different one on ZINC. What may be the cause?
              </p>
              <p>
                A: Usually inconsistent strange result (on different machin=
es/platforms, or even different runs on the same machine) is due to relying=
 on uninitialized hence garbage values, missing return statements, accessin=
g out-of-bound array elements, improper use of dynamic memory, or relying o=
n library functions that might be implemented differently on different plat=
forms (such as pow() in cmath).<br>
                You may find a list of common causes and tips on debugging =
in the notes <a href=3D"https://wallacem.people.ust.hk/notes/on-common-c-ru=
ntime-errors/">here</a>.<br>
                In this particular PA, it is probably related to misuse of =
dynamic memory. Good luck with bug hunting!
              </p>

              <h4>Specification clarification</h4>
              <p>
                Q: Should I increment the <code>count</code> when I copy co=
nstruct or copy assign a <code>SmartPtr</code>?
              </p>
              <p>
                A: Since the <code>ptr</code> member of the newly construct=
ed / assigned <code>SmartPtr</code> is <code>nullptr</code>, its <code>coun=
t</code> member should also be <code>nullptr</code> according to the descri=
ption. There is no need to count the number of <code>SmartPtr</code>s conta=
ining the address <code>nullptr</code>.
              </p>
            <p></p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Frequently Asked Questions
          </div>
        </div>

        <!-- Credits section -->
        <!-- <div class=3D"card mb-4">
          <div class=3D"card-body" id=3D"credits">
            <h3 class=3D"card-title">Credits</h3>
            <p class=3D"card-text">
            </p>
          </div>

          <div class=3D"card-footer text-muted">
            End of Credits
          </div>
        </div> -->
      </div>

      <!-- Sidebar Widgets Column -->
      <div class=3D"col-md-3">
        <div class=3D"sticky-top">
          <!-- Menu Widget -->
          <div class=3D"card my-12">
            <h5 class=3D"card-header">Menu</h5>
            <div class=3D"card-body">
              <div class=3D"row">
                <div class=3D"col-lg-12">
                  <ul class=3D"mb-0" type=3D"circle" style=3D"padding-left:=
20px">
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#intro">Introduction</a>
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#download">Download</a>
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#review">Review</a>
                      <!-- <ul type=3D"disc" style=3D"padding-left:20px">
                        <li>
                          <a href=3D"#lambda">Lambda expressions</a>
                        </li>
                        <li>
                          <a href=3D"#graph">Graphs</a>
                        </li>
                      </ul> -->
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#description">Description</a>
                      <ul type=3D"disc" style=3D"padding-left:20px">
                        <li>
                          <a href=3D"https://course.cse.ust.hk/comp2012/ass=
ignments/assignment3/#smartptr"><code>SmartPtr</code></a>
                        </li>
                        <li>
                          <a href=3D"https://course.cse.ust.hk/comp2012/ass=
ignments/assignment3/#node"><code>Node</code></a>
                        </li>
                        <li>
                          <a href=3D"https://course.cse.ust.hk/comp2012/ass=
ignments/assignment3/#graph-op">Graph operations</a>
                        </li>
                      </ul>
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#tasks">Tasks</a>
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#grading">Sample Output and Grading</a>
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#submission">Submission and Deadline</a>
                    </li>
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012/assignm=
ents/assignment3/#faq">Frequently Asked Questions</a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>

          <!-- Maintenance widget -->
          <div class=3D"card my-4">
            <h5 class=3D"card-header">Page maintained by</h5>
            <div class=3D"card-body">
              <div class=3D"row">
                <div class=3D"col-lg-12">
                  <ul class=3D"list-unstyled mb-0">
                    <li>
                      Chun Yin CHAU
                    </li>
                    <li>
                      Email:
                      <a href=3D"mailto:cychauab@cse.ust.hk">cychauab@cse.u=
st.hk</a>
                    </li>
                    <li>Last Modified:
                      04/16/2022 14:42:05
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>


          <!-- Homepage widget -->
          <div class=3D"card my-4">
            <h5 class=3D"card-header">Homepage</h5>
            <div class=3D"card-body">
              <div class=3D"row">
                <div class=3D"col-lg-12">
                  <ul class=3D"list-unstyled mb-0">
                    <li>
                      <a href=3D"https://course.cse.ust.hk/comp2012">Course=
 Homepage</a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>

          <!-- /.row -->
        </div>
      </div>
    </div>
  </div>
  <!-- /.container -->

  <!-- Footer -->
  <footer class=3D"py-5 bg-dark">
    <div class=3D"container">
      <p class=3D"m-0 text-center text-white">Maintained by COMP 2012 Teach=
ing Team =C2=A9 2022 HKUST Computer Science
        and Engineering</p>
    </div>
    <!-- /.container -->
  </footer>

  <!-- Bootstrap core JavaScript -->
 =20
 =20



</body></html>
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-d3768767-8f62-4a78-834f-c158974b5555@mhtml.blink

@charset "utf-8";

pre { background: rgb(244, 244, 244); border-width: 1px 1px 1px 3px; border=
-style: solid; border-color: rgb(221, 221, 221) rgb(221, 221, 221) rgb(221,=
 221, 221) rgb(243, 109, 51); border-image: initial; color: rgb(102, 102, 1=
02); break-inside: avoid; font-family: monospace; font-size: 14px; line-hei=
ght: 1.6; margin-bottom: 1.6em; max-width: 100%; overflow: auto; padding: 1=
em 1.5em; display: block; overflow-wrap: break-word; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-7ab8c8d5-3d24-4837-91f5-769b869d84a8@mhtml.blink

@charset "utf-8";

.MathJax_Hover_Frame { border-radius: 0.25em; box-shadow: rgb(136, 51, 170)=
 0px 0px 15px; display: inline-block; position: absolute; border: 1px solid=
 rgb(170, 102, 221) !important; }

.MathJax_Menu_Button .MathJax_Hover_Arrow { position: absolute; cursor: poi=
nter; display: inline-block; border: 2px solid rgb(170, 170, 170); border-r=
adius: 4px; font-family: "Courier New", Courier; font-size: 9px; color: rgb=
(240, 240, 240); }

.MathJax_Menu_Button .MathJax_Hover_Arrow span { display: block; background=
-color: rgb(170, 170, 170); border: 1px solid; border-radius: 3px; line-hei=
ght: 0; padding: 4px; }

.MathJax_Hover_Arrow:hover { color: white !important; border: 2px solid rgb=
(204, 204, 204) !important; }

.MathJax_Hover_Arrow:hover span { background-color: rgb(204, 204, 204) !imp=
ortant; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-fca5eb6c-d74b-426c-ba4f-2ee08385eefb@mhtml.blink

@charset "utf-8";

#MathJax_About { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }

#MathJax_About.MathJax_MousePost { outline: none; }

.MathJax_Menu { position: absolute; background-color: white; color: black; =
width: auto; padding: 2px; border: 1px solid rgb(204, 204, 204); margin: 0p=
x; cursor: default; font-style: ; font-variant: normal; font-weight: ; font=
-stretch: ; font-size: ; font-family: ; text-align: left; text-indent: 0px;=
 text-transform: none; line-height: normal; letter-spacing: normal; word-sp=
acing: normal; overflow-wrap: normal; white-space: nowrap; float: none; z-i=
ndex: 201; box-shadow: rgb(128, 128, 128) 0px 10px 20px; }

.MathJax_MenuItem { padding: 2px 2em; background: transparent; }

.MathJax_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em;=
 color: rgb(102, 102, 102); font-size: 0.75em; }

.MathJax_MenuActive .MathJax_MenuArrow { color: white; }

.MathJax_MenuArrow.RTL { left: 0.5em; right: auto; }

.MathJax_MenuCheck { position: absolute; left: 0.7em; }

.MathJax_MenuCheck.RTL { right: 0.7em; left: auto; }

.MathJax_MenuRadioCheck { position: absolute; left: 1em; }

.MathJax_MenuRadioCheck.RTL { right: 1em; left: auto; }

.MathJax_MenuLabel { padding: 2px 2em 4px 1.33em; font-style: italic; }

.MathJax_MenuRule { border-top: 1px solid rgb(204, 204, 204); margin: 4px 1=
px 0px; }

.MathJax_MenuDisabled { color: graytext; }

.MathJax_MenuActive { background-color: highlight; color: highlighttext; }

.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus { background-color: r=
gb(232, 232, 232); }

.MathJax_ContextMenu:focus { outline: none; }

.MathJax_ContextMenu .MathJax_MenuItem:focus { outline: none; }

#MathJax_AboutClose { top: 0.2em; right: 0.2em; }

.MathJax_Menu .MathJax_MenuClose { top: -10px; left: -10px; }

.MathJax_MenuClose { position: absolute; cursor: pointer; display: inline-b=
lock; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-famil=
y: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.MathJax_MenuClose span { display: block; background-color: rgb(170, 170, 1=
70); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8px=
 0px 6px; }

.MathJax_MenuClose:hover { color: white !important; border: 2px solid rgb(2=
04, 204, 204) !important; }

.MathJax_MenuClose:hover span { background-color: rgb(204, 204, 204) !impor=
tant; }

.MathJax_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8d6e47be-9fc7-44fd-9d36-51a8097f115c@mhtml.blink

@charset "utf-8";

.MathJax_Preview .MJXf-math { color: inherit !important; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-5be81f84-cef7-49c2-b318-2fbaea03b7d8@mhtml.blink

@charset "utf-8";

.MJX_Assistive_MathML { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px)=
; user-select: none; position: absolute !important; padding: 1px 0px 0px !i=
mportant; border: 0px !important; height: 1px !important; width: 1px !impor=
tant; overflow: hidden !important; display: block !important; }

.MJX_Assistive_MathML.MJX_Assistive_MathML_Block { width: 100% !important; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-63c54f4e-a087-4c8d-8aec-48a8688d4a74@mhtml.blink

@charset "utf-8";

#MathJax_Zoom { position: absolute; background-color: rgb(240, 240, 240); o=
verflow: auto; display: block; z-index: 301; padding: 0.5em; border: 1px so=
lid black; margin: 0px; font-weight: normal; font-style: normal; text-align=
: left; text-indent: 0px; text-transform: none; line-height: normal; letter=
-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space:=
 nowrap; float: none; box-sizing: content-box; box-shadow: rgb(170, 170, 17=
0) 5px 5px 15px; }

#MathJax_ZoomOverlay { position: absolute; left: 0px; top: 0px; z-index: 30=
0; display: inline-block; width: 100%; height: 100%; border: 0px; padding: =
0px; margin: 0px; background-color: white; opacity: 0; }

#MathJax_ZoomFrame { position: relative; display: inline-block; height: 0px=
; width: 0px; }

#MathJax_ZoomEventTrap { position: absolute; left: 0px; top: 0px; z-index: =
302; display: inline-block; border: 0px; padding: 0px; margin: 0px; backgro=
und-color: white; opacity: 0; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1764dc9b-9fbc-43c5-8e5e-ffad24737896@mhtml.blink

@charset "utf-8";

.MathJax_Preview { color: rgb(136, 136, 136); }

#MathJax_Message { position: fixed; left: 1em; bottom: 1.5em; background-co=
lor: rgb(230, 230, 230); border: 1px solid rgb(149, 149, 149); margin: 0px;=
 padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto;=
 white-space: nowrap; }

#MathJax_MSIE_Frame { position: absolute; top: 0px; left: 0px; width: 0px; =
z-index: 101; border: 0px; margin: 0px; padding: 0px; }

.MathJax_Error { color: rgb(204, 0, 0); font-style: italic; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-e73e2b90-af25-4e8a-a1e6-799bb81dfc9c@mhtml.blink

@charset "utf-8";

.MJXp-script { font-size: 0.8em; }

.MJXp-right { transform-origin: right center; }

.MJXp-bold { font-weight: bold; }

.MJXp-italic { font-style: italic; }

.MJXp-scr { font-family: MathJax_Script, "Times New Roman", Times, STIXGene=
ral, serif; }

.MJXp-frak { font-family: MathJax_Fraktur, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-sf { font-family: MathJax_SansSerif, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-cal { font-family: MathJax_Caligraphic, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-mono { font-family: MathJax_Typewriter, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-largeop { font-size: 150%; }

.MJXp-largeop.MJXp-int { vertical-align: -0.2em; }

.MJXp-math { display: inline-block; line-height: 1.2; text-indent: 0px; fon=
t-family: "Times New Roman", Times, STIXGeneral, serif; white-space: nowrap=
; border-collapse: collapse; }

.MJXp-display { display: block; text-align: center; margin: 1em 0px; }

.MJXp-math span { display: inline-block; }

.MJXp-box { text-align: center; display: block !important; }

.MJXp-box::after { content: " "; }

.MJXp-rule { margin-top: 0.1em; display: block !important; }

.MJXp-char { display: block !important; }

.MJXp-mo { margin: 0px 0.15em; }

.MJXp-mfrac { margin: 0px 0.125em; vertical-align: 0.25em; }

.MJXp-denom { width: 100%; display: inline-table !important; }

.MJXp-denom > * { display: table-row !important; }

.MJXp-surd { vertical-align: top; }

.MJXp-surd > * { display: block !important; }

.MJXp-script-box > * { height: 50%; display: table !important; }

.MJXp-script-box > * > * { vertical-align: top; display: table-cell !import=
ant; }

.MJXp-script-box > :last-child > * { vertical-align: bottom; }

.MJXp-script-box > * > * > * { display: block !important; }

.MJXp-mphantom { visibility: hidden; }

.MJXp-munderover { display: inline-table !important; }

.MJXp-over { text-align: center; display: inline-block !important; }

.MJXp-over > * { display: block !important; }

.MJXp-munderover > * { display: table-row !important; }

.MJXp-mtable { vertical-align: 0.25em; margin: 0px 0.125em; }

.MJXp-mtable > * { vertical-align: middle; display: inline-table !important=
; }

.MJXp-mtr { display: table-row !important; }

.MJXp-mtd { text-align: center; padding: 0.5em 0px 0px 0.5em; display: tabl=
e-cell !important; }

.MJXp-mtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-mlabeledtr { display: table-row !important; }

.MJXp-mlabeledtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mlabeledtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-merror { background-color: rgb(255, 255, 136); color: rgb(204, 0, 0);=
 border: 1px solid rgb(204, 0, 0); padding: 1px 3px; font-style: normal; fo=
nt-size: 90%; }

.MJXp-scale0 { transform: scaleX(0); }

.MJXp-scale1 { transform: scaleX(0.1); }

.MJXp-scale2 { transform: scaleX(0.2); }

.MJXp-scale3 { transform: scaleX(0.3); }

.MJXp-scale4 { transform: scaleX(0.4); }

.MJXp-scale5 { transform: scaleX(0.5); }

.MJXp-scale6 { transform: scaleX(0.6); }

.MJXp-scale7 { transform: scaleX(0.7); }

.MJXp-scale8 { transform: scaleX(0.8); }

.MJXp-scale9 { transform: scaleX(0.9); }

.MathJax_PHTML .noError { font-size: 90%; text-align: left; color: black; p=
adding: 1px 3px; border: 1px solid; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.cse.ust.hk/comp2012/assignments/assignment3/vendor/bootstrap/css/bootstrap.min.css

@charset "utf-8";

:root { --blue:#007bff; --indigo:#6610f2; --purple:#6f42c1; --pink:#e83e8c;=
 --red:#dc3545; --orange:#fd7e14; --yellow:#ffc107; --green:#28a745; --teal=
:#20c997; --cyan:#17a2b8; --white:#fff; --gray:#6c757d; --gray-dark:#343a40=
; --primary:#007bff; --secondary:#6c757d; --success:#28a745; --info:#17a2b8=
; --warning:#ffc107; --danger:#dc3545; --light:#f8f9fa; --dark:#343a40; --b=
reakpoint-xs:0; --breakpoint-sm:576px; --breakpoint-md:768px; --breakpoint-=
lg:992px; --breakpoint-xl:1200px; --font-family-sans-serif:-apple-system,Bl=
inkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple=
 Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; --font-family-monospace:S=
FMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospa=
ce; }

*, ::after, ::before { box-sizing: border-box; }

html { font-family: sans-serif; line-height: 1.15; text-size-adjust: 100%; =
-webkit-tap-highlight-color: transparent; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, sect=
ion { display: block; }

body { margin: 0px; font-family: -apple-system, BlinkMacSystemFont, "Segoe =
UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Seg=
oe UI Emoji", "Segoe UI Symbol"; font-size: 1rem; font-weight: 400; line-he=
ight: 1.5; color: rgb(33, 37, 41); text-align: left; background-color: rgb(=
255, 255, 255); }

[tabindex=3D"-1"]:focus { outline: 0px !important; }

hr { box-sizing: content-box; height: 0px; overflow: visible; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; margin-bottom: 0.5rem; }

p { margin-top: 0px; margin-bottom: 1rem; }

abbr[data-original-title], abbr[title] { text-decoration: underline dotted;=
 cursor: help; border-bottom: 0px; }

address { margin-bottom: 1rem; font-style: normal; line-height: inherit; }

dl, ol, ul { margin-top: 0px; margin-bottom: 1rem; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

dt { font-weight: 700; }

dd { margin-bottom: 0.5rem; margin-left: 0px; }

blockquote { margin: 0px 0px 1rem; }

dfn { font-style: italic; }

b, strong { font-weight: bolder; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

a { color: rgb(0, 123, 255); text-decoration: none; background-color: trans=
parent; }

a:hover { color: rgb(0, 86, 179); text-decoration: underline; }

a:not([href]):not([tabindex]) { color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover { =
color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus { outline: 0px; }

code, kbd, pre, samp { font-family: SFMono-Regular, Menlo, Monaco, Consolas=
, "Liberation Mono", "Courier New", monospace; font-size: 1em; }

pre { margin-top: 0px; margin-bottom: 1rem; overflow: auto; }

figure { margin: 0px 0px 1rem; }

img { vertical-align: middle; border-style: none; }

svg:not(:root) { overflow: hidden; }

table { border-collapse: collapse; }

caption { padding-top: 0.75rem; padding-bottom: 0.75rem; color: rgb(108, 11=
7, 125); text-align: left; caption-side: bottom; }

th { text-align: inherit; }

label { display: inline-block; margin-bottom: 0.5rem; }

button { border-radius: 0px; }

button:focus { outline: -webkit-focus-ring-color auto 5px; }

button, input, optgroup, select, textarea { margin: 0px; font-family: inher=
it; font-size: inherit; line-height: inherit; }

button, input { overflow: visible; }

button, select { text-transform: none; }

[type=3D"reset"], [type=3D"submit"], button, html [type=3D"button"] { appea=
rance: button; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"date"], input[type=3D"datetime-local"], input[type=3D"month"]=
, input[type=3D"time"] { appearance: listbox; }

textarea { overflow: auto; resize: vertical; }

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; max-width: 100%; padding: 0px; margin=
-bottom: 0.5rem; font-size: 1.5rem; line-height: inherit; color: inherit; w=
hite-space: normal; }

progress { vertical-align: baseline; }

[type=3D"number"]::-webkit-inner-spin-button, [type=3D"number"]::-webkit-ou=
ter-spin-button { height: auto; }

[type=3D"search"] { outline-offset: -2px; appearance: none; }

[type=3D"search"]::-webkit-search-cancel-button, [type=3D"search"]::-webkit=
-search-decoration { appearance: none; }

::-webkit-file-upload-button { font: inherit; appearance: button; }

output { display: inline-block; }

summary { display: list-item; cursor: pointer; }

template { display: none; }

[hidden] { display: none !important; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { margin-bottom: 0.5re=
m; font-family: inherit; font-weight: 500; line-height: 1.2; color: inherit=
; }

.h1, h1 { font-size: 2.5rem; }

.h2, h2 { font-size: 2rem; }

.h3, h3 { font-size: 1.75rem; }

.h4, h4 { font-size: 1.5rem; }

.h5, h5 { font-size: 1.25rem; }

.h6, h6 { font-size: 1rem; }

.lead { font-size: 1.25rem; font-weight: 300; }

.display-1 { font-size: 6rem; font-weight: 300; line-height: 1.2; }

.display-2 { font-size: 5.5rem; font-weight: 300; line-height: 1.2; }

.display-3 { font-size: 4.5rem; font-weight: 300; line-height: 1.2; }

.display-4 { font-size: 3.5rem; font-weight: 300; line-height: 1.2; }

hr { margin-top: 1rem; margin-bottom: 1rem; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgba(0, 0, 0, 0.1); }

.small, small { font-size: 80%; font-weight: 400; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; list-style: none; }

.list-inline-item { display: inline-block; }

.list-inline-item:not(:last-child) { margin-right: 0.5rem; }

.initialism { font-size: 90%; text-transform: uppercase; }

.blockquote { margin-bottom: 1rem; font-size: 1.25rem; }

.blockquote-footer { display: block; font-size: 80%; color: rgb(108, 117, 1=
25); }

.blockquote-footer::before { content: "=E2=80=94=C2=A0"; }

.img-fluid { max-width: 100%; height: auto; }

.img-thumbnail { padding: 0.25rem; background-color: rgb(255, 255, 255); bo=
rder: 1px solid rgb(222, 226, 230); border-radius: 0.25rem; max-width: 100%=
; height: auto; }

.figure { display: inline-block; }

.figure-img { margin-bottom: 0.5rem; line-height: 1; }

.figure-caption { font-size: 90%; color: rgb(108, 117, 125); }

code { font-size: 87.5%; color: rgb(232, 62, 140); word-break: break-word; =
}

a > code { color: inherit; }

kbd { padding: 0.2rem 0.4rem; font-size: 87.5%; color: rgb(255, 255, 255); =
background-color: rgb(33, 37, 41); border-radius: 0.2rem; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; }

pre { display: block; font-size: 87.5%; color: rgb(33, 37, 41); }

pre code { font-size: inherit; color: inherit; word-break: normal; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { width: 100%; padding-right: 15px; padding-left: 15px; margin-r=
ight: auto; margin-left: auto; }

@media (min-width: 576px) {
  .container { max-width: 540px; }
}

@media (min-width: 768px) {
  .container { max-width: 720px; }
}

@media (min-width: 992px) {
  .container { max-width: 960px; }
}

@media (min-width: 1200px) {
  .container { max-width: 1140px; }
}

.container-fluid { width: 100%; padding-right: 15px; padding-left: 15px; ma=
rgin-right: auto; margin-left: auto; }

.row { display: flex; flex-wrap: wrap; margin-right: -15px; margin-left: -1=
5px; }

.no-gutters { margin-right: 0px; margin-left: 0px; }

.no-gutters > .col, .no-gutters > [class*=3D"col-"] { padding-right: 0px; p=
adding-left: 0px; }

.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .c=
ol-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .c=
ol-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6=
, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-m=
d-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .=
col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1=
, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col=
-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .=
col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl=
-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto { p=
osition: relative; width: 100%; min-height: 1px; padding-right: 15px; paddi=
ng-left: 15px; }

.col { flex-basis: 0px; flex-grow: 1; max-width: 100%; }

.col-auto { flex: 0 0 auto; width: auto; max-width: none; }

.col-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }

.col-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }

.col-3 { flex: 0 0 25%; max-width: 25%; }

.col-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }

.col-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }

.col-6 { flex: 0 0 50%; max-width: 50%; }

.col-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }

.col-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }

.col-9 { flex: 0 0 75%; max-width: 75%; }

.col-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }

.col-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }

.col-12 { flex: 0 0 100%; max-width: 100%; }

.order-first { order: -1; }

.order-last { order: 13; }

.order-0 { order: 0; }

.order-1 { order: 1; }

.order-2 { order: 2; }

.order-3 { order: 3; }

.order-4 { order: 4; }

.order-5 { order: 5; }

.order-6 { order: 6; }

.order-7 { order: 7; }

.order-8 { order: 8; }

.order-9 { order: 9; }

.order-10 { order: 10; }

.order-11 { order: 11; }

.order-12 { order: 12; }

.offset-1 { margin-left: 8.33333%; }

.offset-2 { margin-left: 16.6667%; }

.offset-3 { margin-left: 25%; }

.offset-4 { margin-left: 33.3333%; }

.offset-5 { margin-left: 41.6667%; }

.offset-6 { margin-left: 50%; }

.offset-7 { margin-left: 58.3333%; }

.offset-8 { margin-left: 66.6667%; }

.offset-9 { margin-left: 75%; }

.offset-10 { margin-left: 83.3333%; }

.offset-11 { margin-left: 91.6667%; }

@media (min-width: 576px) {
  .col-sm { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-sm-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-sm-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-sm-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
  .col-sm-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-sm-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
  .col-sm-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-sm-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
  .col-sm-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-sm-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
  .order-sm-first { order: -1; }
  .order-sm-last { order: 13; }
  .order-sm-0 { order: 0; }
  .order-sm-1 { order: 1; }
  .order-sm-2 { order: 2; }
  .order-sm-3 { order: 3; }
  .order-sm-4 { order: 4; }
  .order-sm-5 { order: 5; }
  .order-sm-6 { order: 6; }
  .order-sm-7 { order: 7; }
  .order-sm-8 { order: 8; }
  .order-sm-9 { order: 9; }
  .order-sm-10 { order: 10; }
  .order-sm-11 { order: 11; }
  .order-sm-12 { order: 12; }
  .offset-sm-0 { margin-left: 0px; }
  .offset-sm-1 { margin-left: 8.33333%; }
  .offset-sm-2 { margin-left: 16.6667%; }
  .offset-sm-3 { margin-left: 25%; }
  .offset-sm-4 { margin-left: 33.3333%; }
  .offset-sm-5 { margin-left: 41.6667%; }
  .offset-sm-6 { margin-left: 50%; }
  .offset-sm-7 { margin-left: 58.3333%; }
  .offset-sm-8 { margin-left: 66.6667%; }
  .offset-sm-9 { margin-left: 75%; }
  .offset-sm-10 { margin-left: 83.3333%; }
  .offset-sm-11 { margin-left: 91.6667%; }
}

@media (min-width: 768px) {
  .col-md { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-md-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-md-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-md-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-3 { flex: 0 0 25%; max-width: 25%; }
  .col-md-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-md-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-md-6 { flex: 0 0 50%; max-width: 50%; }
  .col-md-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-md-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-md-9 { flex: 0 0 75%; max-width: 75%; }
  .col-md-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-md-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-md-12 { flex: 0 0 100%; max-width: 100%; }
  .order-md-first { order: -1; }
  .order-md-last { order: 13; }
  .order-md-0 { order: 0; }
  .order-md-1 { order: 1; }
  .order-md-2 { order: 2; }
  .order-md-3 { order: 3; }
  .order-md-4 { order: 4; }
  .order-md-5 { order: 5; }
  .order-md-6 { order: 6; }
  .order-md-7 { order: 7; }
  .order-md-8 { order: 8; }
  .order-md-9 { order: 9; }
  .order-md-10 { order: 10; }
  .order-md-11 { order: 11; }
  .order-md-12 { order: 12; }
  .offset-md-0 { margin-left: 0px; }
  .offset-md-1 { margin-left: 8.33333%; }
  .offset-md-2 { margin-left: 16.6667%; }
  .offset-md-3 { margin-left: 25%; }
  .offset-md-4 { margin-left: 33.3333%; }
  .offset-md-5 { margin-left: 41.6667%; }
  .offset-md-6 { margin-left: 50%; }
  .offset-md-7 { margin-left: 58.3333%; }
  .offset-md-8 { margin-left: 66.6667%; }
  .offset-md-9 { margin-left: 75%; }
  .offset-md-10 { margin-left: 83.3333%; }
  .offset-md-11 { margin-left: 91.6667%; }
}

@media (min-width: 992px) {
  .col-lg { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-lg-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-lg-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-lg-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
  .col-lg-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-lg-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
  .col-lg-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-lg-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
  .col-lg-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-lg-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
  .order-lg-first { order: -1; }
  .order-lg-last { order: 13; }
  .order-lg-0 { order: 0; }
  .order-lg-1 { order: 1; }
  .order-lg-2 { order: 2; }
  .order-lg-3 { order: 3; }
  .order-lg-4 { order: 4; }
  .order-lg-5 { order: 5; }
  .order-lg-6 { order: 6; }
  .order-lg-7 { order: 7; }
  .order-lg-8 { order: 8; }
  .order-lg-9 { order: 9; }
  .order-lg-10 { order: 10; }
  .order-lg-11 { order: 11; }
  .order-lg-12 { order: 12; }
  .offset-lg-0 { margin-left: 0px; }
  .offset-lg-1 { margin-left: 8.33333%; }
  .offset-lg-2 { margin-left: 16.6667%; }
  .offset-lg-3 { margin-left: 25%; }
  .offset-lg-4 { margin-left: 33.3333%; }
  .offset-lg-5 { margin-left: 41.6667%; }
  .offset-lg-6 { margin-left: 50%; }
  .offset-lg-7 { margin-left: 58.3333%; }
  .offset-lg-8 { margin-left: 66.6667%; }
  .offset-lg-9 { margin-left: 75%; }
  .offset-lg-10 { margin-left: 83.3333%; }
  .offset-lg-11 { margin-left: 91.6667%; }
}

@media (min-width: 1200px) {
  .col-xl { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-xl-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-xl-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-xl-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-3 { flex: 0 0 25%; max-width: 25%; }
  .col-xl-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-xl-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-xl-6 { flex: 0 0 50%; max-width: 50%; }
  .col-xl-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-xl-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-xl-9 { flex: 0 0 75%; max-width: 75%; }
  .col-xl-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-xl-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-xl-12 { flex: 0 0 100%; max-width: 100%; }
  .order-xl-first { order: -1; }
  .order-xl-last { order: 13; }
  .order-xl-0 { order: 0; }
  .order-xl-1 { order: 1; }
  .order-xl-2 { order: 2; }
  .order-xl-3 { order: 3; }
  .order-xl-4 { order: 4; }
  .order-xl-5 { order: 5; }
  .order-xl-6 { order: 6; }
  .order-xl-7 { order: 7; }
  .order-xl-8 { order: 8; }
  .order-xl-9 { order: 9; }
  .order-xl-10 { order: 10; }
  .order-xl-11 { order: 11; }
  .order-xl-12 { order: 12; }
  .offset-xl-0 { margin-left: 0px; }
  .offset-xl-1 { margin-left: 8.33333%; }
  .offset-xl-2 { margin-left: 16.6667%; }
  .offset-xl-3 { margin-left: 25%; }
  .offset-xl-4 { margin-left: 33.3333%; }
  .offset-xl-5 { margin-left: 41.6667%; }
  .offset-xl-6 { margin-left: 50%; }
  .offset-xl-7 { margin-left: 58.3333%; }
  .offset-xl-8 { margin-left: 66.6667%; }
  .offset-xl-9 { margin-left: 75%; }
  .offset-xl-10 { margin-left: 83.3333%; }
  .offset-xl-11 { margin-left: 91.6667%; }
}

.table { width: 100%; max-width: 100%; margin-bottom: 1rem; background-colo=
r: transparent; }

.table td, .table th { padding: 0.75rem; vertical-align: top; border-top: 1=
px solid rgb(222, 226, 230); }

.table thead th { vertical-align: bottom; border-bottom: 2px solid rgb(222,=
 226, 230); }

.table tbody + tbody { border-top: 2px solid rgb(222, 226, 230); }

.table .table { background-color: rgb(255, 255, 255); }

.table-sm td, .table-sm th { padding: 0.3rem; }

.table-bordered { border: 1px solid rgb(222, 226, 230); }

.table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, 23=
0); }

.table-bordered thead td, .table-bordered thead th { border-bottom-width: 2=
px; }

.table-borderless tbody + tbody, .table-borderless td, .table-borderless th=
, .table-borderless thead th { border: 0px; }

.table-striped tbody tr:nth-of-type(2n+1) { background-color: rgba(0, 0, 0,=
 0.05); }

.table-hover tbody tr:hover { background-color: rgba(0, 0, 0, 0.075); }

.table-primary, .table-primary > td, .table-primary > th { background-color=
: rgb(184, 218, 255); }

.table-hover .table-primary:hover { background-color: rgb(159, 205, 255); }

.table-hover .table-primary:hover > td, .table-hover .table-primary:hover >=
 th { background-color: rgb(159, 205, 255); }

.table-secondary, .table-secondary > td, .table-secondary > th { background=
-color: rgb(214, 216, 219); }

.table-hover .table-secondary:hover { background-color: rgb(200, 203, 207);=
 }

.table-hover .table-secondary:hover > td, .table-hover .table-secondary:hov=
er > th { background-color: rgb(200, 203, 207); }

.table-success, .table-success > td, .table-success > th { background-color=
: rgb(195, 230, 203); }

.table-hover .table-success:hover { background-color: rgb(177, 223, 187); }

.table-hover .table-success:hover > td, .table-hover .table-success:hover >=
 th { background-color: rgb(177, 223, 187); }

.table-info, .table-info > td, .table-info > th { background-color: rgb(190=
, 229, 235); }

.table-hover .table-info:hover { background-color: rgb(171, 221, 229); }

.table-hover .table-info:hover > td, .table-hover .table-info:hover > th { =
background-color: rgb(171, 221, 229); }

.table-warning, .table-warning > td, .table-warning > th { background-color=
: rgb(255, 238, 186); }

.table-hover .table-warning:hover { background-color: rgb(255, 232, 161); }

.table-hover .table-warning:hover > td, .table-hover .table-warning:hover >=
 th { background-color: rgb(255, 232, 161); }

.table-danger, .table-danger > td, .table-danger > th { background-color: r=
gb(245, 198, 203); }

.table-hover .table-danger:hover { background-color: rgb(241, 176, 183); }

.table-hover .table-danger:hover > td, .table-hover .table-danger:hover > t=
h { background-color: rgb(241, 176, 183); }

.table-light, .table-light > td, .table-light > th { background-color: rgb(=
253, 253, 254); }

.table-hover .table-light:hover { background-color: rgb(236, 236, 246); }

.table-hover .table-light:hover > td, .table-hover .table-light:hover > th =
{ background-color: rgb(236, 236, 246); }

.table-dark, .table-dark > td, .table-dark > th { background-color: rgb(198=
, 200, 202); }

.table-hover .table-dark:hover { background-color: rgb(185, 187, 190); }

.table-hover .table-dark:hover > td, .table-hover .table-dark:hover > th { =
background-color: rgb(185, 187, 190); }

.table-active, .table-active > td, .table-active > th { background-color: r=
gba(0, 0, 0, 0.075); }

.table-hover .table-active:hover { background-color: rgba(0, 0, 0, 0.075); =
}

.table-hover .table-active:hover > td, .table-hover .table-active:hover > t=
h { background-color: rgba(0, 0, 0, 0.075); }

.table .thead-dark th { color: rgb(255, 255, 255); background-color: rgb(33=
, 37, 41); border-color: rgb(50, 56, 62); }

.table .thead-light th { color: rgb(73, 80, 87); background-color: rgb(233,=
 236, 239); border-color: rgb(222, 226, 230); }

.table-dark { color: rgb(255, 255, 255); background-color: rgb(33, 37, 41);=
 }

.table-dark td, .table-dark th, .table-dark thead th { border-color: rgb(50=
, 56, 62); }

.table-dark.table-bordered { border: 0px; }

.table-dark.table-striped tbody tr:nth-of-type(2n+1) { background-color: rg=
ba(255, 255, 255, 0.05); }

.table-dark.table-hover tbody tr:hover { background-color: rgba(255, 255, 2=
55, 0.075); }

@media (max-width: 575.98px) {
  .table-responsive-sm { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-sm > .table-bordered { border: 0px; }
}

@media (max-width: 767.98px) {
  .table-responsive-md { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-md > .table-bordered { border: 0px; }
}

@media (max-width: 991.98px) {
  .table-responsive-lg { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-lg > .table-bordered { border: 0px; }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-xl > .table-bordered { border: 0px; }
}

.table-responsive { display: block; width: 100%; overflow-x: auto; }

.table-responsive > .table-bordered { border: 0px; }

.form-control { display: block; width: 100%; padding: 0.375rem 0.75rem; fon=
t-size: 1rem; line-height: 1.5; color: rgb(73, 80, 87); background-color: r=
gb(255, 255, 255); background-clip: padding-box; border: 1px solid rgb(206,=
 212, 218); border-radius: 0.25rem; transition: border-color 0.15s ease-in-=
out 0s, box-shadow 0.15s ease-in-out 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .form-control { transition: none 0s ease 0s; }
}

.form-control:focus { color: rgb(73, 80, 87); background-color: rgb(255, 25=
5, 255); border-color: rgb(128, 189, 255); outline: 0px; box-shadow: rgba(0=
, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.form-control::-webkit-input-placeholder { color: rgb(108, 117, 125); opaci=
ty: 1; }

.form-control::placeholder { color: rgb(108, 117, 125); opacity: 1; }

.form-control:disabled, .form-control[readonly] { background-color: rgb(233=
, 236, 239); opacity: 1; }

select.form-control:not([size]):not([multiple]) { height: calc(2.25rem + 2p=
x); }

.form-control-file, .form-control-range { display: block; width: 100%; }

.col-form-label { padding-top: calc(0.375rem + 1px); padding-bottom: calc(0=
.375rem + 1px); margin-bottom: 0px; font-size: inherit; line-height: 1.5; }

.col-form-label-lg { padding-top: calc(0.5rem + 1px); padding-bottom: calc(=
0.5rem + 1px); font-size: 1.25rem; line-height: 1.5; }

.col-form-label-sm { padding-top: calc(0.25rem + 1px); padding-bottom: calc=
(0.25rem + 1px); font-size: 0.875rem; line-height: 1.5; }

.form-control-plaintext { display: block; width: 100%; padding-top: 0.375re=
m; padding-bottom: 0.375rem; margin-bottom: 0px; line-height: 1.5; color: r=
gb(33, 37, 41); background-color: transparent; border-style: solid; border-=
color: transparent; border-image: initial; border-width: 1px 0px; }

.form-control-plaintext.form-control-lg, .form-control-plaintext.form-contr=
ol-sm, .input-group-lg > .form-control-plaintext.form-control, .input-group=
-lg > .input-group-append > .form-control-plaintext.btn, .input-group-lg > =
.input-group-append > .form-control-plaintext.input-group-text, .input-grou=
p-lg > .input-group-prepend > .form-control-plaintext.btn, .input-group-lg =
> .input-group-prepend > .form-control-plaintext.input-group-text, .input-g=
roup-sm > .form-control-plaintext.form-control, .input-group-sm > .input-gr=
oup-append > .form-control-plaintext.btn, .input-group-sm > .input-group-ap=
pend > .form-control-plaintext.input-group-text, .input-group-sm > .input-g=
roup-prepend > .form-control-plaintext.btn, .input-group-sm > .input-group-=
prepend > .form-control-plaintext.input-group-text { padding-right: 0px; pa=
dding-left: 0px; }

.form-control-sm, .input-group-sm > .form-control, .input-group-sm > .input=
-group-append > .btn, .input-group-sm > .input-group-append > .input-group-=
text, .input-group-sm > .input-group-prepend > .btn, .input-group-sm > .inp=
ut-group-prepend > .input-group-text { padding: 0.25rem 0.5rem; font-size: =
0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.input-group-sm > .input-group-append > select.btn:not([size]):not([multipl=
e]), .input-group-sm > .input-group-append > select.input-group-text:not([s=
ize]):not([multiple]), .input-group-sm > .input-group-prepend > select.btn:=
not([size]):not([multiple]), .input-group-sm > .input-group-prepend > selec=
t.input-group-text:not([size]):not([multiple]), .input-group-sm > select.fo=
rm-control:not([size]):not([multiple]), select.form-control-sm:not([size]):=
not([multiple]) { height: calc(1.8125rem + 2px); }

.form-control-lg, .input-group-lg > .form-control, .input-group-lg > .input=
-group-append > .btn, .input-group-lg > .input-group-append > .input-group-=
text, .input-group-lg > .input-group-prepend > .btn, .input-group-lg > .inp=
ut-group-prepend > .input-group-text { padding: 0.5rem 1rem; font-size: 1.2=
5rem; line-height: 1.5; border-radius: 0.3rem; }

.input-group-lg > .input-group-append > select.btn:not([size]):not([multipl=
e]), .input-group-lg > .input-group-append > select.input-group-text:not([s=
ize]):not([multiple]), .input-group-lg > .input-group-prepend > select.btn:=
not([size]):not([multiple]), .input-group-lg > .input-group-prepend > selec=
t.input-group-text:not([size]):not([multiple]), .input-group-lg > select.fo=
rm-control:not([size]):not([multiple]), select.form-control-lg:not([size]):=
not([multiple]) { height: calc(2.875rem + 2px); }

.form-group { margin-bottom: 1rem; }

.form-text { display: block; margin-top: 0.25rem; }

.form-row { display: flex; flex-wrap: wrap; margin-right: -5px; margin-left=
: -5px; }

.form-row > .col, .form-row > [class*=3D"col-"] { padding-right: 5px; paddi=
ng-left: 5px; }

.form-check { position: relative; display: block; padding-left: 1.25rem; }

.form-check-input { position: absolute; margin-top: 0.3rem; margin-left: -1=
.25rem; }

.form-check-input:disabled ~ .form-check-label { color: rgb(108, 117, 125);=
 }

.form-check-label { margin-bottom: 0px; }

.form-check-inline { display: inline-flex; align-items: center; padding-lef=
t: 0px; margin-right: 0.75rem; }

.form-check-inline .form-check-input { position: static; margin-top: 0px; m=
argin-right: 0.3125rem; margin-left: 0px; }

.valid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-siz=
e: 80%; color: rgb(40, 167, 69); }

.valid-tooltip { position: absolute; top: 100%; z-index: 5; display: none; =
max-width: 100%; padding: 0.5rem; margin-top: 0.1rem; font-size: 0.875rem; =
line-height: 1; color: rgb(255, 255, 255); background-color: rgba(40, 167, =
69, 0.8); border-radius: 0.2rem; }

.custom-select.is-valid, .form-control.is-valid, .was-validated .custom-sel=
ect:valid, .was-validated .form-control:valid { border-color: rgb(40, 167, =
69); }

.custom-select.is-valid:focus, .form-control.is-valid:focus, .was-validated=
 .custom-select:valid:focus, .was-validated .form-control:valid:focus { bor=
der-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0p=
x 0.2rem; }

.custom-select.is-valid ~ .valid-feedback, .custom-select.is-valid ~ .valid=
-tooltip, .form-control.is-valid ~ .valid-feedback, .form-control.is-valid =
~ .valid-tooltip, .was-validated .custom-select:valid ~ .valid-feedback, .w=
as-validated .custom-select:valid ~ .valid-tooltip, .was-validated .form-co=
ntrol:valid ~ .valid-feedback, .was-validated .form-control:valid ~ .valid-=
tooltip { display: block; }

.form-control-file.is-valid ~ .valid-feedback, .form-control-file.is-valid =
~ .valid-tooltip, .was-validated .form-control-file:valid ~ .valid-feedback=
, .was-validated .form-control-file:valid ~ .valid-tooltip { display: block=
; }

.form-check-input.is-valid ~ .form-check-label, .was-validated .form-check-=
input:valid ~ .form-check-label { color: rgb(40, 167, 69); }

.form-check-input.is-valid ~ .valid-feedback, .form-check-input.is-valid ~ =
.valid-tooltip, .was-validated .form-check-input:valid ~ .valid-feedback, .=
was-validated .form-check-input:valid ~ .valid-tooltip { display: block; }

.custom-control-input.is-valid ~ .custom-control-label, .was-validated .cus=
tom-control-input:valid ~ .custom-control-label { color: rgb(40, 167, 69); =
}

.custom-control-input.is-valid ~ .custom-control-label::before, .was-valida=
ted .custom-control-input:valid ~ .custom-control-label::before { backgroun=
d-color: rgb(113, 221, 138); }

.custom-control-input.is-valid ~ .valid-feedback, .custom-control-input.is-=
valid ~ .valid-tooltip, .was-validated .custom-control-input:valid ~ .valid=
-feedback, .was-validated .custom-control-input:valid ~ .valid-tooltip { di=
splay: block; }

.custom-control-input.is-valid:checked ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:valid:checked ~ .custom-control-label::be=
fore { background-color: rgb(52, 206, 87); }

.custom-control-input.is-valid:focus ~ .custom-control-label::before, .was-=
validated .custom-control-input:valid:focus ~ .custom-control-label::before=
 { box-shadow: rgb(255, 255, 255) 0px 0px 0px 1px, rgba(40, 167, 69, 0.25) =
0px 0px 0px 0.2rem; }

.custom-file-input.is-valid ~ .custom-file-label, .was-validated .custom-fi=
le-input:valid ~ .custom-file-label { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid ~ .custom-file-label::before, .was-validated .c=
ustom-file-input:valid ~ .custom-file-label::before { border-color: inherit=
; }

.custom-file-input.is-valid ~ .valid-feedback, .custom-file-input.is-valid =
~ .valid-tooltip, .was-validated .custom-file-input:valid ~ .valid-feedback=
, .was-validated .custom-file-input:valid ~ .valid-tooltip { display: block=
; }

.custom-file-input.is-valid:focus ~ .custom-file-label, .was-validated .cus=
tom-file-input:valid:focus ~ .custom-file-label { box-shadow: rgba(40, 167,=
 69, 0.25) 0px 0px 0px 0.2rem; }

.invalid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-s=
ize: 80%; color: rgb(220, 53, 69); }

.invalid-tooltip { position: absolute; top: 100%; z-index: 5; display: none=
; max-width: 100%; padding: 0.5rem; margin-top: 0.1rem; font-size: 0.875rem=
; line-height: 1; color: rgb(255, 255, 255); background-color: rgba(220, 53=
, 69, 0.8); border-radius: 0.2rem; }

.custom-select.is-invalid, .form-control.is-invalid, .was-validated .custom=
-select:invalid, .was-validated .form-control:invalid { border-color: rgb(2=
20, 53, 69); }

.custom-select.is-invalid:focus, .form-control.is-invalid:focus, .was-valid=
ated .custom-select:invalid:focus, .was-validated .form-control:invalid:foc=
us { border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0p=
x 0px 0px 0.2rem; }

.custom-select.is-invalid ~ .invalid-feedback, .custom-select.is-invalid ~ =
.invalid-tooltip, .form-control.is-invalid ~ .invalid-feedback, .form-contr=
ol.is-invalid ~ .invalid-tooltip, .was-validated .custom-select:invalid ~ .=
invalid-feedback, .was-validated .custom-select:invalid ~ .invalid-tooltip,=
 .was-validated .form-control:invalid ~ .invalid-feedback, .was-validated .=
form-control:invalid ~ .invalid-tooltip { display: block; }

.form-control-file.is-invalid ~ .invalid-feedback, .form-control-file.is-in=
valid ~ .invalid-tooltip, .was-validated .form-control-file:invalid ~ .inva=
lid-feedback, .was-validated .form-control-file:invalid ~ .invalid-tooltip =
{ display: block; }

.form-check-input.is-invalid ~ .form-check-label, .was-validated .form-chec=
k-input:invalid ~ .form-check-label { color: rgb(220, 53, 69); }

.form-check-input.is-invalid ~ .invalid-feedback, .form-check-input.is-inva=
lid ~ .invalid-tooltip, .was-validated .form-check-input:invalid ~ .invalid=
-feedback, .was-validated .form-check-input:invalid ~ .invalid-tooltip { di=
splay: block; }

.custom-control-input.is-invalid ~ .custom-control-label, .was-validated .c=
ustom-control-input:invalid ~ .custom-control-label { color: rgb(220, 53, 6=
9); }

.custom-control-input.is-invalid ~ .custom-control-label::before, .was-vali=
dated .custom-control-input:invalid ~ .custom-control-label::before { backg=
round-color: rgb(239, 162, 169); }

.custom-control-input.is-invalid ~ .invalid-feedback, .custom-control-input=
.is-invalid ~ .invalid-tooltip, .was-validated .custom-control-input:invali=
d ~ .invalid-feedback, .was-validated .custom-control-input:invalid ~ .inva=
lid-tooltip { display: block; }

.custom-control-input.is-invalid:checked ~ .custom-control-label::before, .=
was-validated .custom-control-input:invalid:checked ~ .custom-control-label=
::before { background-color: rgb(228, 96, 109); }

.custom-control-input.is-invalid:focus ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:invalid:focus ~ .custom-control-label::be=
fore { box-shadow: rgb(255, 255, 255) 0px 0px 0px 1px, rgba(220, 53, 69, 0.=
25) 0px 0px 0px 0.2rem; }

.custom-file-input.is-invalid ~ .custom-file-label, .was-validated .custom-=
file-input:invalid ~ .custom-file-label { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid ~ .custom-file-label::before, .was-validated =
.custom-file-input:invalid ~ .custom-file-label::before { border-color: inh=
erit; }

.custom-file-input.is-invalid ~ .invalid-feedback, .custom-file-input.is-in=
valid ~ .invalid-tooltip, .was-validated .custom-file-input:invalid ~ .inva=
lid-feedback, .was-validated .custom-file-input:invalid ~ .invalid-tooltip =
{ display: block; }

.custom-file-input.is-invalid:focus ~ .custom-file-label, .was-validated .c=
ustom-file-input:invalid:focus ~ .custom-file-label { box-shadow: rgba(220,=
 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.form-inline { display: flex; flex-flow: row wrap; align-items: center; }

.form-inline .form-check { width: 100%; }

@media (min-width: 576px) {
  .form-inline label { display: flex; align-items: center; justify-content:=
 center; margin-bottom: 0px; }
  .form-inline .form-group { display: flex; flex: 0 0 auto; flex-flow: row =
wrap; align-items: center; margin-bottom: 0px; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-plaintext { display: inline-block; }
  .form-inline .custom-select, .form-inline .input-group { width: auto; }
  .form-inline .form-check { display: flex; align-items: center; justify-co=
ntent: center; width: auto; padding-left: 0px; }
  .form-inline .form-check-input { position: relative; margin-top: 0px; mar=
gin-right: 0.25rem; margin-left: 0px; }
  .form-inline .custom-control { align-items: center; justify-content: cent=
er; }
  .form-inline .custom-control-label { margin-bottom: 0px; }
}

.btn { display: inline-block; font-weight: 400; text-align: center; white-s=
pace: nowrap; vertical-align: middle; user-select: none; border: 1px solid =
transparent; padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; =
border-radius: 0.25rem; transition: color 0.15s ease-in-out 0s, background-=
color 0.15s ease-in-out 0s, border-color 0.15s ease-in-out 0s, box-shadow 0=
.15s ease-in-out 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .btn { transition: none 0s ease 0s; }
}

.btn:focus, .btn:hover { text-decoration: none; }

.btn.focus, .btn:focus { outline: 0px; box-shadow: rgba(0, 123, 255, 0.25) =
0px 0px 0px 0.2rem; }

.btn.disabled, .btn:disabled { opacity: 0.65; }

.btn:not(:disabled):not(.disabled) { cursor: pointer; }

.btn:not(:disabled):not(.disabled).active, .btn:not(:disabled):not(.disable=
d):active { background-image: none; }

a.btn.disabled, fieldset:disabled a.btn { pointer-events: none; }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(0, 10=
5, 217); border-color: rgb(0, 98, 204); }

.btn-primary.focus, .btn-primary:focus { box-shadow: rgba(0, 123, 255, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-primary.disabled, .btn-primary:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabl=
ed):not(.disabled):active, .show > .btn-primary.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(0, 98, 204); border-color: rgb(0, 9=
2, 191); }

.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:=
disabled):not(.disabled):active:focus, .show > .btn-primary.dropdown-toggle=
:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 117,=
 125); border-color: rgb(108, 117, 125); }

.btn-secondary:hover { color: rgb(255, 255, 255); background-color: rgb(90,=
 98, 104); border-color: rgb(84, 91, 98); }

.btn-secondary.focus, .btn-secondary:focus { box-shadow: rgba(108, 117, 125=
, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary.disabled, .btn-secondary:disabled { color: rgb(255, 255, 255=
); background-color: rgb(108, 117, 125); border-color: rgb(108, 117, 125); =
}

.btn-secondary:not(:disabled):not(.disabled).active, .btn-secondary:not(:di=
sabled):not(.disabled):active, .show > .btn-secondary.dropdown-toggle { col=
or: rgb(255, 255, 255); background-color: rgb(84, 91, 98); border-color: rg=
b(78, 85, 91); }

.btn-secondary:not(:disabled):not(.disabled).active:focus, .btn-secondary:n=
ot(:disabled):not(.disabled):active:focus, .show > .btn-secondary.dropdown-=
toggle:focus { box-shadow: rgba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(33, 1=
36, 56); border-color: rgb(30, 126, 52); }

.btn-success.focus, .btn-success:focus { box-shadow: rgba(40, 167, 69, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-success.disabled, .btn-success:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-success:not(:disabled):not(.disabled).active, .btn-success:not(:disabl=
ed):not(.disabled):active, .show > .btn-success.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(30, 126, 52); border-color: rgb(28,=
 116, 48); }

.btn-success:not(:disabled):not(.disabled).active:focus, .btn-success:not(:=
disabled):not(.disabled):active:focus, .show > .btn-success.dropdown-toggle=
:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184);=
 border-color: rgb(23, 162, 184); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(19, 132,=
 150); border-color: rgb(17, 122, 139); }

.btn-info.focus, .btn-info:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px =
0px 0px 0.2rem; }

.btn-info.disabled, .btn-info:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-info:not(:disabled):not(.disabled).active, .btn-info:not(:disabled):no=
t(.disabled):active, .show > .btn-info.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(17, 122, 139); border-color: rgb(16, 112, 12=
7); }

.btn-info:not(:disabled):not(.disabled).active:focus, .btn-info:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-info.dropdown-toggle:focus { =
box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-warning:hover { color: rgb(33, 37, 41); background-color: rgb(224, 168=
, 0); border-color: rgb(211, 158, 0); }

.btn-warning.focus, .btn-warning:focus { box-shadow: rgba(255, 193, 7, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-warning.disabled, .btn-warning:disabled { color: rgb(33, 37, 41); back=
ground-color: rgb(255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-warning:not(:disabled):not(.disabled).active, .btn-warning:not(:disabl=
ed):not(.disabled):active, .show > .btn-warning.dropdown-toggle { color: rg=
b(33, 37, 41); background-color: rgb(211, 158, 0); border-color: rgb(198, 1=
49, 0); }

.btn-warning:not(:disabled):not(.disabled).active:focus, .btn-warning:not(:=
disabled):not(.disabled):active:focus, .show > .btn-warning.dropdown-toggle=
:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69)=
; border-color: rgb(220, 53, 69); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(200, 3=
5, 51); border-color: rgb(189, 33, 48); }

.btn-danger.focus, .btn-danger:focus { box-shadow: rgba(220, 53, 69, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-danger.disabled, .btn-danger:disabled { color: rgb(255, 255, 255); bac=
kground-color: rgb(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-danger:not(:disabled):not(.disabled).active, .btn-danger:not(:disabled=
):not(.disabled):active, .show > .btn-danger.dropdown-toggle { color: rgb(2=
55, 255, 255); background-color: rgb(189, 33, 48); border-color: rgb(178, 3=
1, 45); }

.btn-danger:not(:disabled):not(.disabled).active:focus, .btn-danger:not(:di=
sabled):not(.disabled):active:focus, .show > .btn-danger.dropdown-toggle:fo=
cus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); =
border-color: rgb(248, 249, 250); }

.btn-light:hover { color: rgb(33, 37, 41); background-color: rgb(226, 230, =
234); border-color: rgb(218, 224, 229); }

.btn-light.focus, .btn-light:focus { box-shadow: rgba(248, 249, 250, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-light.disabled, .btn-light:disabled { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(248, 249, 250); border-color: rgb(248, 249, 250); }

.btn-light:not(:disabled):not(.disabled).active, .btn-light:not(:disabled):=
not(.disabled):active, .show > .btn-light.dropdown-toggle { color: rgb(33, =
37, 41); background-color: rgb(218, 224, 229); border-color: rgb(211, 217, =
223); }

.btn-light:not(:disabled):not(.disabled).active:focus, .btn-light:not(:disa=
bled):not(.disabled):active:focus, .show > .btn-light.dropdown-toggle:focus=
 { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); b=
order-color: rgb(52, 58, 64); }

.btn-dark:hover { color: rgb(255, 255, 255); background-color: rgb(35, 39, =
43); border-color: rgb(29, 33, 36); }

.btn-dark.focus, .btn-dark:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0p=
x 0px 0.2rem; }

.btn-dark.disabled, .btn-dark:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-dark:not(:disabled):not(.disabled).active, .btn-dark:not(:disabled):no=
t(.disabled):active, .show > .btn-dark.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(29, 33, 36); border-color: rgb(23, 26, 29); =
}

.btn-dark:not(:disabled):not(.disabled).active:focus, .btn-dark:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-dark.dropdown-toggle:focus { =
box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary { color: rgb(0, 123, 255); background-color: transpare=
nt; background-image: none; border-color: rgb(0, 123, 255); }

.btn-outline-primary:hover { color: rgb(255, 255, 255); background-color: r=
gb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-outline-primary.focus, .btn-outline-primary:focus { box-shadow: rgba(0=
, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary.disabled, .btn-outline-primary:disabled { color: rgb(0=
, 123, 255); background-color: transparent; }

.btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-pri=
mary:not(:disabled):not(.disabled):active, .show > .btn-outline-primary.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-outline-primary:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-primary:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-primary.dropdown-toggle:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-secondary { color: rgb(108, 117, 125); background-color: trans=
parent; background-image: none; border-color: rgb(108, 117, 125); }

.btn-outline-secondary:hover { color: rgb(255, 255, 255); background-color:=
 rgb(108, 117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary.focus, .btn-outline-secondary:focus { box-shadow: rg=
ba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled { color: r=
gb(108, 117, 125); background-color: transparent; }

.btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-s=
econdary:not(:disabled):not(.disabled):active, .show > .btn-outline-seconda=
ry.dropdown-toggle { color: rgb(255, 255, 255); background-color: rgb(108, =
117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:not(:disabled):not(.disabled).active:focus, .btn-out=
line-secondary:not(:disabled):not(.disabled):active:focus, .show > .btn-out=
line-secondary.dropdown-toggle:focus { box-shadow: rgba(108, 117, 125, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-outline-success { color: rgb(40, 167, 69); background-color: transpare=
nt; background-image: none; border-color: rgb(40, 167, 69); }

.btn-outline-success:hover { color: rgb(255, 255, 255); background-color: r=
gb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-outline-success.focus, .btn-outline-success:focus { box-shadow: rgba(4=
0, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-success.disabled, .btn-outline-success:disabled { color: rgb(4=
0, 167, 69); background-color: transparent; }

.btn-outline-success:not(:disabled):not(.disabled).active, .btn-outline-suc=
cess:not(:disabled):not(.disabled):active, .show > .btn-outline-success.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-outline-success:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-success:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-success.dropdown-toggle:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-info { color: rgb(23, 162, 184); background-color: transparent=
; background-image: none; border-color: rgb(23, 162, 184); }

.btn-outline-info:hover { color: rgb(255, 255, 255); background-color: rgb(=
23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-outline-info.focus, .btn-outline-info:focus { box-shadow: rgba(23, 162=
, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-info.disabled, .btn-outline-info:disabled { color: rgb(23, 162=
, 184); background-color: transparent; }

.btn-outline-info:not(:disabled):not(.disabled).active, .btn-outline-info:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-info.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184); borde=
r-color: rgb(23, 162, 184); }

.btn-outline-info:not(:disabled):not(.disabled).active:focus, .btn-outline-=
info:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-info.=
dropdown-toggle:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2=
rem; }

.btn-outline-warning { color: rgb(255, 193, 7); background-color: transpare=
nt; background-image: none; border-color: rgb(255, 193, 7); }

.btn-outline-warning:hover { color: rgb(33, 37, 41); background-color: rgb(=
255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-outline-warning.focus, .btn-outline-warning:focus { box-shadow: rgba(2=
55, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-warning.disabled, .btn-outline-warning:disabled { color: rgb(2=
55, 193, 7); background-color: transparent; }

.btn-outline-warning:not(:disabled):not(.disabled).active, .btn-outline-war=
ning:not(:disabled):not(.disabled):active, .show > .btn-outline-warning.dro=
pdown-toggle { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-outline-warning:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-warning:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-warning.dropdown-toggle:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-danger { color: rgb(220, 53, 69); background-color: transparen=
t; background-image: none; border-color: rgb(220, 53, 69); }

.btn-outline-danger:hover { color: rgb(255, 255, 255); background-color: rg=
b(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-outline-danger.focus, .btn-outline-danger:focus { box-shadow: rgba(220=
, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-danger.disabled, .btn-outline-danger:disabled { color: rgb(220=
, 53, 69); background-color: transparent; }

.btn-outline-danger:not(:disabled):not(.disabled).active, .btn-outline-dang=
er:not(:disabled):not(.disabled):active, .show > .btn-outline-danger.dropdo=
wn-toggle { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69); =
border-color: rgb(220, 53, 69); }

.btn-outline-danger:not(:disabled):not(.disabled).active:focus, .btn-outlin=
e-danger:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-d=
anger.dropdown-toggle:focus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0p=
x 0.2rem; }

.btn-outline-light { color: rgb(248, 249, 250); background-color: transpare=
nt; background-image: none; border-color: rgb(248, 249, 250); }

.btn-outline-light:hover { color: rgb(33, 37, 41); background-color: rgb(24=
8, 249, 250); border-color: rgb(248, 249, 250); }

.btn-outline-light.focus, .btn-outline-light:focus { box-shadow: rgba(248, =
249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-light.disabled, .btn-outline-light:disabled { color: rgb(248, =
249, 250); background-color: transparent; }

.btn-outline-light:not(:disabled):not(.disabled).active, .btn-outline-light=
:not(:disabled):not(.disabled):active, .show > .btn-outline-light.dropdown-=
toggle { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); bord=
er-color: rgb(248, 249, 250); }

.btn-outline-light:not(:disabled):not(.disabled).active:focus, .btn-outline=
-light:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-lig=
ht.dropdown-toggle:focus { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px=
 0.2rem; }

.btn-outline-dark { color: rgb(52, 58, 64); background-color: transparent; =
background-image: none; border-color: rgb(52, 58, 64); }

.btn-outline-dark:hover { color: rgb(255, 255, 255); background-color: rgb(=
52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-outline-dark.focus, .btn-outline-dark:focus { box-shadow: rgba(52, 58,=
 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-dark.disabled, .btn-outline-dark:disabled { color: rgb(52, 58,=
 64); background-color: transparent; }

.btn-outline-dark:not(:disabled):not(.disabled).active, .btn-outline-dark:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-dark.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); border-=
color: rgb(52, 58, 64); }

.btn-outline-dark:not(:disabled):not(.disabled).active:focus, .btn-outline-=
dark:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-dark.=
dropdown-toggle:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2re=
m; }

.btn-link { font-weight: 400; color: rgb(0, 123, 255); background-color: tr=
ansparent; }

.btn-link:hover { color: rgb(0, 86, 179); text-decoration: underline; backg=
round-color: transparent; border-color: transparent; }

.btn-link.focus, .btn-link:focus { text-decoration: underline; border-color=
: transparent; box-shadow: none; }

.btn-link.disabled, .btn-link:disabled { color: rgb(108, 117, 125); pointer=
-events: none; }

.btn-group-lg > .btn, .btn-lg { padding: 0.5rem 1rem; font-size: 1.25rem; l=
ine-height: 1.5; border-radius: 0.3rem; }

.btn-group-sm > .btn, .btn-sm { padding: 0.25rem 0.5rem; font-size: 0.875re=
m; line-height: 1.5; border-radius: 0.2rem; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 0.5rem; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { transition: opacity 0.15s linear 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .fade { transition: none 0s ease 0s; }
}

.fade:not(.show) { opacity: 0; }

.collapse:not(.show) { display: none; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .collapsing { transition: none 0s ease 0s; }
}

.dropdown, .dropleft, .dropright, .dropup { position: relative; }

.dropdown-toggle::after { display: inline-block; width: 0px; height: 0px; m=
argin-left: 0.255em; vertical-align: 0.255em; content: ""; border-width: 0.=
3em 0.3em 0px; border-top-style: solid; border-top-color: initial; border-r=
ight-style: solid; border-right-color: transparent; border-bottom-style: in=
itial; border-bottom-color: initial; border-left-style: solid; border-left-=
color: transparent; }

.dropdown-toggle:empty::after { margin-left: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 10rem; padding: 0.5rem 0px; margin: 0=
.125rem 0px 0px; font-size: 1rem; color: rgb(33, 37, 41); text-align: left;=
 list-style: none; background-color: rgb(255, 255, 255); background-clip: p=
adding-box; border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 0.25rem; =
}

.dropdown-menu-right { right: 0px; left: auto; }

.dropup .dropdown-menu { top: auto; bottom: 100%; margin-top: 0px; margin-b=
ottom: 0.125rem; }

.dropup .dropdown-toggle::after { display: inline-block; width: 0px; height=
: 0px; margin-left: 0.255em; vertical-align: 0.255em; content: ""; border-w=
idth: 0px 0.3em 0.3em; border-top-style: initial; border-top-color: initial=
; border-right-style: solid; border-right-color: transparent; border-bottom=
-style: solid; border-bottom-color: initial; border-left-style: solid; bord=
er-left-color: transparent; }

.dropup .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-menu { top: 0px; right: auto; left: 100%; margin-top: =
0px; margin-left: 0.125rem; }

.dropright .dropdown-toggle::after { display: inline-block; width: 0px; hei=
ght: 0px; margin-left: 0.255em; vertical-align: 0.255em; content: ""; borde=
r-width: 0.3em 0px 0.3em 0.3em; border-top-style: solid; border-top-color: =
transparent; border-right-style: initial; border-right-color: initial; bord=
er-bottom-style: solid; border-bottom-color: transparent; border-left-style=
: solid; border-left-color: initial; }

.dropright .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-toggle::after { vertical-align: 0px; }

.dropleft .dropdown-menu { top: 0px; right: 100%; left: auto; margin-top: 0=
px; margin-right: 0.125rem; }

.dropleft .dropdown-toggle::after { display: inline-block; width: 0px; heig=
ht: 0px; margin-left: 0.255em; vertical-align: 0.255em; content: ""; }

.dropleft .dropdown-toggle::after { display: none; }

.dropleft .dropdown-toggle::before { display: inline-block; width: 0px; hei=
ght: 0px; margin-right: 0.255em; vertical-align: 0.255em; content: ""; bord=
er-top: 0.3em solid transparent; border-right: 0.3em solid; border-bottom: =
0.3em solid transparent; }

.dropleft .dropdown-toggle:empty::after { margin-left: 0px; }

.dropleft .dropdown-toggle::before { vertical-align: 0px; }

.dropdown-menu[x-placement^=3D"bottom"], .dropdown-menu[x-placement^=3D"lef=
t"], .dropdown-menu[x-placement^=3D"right"], .dropdown-menu[x-placement^=3D=
"top"] { right: auto; bottom: auto; }

.dropdown-divider { height: 0px; margin: 0.5rem 0px; overflow: hidden; bord=
er-top: 1px solid rgb(233, 236, 239); }

.dropdown-item { display: block; width: 100%; padding: 0.25rem 1.5rem; clea=
r: both; font-weight: 400; color: rgb(33, 37, 41); text-align: inherit; whi=
te-space: nowrap; background-color: transparent; border: 0px; }

.dropdown-item:focus, .dropdown-item:hover { color: rgb(22, 24, 27); text-d=
ecoration: none; background-color: rgb(248, 249, 250); }

.dropdown-item.active, .dropdown-item:active { color: rgb(255, 255, 255); t=
ext-decoration: none; background-color: rgb(0, 123, 255); }

.dropdown-item.disabled, .dropdown-item:disabled { color: rgb(108, 117, 125=
); background-color: transparent; }

.dropdown-menu.show { display: block; }

.dropdown-header { display: block; padding: 0.5rem 1.5rem; margin-bottom: 0=
px; font-size: 0.875rem; color: rgb(108, 117, 125); white-space: nowrap; }

.dropdown-item-text { display: block; padding: 0.25rem 1.5rem; color: rgb(3=
3, 37, 41); }

.btn-group, .btn-group-vertical { position: relative; display: inline-flex;=
 vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; flex: 0=
 1 auto; }

.btn-group-vertical > .btn:hover, .btn-group > .btn:hover { z-index: 1; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group > .btn.active, .btn-group > .btn:ac=
tive, .btn-group > .btn:focus { z-index: 1; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group, .btn-group-vertical .btn + .bt=
n, .btn-group-vertical .btn + .btn-group, .btn-group-vertical .btn-group + =
.btn, .btn-group-vertical .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { display: flex; flex-wrap: wrap; justify-content: flex-start;=
 }

.btn-toolbar .input-group { width: auto; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn-group:not(:last-child) > .btn, .btn-group > .btn:not(:las=
t-child):not(.dropdown-toggle) { border-top-right-radius: 0px; border-botto=
m-right-radius: 0px; }

.btn-group > .btn-group:not(:first-child) > .btn, .btn-group > .btn:not(:fi=
rst-child) { border-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.dropdown-toggle-split { padding-right: 0.5625rem; padding-left: 0.5625rem;=
 }

.dropdown-toggle-split::after, .dropright .dropdown-toggle-split::after, .d=
ropup .dropdown-toggle-split::after { margin-left: 0px; }

.dropleft .dropdown-toggle-split::before { margin-right: 0px; }

.btn-group-sm > .btn + .dropdown-toggle-split, .btn-sm + .dropdown-toggle-s=
plit { padding-right: 0.375rem; padding-left: 0.375rem; }

.btn-group-lg > .btn + .dropdown-toggle-split, .btn-lg + .dropdown-toggle-s=
plit { padding-right: 0.75rem; padding-left: 0.75rem; }

.btn-group-vertical { flex-direction: column; align-items: flex-start; just=
ify-content: center; }

.btn-group-vertical .btn, .btn-group-vertical .btn-group { width: 100%; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn-group:not(:last-child) > .btn, .btn-group-vertic=
al > .btn:not(:last-child):not(.dropdown-toggle) { border-bottom-right-radi=
us: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:not(:first-child) > .btn, .btn-group-verti=
cal > .btn:not(:first-child) { border-top-left-radius: 0px; border-top-righ=
t-radius: 0px; }

.btn-group-toggle > .btn, .btn-group-toggle > .btn-group > .btn { margin-bo=
ttom: 0px; }

.btn-group-toggle > .btn input[type=3D"checkbox"], .btn-group-toggle > .btn=
 input[type=3D"radio"], .btn-group-toggle > .btn-group > .btn input[type=3D=
"checkbox"], .btn-group-toggle > .btn-group > .btn input[type=3D"radio"] { =
position: absolute; clip: rect(0px, 0px, 0px, 0px); pointer-events: none; }

.input-group { position: relative; display: flex; flex-wrap: wrap; align-it=
ems: stretch; width: 100%; }

.input-group > .custom-file, .input-group > .custom-select, .input-group > =
.form-control { position: relative; flex: 1 1 auto; width: 1%; margin-botto=
m: 0px; }

.input-group > .custom-file:focus, .input-group > .custom-select:focus, .in=
put-group > .form-control:focus { z-index: 3; }

.input-group > .custom-file + .custom-file, .input-group > .custom-file + .=
custom-select, .input-group > .custom-file + .form-control, .input-group > =
.custom-select + .custom-file, .input-group > .custom-select + .custom-sele=
ct, .input-group > .custom-select + .form-control, .input-group > .form-con=
trol + .custom-file, .input-group > .form-control + .custom-select, .input-=
group > .form-control + .form-control { margin-left: -1px; }

.input-group > .custom-select:not(:last-child), .input-group > .form-contro=
l:not(:last-child) { border-top-right-radius: 0px; border-bottom-right-radi=
us: 0px; }

.input-group > .custom-select:not(:first-child), .input-group > .form-contr=
ol:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.input-group > .custom-file { display: flex; align-items: center; }

.input-group > .custom-file:not(:last-child) .custom-file-label, .input-gro=
up > .custom-file:not(:last-child) .custom-file-label::after { border-top-r=
ight-radius: 0px; border-bottom-right-radius: 0px; }

.input-group > .custom-file:not(:first-child) .custom-file-label { border-t=
op-left-radius: 0px; border-bottom-left-radius: 0px; }

.input-group-append, .input-group-prepend { display: flex; }

.input-group-append .btn, .input-group-prepend .btn { position: relative; z=
-index: 2; }

.input-group-append .btn + .btn, .input-group-append .btn + .input-group-te=
xt, .input-group-append .input-group-text + .btn, .input-group-append .inpu=
t-group-text + .input-group-text, .input-group-prepend .btn + .btn, .input-=
group-prepend .btn + .input-group-text, .input-group-prepend .input-group-t=
ext + .btn, .input-group-prepend .input-group-text + .input-group-text { ma=
rgin-left: -1px; }

.input-group-prepend { margin-right: -1px; }

.input-group-append { margin-left: -1px; }

.input-group-text { display: flex; align-items: center; padding: 0.375rem 0=
.75rem; margin-bottom: 0px; font-size: 1rem; font-weight: 400; line-height:=
 1.5; color: rgb(73, 80, 87); text-align: center; white-space: nowrap; back=
ground-color: rgb(233, 236, 239); border: 1px solid rgb(206, 212, 218); bor=
der-radius: 0.25rem; }

.input-group-text input[type=3D"checkbox"], .input-group-text input[type=3D=
"radio"] { margin-top: 0px; }

.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.=
dropdown-toggle), .input-group > .input-group-append:last-child > .input-gr=
oup-text:not(:last-child), .input-group > .input-group-append:not(:last-chi=
ld) > .btn, .input-group > .input-group-append:not(:last-child) > .input-gr=
oup-text, .input-group > .input-group-prepend > .btn, .input-group > .input=
-group-prepend > .input-group-text { border-top-right-radius: 0px; border-b=
ottom-right-radius: 0px; }

.input-group > .input-group-append > .btn, .input-group > .input-group-appe=
nd > .input-group-text, .input-group > .input-group-prepend:first-child > .=
btn:not(:first-child), .input-group > .input-group-prepend:first-child > .i=
nput-group-text:not(:first-child), .input-group > .input-group-prepend:not(=
:first-child) > .btn, .input-group > .input-group-prepend:not(:first-child)=
 > .input-group-text { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.custom-control { position: relative; display: block; min-height: 1.5rem; p=
adding-left: 1.5rem; }

.custom-control-inline { display: inline-flex; margin-right: 1rem; }

.custom-control-input { position: absolute; z-index: -1; opacity: 0; }

.custom-control-input:checked ~ .custom-control-label::before { color: rgb(=
255, 255, 255); background-color: rgb(0, 123, 255); }

.custom-control-input:focus ~ .custom-control-label::before { box-shadow: r=
gb(255, 255, 255) 0px 0px 0px 1px, rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2r=
em; }

.custom-control-input:active ~ .custom-control-label::before { color: rgb(2=
55, 255, 255); background-color: rgb(179, 215, 255); }

.custom-control-input:disabled ~ .custom-control-label { color: rgb(108, 11=
7, 125); }

.custom-control-input:disabled ~ .custom-control-label::before { background=
-color: rgb(233, 236, 239); }

.custom-control-label { position: relative; margin-bottom: 0px; }

.custom-control-label::before { position: absolute; top: 0.25rem; left: -1.=
5rem; display: block; width: 1rem; height: 1rem; pointer-events: none; cont=
ent: ""; user-select: none; background-color: rgb(222, 226, 230); }

.custom-control-label::after { position: absolute; top: 0.25rem; left: -1.5=
rem; display: block; width: 1rem; height: 1rem; content: ""; background-rep=
eat: no-repeat; background-position: center center; background-size: 50% 50=
%; }

.custom-checkbox .custom-control-label::before { border-radius: 0.25rem; }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::bef=
ore { background-color: rgb(0, 123, 255); }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::aft=
er { background-image: url("data:image/svg+xml;charset=3Dutf8,%3Csvg xmlns=
=3D'http://www.w3.org/2000/svg' viewBox=3D'0 0 8 8'%3E%3Cpath fill=3D'%23ff=
f' d=3D'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C=
/svg%3E"); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::before { background-color: rgb(0, 123, 255); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::after { background-image: url("data:image/svg+xml;charset=3Dutf8,%3Csvg =
xmlns=3D'http://www.w3.org/2000/svg' viewBox=3D'0 0 4 4'%3E%3Cpath stroke=
=3D'%23fff' d=3D'M0 2h4'/%3E%3C/svg%3E"); }

.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-l=
abel::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-con=
trol-label::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-radio .custom-control-label::before { border-radius: 50%; }

.custom-radio .custom-control-input:checked ~ .custom-control-label::before=
 { background-color: rgb(0, 123, 255); }

.custom-radio .custom-control-input:checked ~ .custom-control-label::after =
{ background-image: url("data:image/svg+xml;charset=3Dutf8,%3Csvg xmlns=3D'=
http://www.w3.org/2000/svg' viewBox=3D'-4 -4 8 8'%3E%3Ccircle r=3D'3' fill=
=3D'%23fff'/%3E%3C/svg%3E"); }

.custom-radio .custom-control-input:disabled:checked ~ .custom-control-labe=
l::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-select { display: inline-block; width: 100%; height: calc(2.25rem +=
 2px); padding: 0.375rem 1.75rem 0.375rem 0.75rem; line-height: 1.5; color:=
 rgb(73, 80, 87); vertical-align: middle; background: url("data:image/svg+x=
ml;charset=3Dutf8,%3Csvg xmlns=3D'http://www.w3.org/2000/svg' viewBox=3D'0 =
0 4 5'%3E%3Cpath fill=3D'%23343a40' d=3D'M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg=
%3E") right 0.75rem center / 8px 10px no-repeat rgb(255, 255, 255); border:=
 1px solid rgb(206, 212, 218); border-radius: 0.25rem; appearance: none; }

.custom-select:focus { border-color: rgb(128, 189, 255); outline: 0px; box-=
shadow: rgba(0, 0, 0, 0.075) 0px 1px 2px inset, rgba(128, 189, 255, 0.5) 0p=
x 0px 5px; }

.custom-select[multiple], .custom-select[size]:not([size=3D"1"]) { height: =
auto; padding-right: 0.75rem; background-image: none; }

.custom-select:disabled { color: rgb(108, 117, 125); background-color: rgb(=
233, 236, 239); }

.custom-select-sm { height: calc(1.8125rem + 2px); padding-top: 0.375rem; p=
adding-bottom: 0.375rem; font-size: 75%; }

.custom-select-lg { height: calc(2.875rem + 2px); padding-top: 0.375rem; pa=
dding-bottom: 0.375rem; font-size: 125%; }

.custom-file { position: relative; display: inline-block; width: 100%; heig=
ht: calc(2.25rem + 2px); margin-bottom: 0px; }

.custom-file-input { position: relative; z-index: 2; width: 100%; height: c=
alc(2.25rem + 2px); margin: 0px; opacity: 0; }

.custom-file-input:focus ~ .custom-file-label { border-color: rgb(128, 189,=
 255); box-shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-file-input:focus ~ .custom-file-label::after { border-color: rgb(12=
8, 189, 255); }

.custom-file-input:lang(en) ~ .custom-file-label::after { content: "Browse"=
; }

.custom-file-label { position: absolute; top: 0px; right: 0px; left: 0px; z=
-index: 1; height: calc(2.25rem + 2px); padding: 0.375rem 0.75rem; line-hei=
ght: 1.5; color: rgb(73, 80, 87); background-color: rgb(255, 255, 255); bor=
der: 1px solid rgb(206, 212, 218); border-radius: 0.25rem; }

.custom-file-label::after { position: absolute; top: 0px; right: 0px; botto=
m: 0px; z-index: 3; display: block; height: 2.25rem; padding: 0.375rem 0.75=
rem; line-height: 1.5; color: rgb(73, 80, 87); content: "Browse"; backgroun=
d-color: rgb(233, 236, 239); border-left: 1px solid rgb(206, 212, 218); bor=
der-radius: 0px 0.25rem 0.25rem 0px; }

.custom-range { width: 100%; padding-left: 0px; background-color: transpare=
nt; appearance: none; }

.custom-range:focus { outline: 0px; }

.custom-range::-webkit-slider-thumb { width: 1rem; height: 1rem; margin-top=
: -0.25rem; background-color: rgb(0, 123, 255); border: 0px; border-radius:=
 1rem; appearance: none; }

.custom-range::-webkit-slider-thumb:focus { outline: 0px; box-shadow: rgb(2=
55, 255, 255) 0px 0px 0px 1px, rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; =
}

.custom-range::-webkit-slider-thumb:active { background-color: rgb(179, 215=
, 255); }

.custom-range::-webkit-slider-runnable-track { width: 100%; height: 0.5rem;=
 color: transparent; cursor: pointer; background-color: rgb(222, 226, 230);=
 border-color: transparent; border-radius: 1rem; }

.nav { display: flex; flex-wrap: wrap; padding-left: 0px; margin-bottom: 0p=
x; list-style: none; }

.nav-link { display: block; padding: 0.5rem 1rem; }

.nav-link:focus, .nav-link:hover { text-decoration: none; }

.nav-link.disabled { color: rgb(108, 117, 125); }

.nav-tabs { border-bottom: 1px solid rgb(222, 226, 230); }

.nav-tabs .nav-item { margin-bottom: -1px; }

.nav-tabs .nav-link { border: 1px solid transparent; border-top-left-radius=
: 0.25rem; border-top-right-radius: 0.25rem; }

.nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover { border-color: rgb(23=
3, 236, 239) rgb(233, 236, 239) rgb(222, 226, 230); }

.nav-tabs .nav-link.disabled { color: rgb(108, 117, 125); background-color:=
 transparent; border-color: transparent; }

.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active { color: rgb=
(73, 80, 87); background-color: rgb(255, 255, 255); border-color: rgb(222, =
226, 230) rgb(222, 226, 230) rgb(255, 255, 255); }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.nav-pills .nav-link { border-radius: 0.25rem; }

.nav-pills .nav-link.active, .nav-pills .show > .nav-link { color: rgb(255,=
 255, 255); background-color: rgb(0, 123, 255); }

.nav-fill .nav-item { flex: 1 1 auto; text-align: center; }

.nav-justified .nav-item { flex-basis: 0px; flex-grow: 1; text-align: cente=
r; }

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.navbar { position: relative; display: flex; flex-wrap: wrap; align-items: =
center; justify-content: space-between; padding: 0.5rem 1rem; }

.navbar > .container, .navbar > .container-fluid { display: flex; flex-wrap=
: wrap; align-items: center; justify-content: space-between; }

.navbar-brand { display: inline-block; padding-top: 0.3125rem; padding-bott=
om: 0.3125rem; margin-right: 1rem; font-size: 1.25rem; line-height: inherit=
; white-space: nowrap; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-nav { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; list-style: none; }

.navbar-nav .nav-link { padding-right: 0px; padding-left: 0px; }

.navbar-nav .dropdown-menu { position: static; float: none; }

.navbar-text { display: inline-block; padding-top: 0.5rem; padding-bottom: =
0.5rem; }

.navbar-collapse { flex-basis: 100%; flex-grow: 1; align-items: center; }

.navbar-toggler { padding: 0.25rem 0.75rem; font-size: 1.25rem; line-height=
: 1; background-color: transparent; border: 1px solid transparent; border-r=
adius: 0.25rem; }

.navbar-toggler:focus, .navbar-toggler:hover { text-decoration: none; }

.navbar-toggler:not(:disabled):not(.disabled) { cursor: pointer; }

.navbar-toggler-icon { display: inline-block; width: 1.5em; height: 1.5em; =
vertical-align: middle; content: ""; background: center center / 100% 100% =
no-repeat; }

@media (max-width: 575.98px) {
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 576px) {
  .navbar-expand-sm { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-sm .navbar-nav { flex-direction: row; }
  .navbar-expand-sm .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-sm .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-sm .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-sm .navbar-toggler { display: none; }
}

@media (max-width: 767.98px) {
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 768px) {
  .navbar-expand-md { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-md .navbar-nav { flex-direction: row; }
  .navbar-expand-md .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-md .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-md .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-md .navbar-toggler { display: none; }
}

@media (max-width: 991.98px) {
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 992px) {
  .navbar-expand-lg { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-lg .navbar-nav { flex-direction: row; }
  .navbar-expand-lg .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-lg .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-lg .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-lg .navbar-toggler { display: none; }
}

@media (max-width: 1199.98px) {
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 1200px) {
  .navbar-expand-xl { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-xl .navbar-nav { flex-direction: row; }
  .navbar-expand-xl .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-xl .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-xl .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-xl .navbar-toggler { display: none; }
}

.navbar-expand { flex-flow: row nowrap; justify-content: flex-start; }

.navbar-expand > .container, .navbar-expand > .container-fluid { padding-ri=
ght: 0px; padding-left: 0px; }

.navbar-expand .navbar-nav { flex-direction: row; }

.navbar-expand .navbar-nav .dropdown-menu { position: absolute; }

.navbar-expand .navbar-nav .nav-link { padding-right: 0.5rem; padding-left:=
 0.5rem; }

.navbar-expand > .container, .navbar-expand > .container-fluid { flex-wrap:=
 nowrap; }

.navbar-expand .navbar-collapse { flex-basis: auto; display: flex !importan=
t; }

.navbar-expand .navbar-toggler { display: none; }

.navbar-light .navbar-brand { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-brand:focus, .navbar-light .navbar-brand:hover { colo=
r: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-nav .nav-link { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-nav .nav-link:focus, .navbar-light .navbar-nav .nav-l=
ink:hover { color: rgba(0, 0, 0, 0.7); }

.navbar-light .navbar-nav .nav-link.disabled { color: rgba(0, 0, 0, 0.3); }

.navbar-light .navbar-nav .active > .nav-link, .navbar-light .navbar-nav .n=
av-link.active, .navbar-light .navbar-nav .nav-link.show, .navbar-light .na=
vbar-nav .show > .nav-link { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-toggler { color: rgba(0, 0, 0, 0.5); border-color: rg=
ba(0, 0, 0, 0.1); }

.navbar-light .navbar-toggler-icon { background-image: url("data:image/svg+=
xml;charset=3Dutf8,%3Csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/=
2000/svg'%3E%3Cpath stroke=3D'rgba(0, 0, 0, 0.5)' stroke-width=3D'2' stroke=
-linecap=3D'round' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h22'/%=
3E%3C/svg%3E"); }

.navbar-light .navbar-text { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-text a { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-text a:focus, .navbar-light .navbar-text a:hover { co=
lor: rgba(0, 0, 0, 0.9); }

.navbar-dark .navbar-brand { color: rgb(255, 255, 255); }

.navbar-dark .navbar-brand:focus, .navbar-dark .navbar-brand:hover { color:=
 rgb(255, 255, 255); }

.navbar-dark .navbar-nav .nav-link { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-nav .nav-link:focus, .navbar-dark .navbar-nav .nav-lin=
k:hover { color: rgba(255, 255, 255, 0.75); }

.navbar-dark .navbar-nav .nav-link.disabled { color: rgba(255, 255, 255, 0.=
25); }

.navbar-dark .navbar-nav .active > .nav-link, .navbar-dark .navbar-nav .nav=
-link.active, .navbar-dark .navbar-nav .nav-link.show, .navbar-dark .navbar=
-nav .show > .nav-link { color: rgb(255, 255, 255); }

.navbar-dark .navbar-toggler { color: rgba(255, 255, 255, 0.5); border-colo=
r: rgba(255, 255, 255, 0.1); }

.navbar-dark .navbar-toggler-icon { background-image: url("data:image/svg+x=
ml;charset=3Dutf8,%3Csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/2=
000/svg'%3E%3Cpath stroke=3D'rgba(255, 255, 255, 0.5)' stroke-width=3D'2' s=
troke-linecap=3D'round' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h=
22'/%3E%3C/svg%3E"); }

.navbar-dark .navbar-text { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-text a { color: rgb(255, 255, 255); }

.navbar-dark .navbar-text a:focus, .navbar-dark .navbar-text a:hover { colo=
r: rgb(255, 255, 255); }

.card { position: relative; display: flex; flex-direction: column; min-widt=
h: 0px; overflow-wrap: break-word; background-color: rgb(255, 255, 255); ba=
ckground-clip: border-box; border: 1px solid rgba(0, 0, 0, 0.125); border-r=
adius: 0.25rem; }

.card > hr { margin-right: 0px; margin-left: 0px; }

.card > .list-group:first-child .list-group-item:first-child { border-top-l=
eft-radius: 0.25rem; border-top-right-radius: 0.25rem; }

.card > .list-group:last-child .list-group-item:last-child { border-bottom-=
right-radius: 0.25rem; border-bottom-left-radius: 0.25rem; }

.card-body { flex: 1 1 auto; padding: 1.25rem; }

.card-title { margin-bottom: 0.75rem; }

.card-subtitle { margin-top: -0.375rem; margin-bottom: 0px; }

.card-text:last-child { margin-bottom: 0px; }

.card-link:hover { text-decoration: none; }

.card-link + .card-link { margin-left: 1.25rem; }

.card-header { padding: 0.75rem 1.25rem; margin-bottom: 0px; background-col=
or: rgba(0, 0, 0, 0.03); border-bottom: 1px solid rgba(0, 0, 0, 0.125); }

.card-header:first-child { border-radius: calc(0.25rem - 1px) calc(0.25rem =
- 1px) 0px 0px; }

.card-header + .list-group .list-group-item:first-child { border-top: 0px; =
}

.card-footer { padding: 0.75rem 1.25rem; background-color: rgba(0, 0, 0, 0.=
03); border-top: 1px solid rgba(0, 0, 0, 0.125); }

.card-footer:last-child { border-radius: 0px 0px calc(0.25rem - 1px) calc(0=
.25rem - 1px); }

.card-header-tabs { margin-right: -0.625rem; margin-bottom: -0.75rem; margi=
n-left: -0.625rem; border-bottom: 0px; }

.card-header-pills { margin-right: -0.625rem; margin-left: -0.625rem; }

.card-img-overlay { position: absolute; inset: 0px; padding: 1.25rem; }

.card-img { width: 100%; border-radius: calc(0.25rem - 1px); }

.card-img-top { width: 100%; border-top-left-radius: calc(0.25rem - 1px); b=
order-top-right-radius: calc(0.25rem - 1px); }

.card-img-bottom { width: 100%; border-bottom-right-radius: calc(0.25rem - =
1px); border-bottom-left-radius: calc(0.25rem - 1px); }

.card-deck { display: flex; flex-direction: column; }

.card-deck .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-deck { flex-flow: row wrap; margin-right: -15px; margin-left: -15px=
; }
  .card-deck .card { display: flex; flex: 1 0 0%; flex-direction: column; m=
argin-right: 15px; margin-bottom: 0px; margin-left: 15px; }
}

.card-group { display: flex; flex-direction: column; }

.card-group > .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-group { flex-flow: row wrap; }
  .card-group > .card { flex: 1 0 0%; margin-bottom: 0px; }
  .card-group > .card + .card { margin-left: 0px; border-left: 0px; }
  .card-group > .card:first-child { border-top-right-radius: 0px; border-bo=
ttom-right-radius: 0px; }
  .card-group > .card:first-child .card-header, .card-group > .card:first-c=
hild .card-img-top { border-top-right-radius: 0px; }
  .card-group > .card:first-child .card-footer, .card-group > .card:first-c=
hild .card-img-bottom { border-bottom-right-radius: 0px; }
  .card-group > .card:last-child { border-top-left-radius: 0px; border-bott=
om-left-radius: 0px; }
  .card-group > .card:last-child .card-header, .card-group > .card:last-chi=
ld .card-img-top { border-top-left-radius: 0px; }
  .card-group > .card:last-child .card-footer, .card-group > .card:last-chi=
ld .card-img-bottom { border-bottom-left-radius: 0px; }
  .card-group > .card:only-child { border-radius: 0.25rem; }
  .card-group > .card:only-child .card-header, .card-group > .card:only-chi=
ld .card-img-top { border-top-left-radius: 0.25rem; border-top-right-radius=
: 0.25rem; }
  .card-group > .card:only-child .card-footer, .card-group > .card:only-chi=
ld .card-img-bottom { border-bottom-right-radius: 0.25rem; border-bottom-le=
ft-radius: 0.25rem; }
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) {=
 border-radius: 0px; }
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .=
card-footer, .card-group > .card:not(:first-child):not(:last-child):not(:on=
ly-child) .card-header, .card-group > .card:not(:first-child):not(:last-chi=
ld):not(:only-child) .card-img-bottom, .card-group > .card:not(:first-child=
):not(:last-child):not(:only-child) .card-img-top { border-radius: 0px; }
}

.card-columns .card { margin-bottom: 0.75rem; }

@media (min-width: 576px) {
  .card-columns { column-count: 3; column-gap: 1.25rem; orphans: 1; widows:=
 1; }
  .card-columns .card { display: inline-block; width: 100%; }
}

.accordion .card:not(:first-of-type):not(:last-of-type) { border-bottom: 0p=
x; border-radius: 0px; }

.accordion .card:not(:first-of-type) .card-header:first-child { border-radi=
us: 0px; }

.accordion .card:first-of-type { border-bottom: 0px; border-bottom-right-ra=
dius: 0px; border-bottom-left-radius: 0px; }

.accordion .card:last-of-type { border-top-left-radius: 0px; border-top-rig=
ht-radius: 0px; }

.breadcrumb { display: flex; flex-wrap: wrap; padding: 0.75rem 1rem; margin=
-bottom: 1rem; list-style: none; background-color: rgb(233, 236, 239); bord=
er-radius: 0.25rem; }

.breadcrumb-item + .breadcrumb-item { padding-left: 0.5rem; }

.breadcrumb-item + .breadcrumb-item::before { display: inline-block; paddin=
g-right: 0.5rem; color: rgb(108, 117, 125); content: "/"; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: underl=
ine; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: none; =
}

.breadcrumb-item.active { color: rgb(108, 117, 125); }

.pagination { display: flex; padding-left: 0px; list-style: none; border-ra=
dius: 0.25rem; }

.page-link { position: relative; display: block; padding: 0.5rem 0.75rem; m=
argin-left: -1px; line-height: 1.25; color: rgb(0, 123, 255); background-co=
lor: rgb(255, 255, 255); border: 1px solid rgb(222, 226, 230); }

.page-link:hover { z-index: 2; color: rgb(0, 86, 179); text-decoration: non=
e; background-color: rgb(233, 236, 239); border-color: rgb(222, 226, 230); =
}

.page-link:focus { z-index: 2; outline: 0px; box-shadow: rgba(0, 123, 255, =
0.25) 0px 0px 0px 0.2rem; }

.page-link:not(:disabled):not(.disabled) { cursor: pointer; }

.page-item:first-child .page-link { margin-left: 0px; border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.page-item:last-child .page-link { border-top-right-radius: 0.25rem; border=
-bottom-right-radius: 0.25rem; }

.page-item.active .page-link { z-index: 1; color: rgb(255, 255, 255); backg=
round-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.page-item.disabled .page-link { color: rgb(108, 117, 125); pointer-events:=
 none; cursor: auto; background-color: rgb(255, 255, 255); border-color: rg=
b(222, 226, 230); }

.pagination-lg .page-link { padding: 0.75rem 1.5rem; font-size: 1.25rem; li=
ne-height: 1.5; }

.pagination-lg .page-item:first-child .page-link { border-top-left-radius: =
0.3rem; border-bottom-left-radius: 0.3rem; }

.pagination-lg .page-item:last-child .page-link { border-top-right-radius: =
0.3rem; border-bottom-right-radius: 0.3rem; }

.pagination-sm .page-link { padding: 0.25rem 0.5rem; font-size: 0.875rem; l=
ine-height: 1.5; }

.pagination-sm .page-item:first-child .page-link { border-top-left-radius: =
0.2rem; border-bottom-left-radius: 0.2rem; }

.pagination-sm .page-item:last-child .page-link { border-top-right-radius: =
0.2rem; border-bottom-right-radius: 0.2rem; }

.badge { display: inline-block; padding: 0.25em 0.4em; font-size: 75%; font=
-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vert=
ical-align: baseline; border-radius: 0.25rem; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.badge-pill { padding-right: 0.6em; padding-left: 0.6em; border-radius: 10r=
em; }

.badge-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 2=
55); }

.badge-primary[href]:focus, .badge-primary[href]:hover { color: rgb(255, 25=
5, 255); text-decoration: none; background-color: rgb(0, 98, 204); }

.badge-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 11=
7, 125); }

.badge-secondary[href]:focus, .badge-secondary[href]:hover { color: rgb(255=
, 255, 255); text-decoration: none; background-color: rgb(84, 91, 98); }

.badge-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, =
69); }

.badge-success[href]:focus, .badge-success[href]:hover { color: rgb(255, 25=
5, 255); text-decoration: none; background-color: rgb(30, 126, 52); }

.badge-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184=
); }

.badge-info[href]:focus, .badge-info[href]:hover { color: rgb(255, 255, 255=
); text-decoration: none; background-color: rgb(17, 122, 139); }

.badge-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7)=
; }

.badge-warning[href]:focus, .badge-warning[href]:hover { color: rgb(33, 37,=
 41); text-decoration: none; background-color: rgb(211, 158, 0); }

.badge-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 6=
9); }

.badge-danger[href]:focus, .badge-danger[href]:hover { color: rgb(255, 255,=
 255); text-decoration: none; background-color: rgb(189, 33, 48); }

.badge-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250)=
; }

.badge-light[href]:focus, .badge-light[href]:hover { color: rgb(33, 37, 41)=
; text-decoration: none; background-color: rgb(218, 224, 229); }

.badge-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

.badge-dark[href]:focus, .badge-dark[href]:hover { color: rgb(255, 255, 255=
); text-decoration: none; background-color: rgb(29, 33, 36); }

.jumbotron { padding: 2rem 1rem; margin-bottom: 2rem; background-color: rgb=
(233, 236, 239); border-radius: 0.3rem; }

@media (min-width: 576px) {
  .jumbotron { padding: 4rem 2rem; }
}

.jumbotron-fluid { padding-right: 0px; padding-left: 0px; border-radius: 0p=
x; }

.alert { position: relative; padding: 0.75rem 1.25rem; margin-bottom: 1rem;=
 border: 1px solid transparent; border-radius: 0.25rem; }

.alert-heading { color: inherit; }

.alert-link { font-weight: 700; }

.alert-dismissible { padding-right: 4rem; }

.alert-dismissible .close { position: absolute; top: 0px; right: 0px; paddi=
ng: 0.75rem 1.25rem; color: inherit; }

.alert-primary { color: rgb(0, 64, 133); background-color: rgb(204, 229, 25=
5); border-color: rgb(184, 218, 255); }

.alert-primary hr { border-top-color: rgb(159, 205, 255); }

.alert-primary .alert-link { color: rgb(0, 39, 82); }

.alert-secondary { color: rgb(56, 61, 65); background-color: rgb(226, 227, =
229); border-color: rgb(214, 216, 219); }

.alert-secondary hr { border-top-color: rgb(200, 203, 207); }

.alert-secondary .alert-link { color: rgb(32, 35, 38); }

.alert-success { color: rgb(21, 87, 36); background-color: rgb(212, 237, 21=
8); border-color: rgb(195, 230, 203); }

.alert-success hr { border-top-color: rgb(177, 223, 187); }

.alert-success .alert-link { color: rgb(11, 46, 19); }

.alert-info { color: rgb(12, 84, 96); background-color: rgb(209, 236, 241);=
 border-color: rgb(190, 229, 235); }

.alert-info hr { border-top-color: rgb(171, 221, 229); }

.alert-info .alert-link { color: rgb(6, 44, 51); }

.alert-warning { color: rgb(133, 100, 4); background-color: rgb(255, 243, 2=
05); border-color: rgb(255, 238, 186); }

.alert-warning hr { border-top-color: rgb(255, 232, 161); }

.alert-warning .alert-link { color: rgb(83, 63, 3); }

.alert-danger { color: rgb(114, 28, 36); background-color: rgb(248, 215, 21=
8); border-color: rgb(245, 198, 203); }

.alert-danger hr { border-top-color: rgb(241, 176, 183); }

.alert-danger .alert-link { color: rgb(73, 18, 23); }

.alert-light { color: rgb(129, 129, 130); background-color: rgb(254, 254, 2=
54); border-color: rgb(253, 253, 254); }

.alert-light hr { border-top-color: rgb(236, 236, 246); }

.alert-light .alert-link { color: rgb(104, 104, 104); }

.alert-dark { color: rgb(27, 30, 33); background-color: rgb(214, 216, 217);=
 border-color: rgb(198, 200, 202); }

.alert-dark hr { border-top-color: rgb(185, 187, 190); }

.alert-dark .alert-link { color: rgb(4, 5, 5); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

.progress { display: flex; height: 1rem; overflow: hidden; font-size: 0.75r=
em; background-color: rgb(233, 236, 239); border-radius: 0.25rem; }

.progress-bar { display: flex; flex-direction: column; justify-content: cen=
ter; color: rgb(255, 255, 255); text-align: center; white-space: nowrap; ba=
ckground-color: rgb(0, 123, 255); transition: width 0.6s ease 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .progress-bar { transition: none 0s ease 0s; }
}

.progress-bar-striped { background-image: linear-gradient(45deg, rgba(255, =
255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, =
0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); ba=
ckground-size: 1rem 1rem; }

.progress-bar-animated { animation: 1s linear 0s infinite normal none runni=
ng progress-bar-stripes; }

.media { display: flex; align-items: flex-start; }

.media-body { flex: 1 1 0%; }

.list-group { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; }

.list-group-item-action { width: 100%; color: rgb(73, 80, 87); text-align: =
inherit; }

.list-group-item-action:focus, .list-group-item-action:hover { color: rgb(7=
3, 80, 87); text-decoration: none; background-color: rgb(248, 249, 250); }

.list-group-item-action:active { color: rgb(33, 37, 41); background-color: =
rgb(233, 236, 239); }

.list-group-item { position: relative; display: block; padding: 0.75rem 1.2=
5rem; margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1p=
x solid rgba(0, 0, 0, 0.125); }

.list-group-item:first-child { border-top-left-radius: 0.25rem; border-top-=
right-radius: 0.25rem; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.list-group-item:focus, .list-group-item:hover { z-index: 1; text-decoratio=
n: none; }

.list-group-item.disabled, .list-group-item:disabled { color: rgb(108, 117,=
 125); background-color: rgb(255, 255, 255); }

.list-group-item.active { z-index: 2; color: rgb(255, 255, 255); background=
-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.list-group-flush .list-group-item { border-right: 0px; border-left: 0px; b=
order-radius: 0px; }

.list-group-flush:first-child .list-group-item:first-child { border-top: 0p=
x; }

.list-group-flush:last-child .list-group-item:last-child { border-bottom: 0=
px; }

.list-group-item-primary { color: rgb(0, 64, 133); background-color: rgb(18=
4, 218, 255); }

.list-group-item-primary.list-group-item-action:focus, .list-group-item-pri=
mary.list-group-item-action:hover { color: rgb(0, 64, 133); background-colo=
r: rgb(159, 205, 255); }

.list-group-item-primary.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(0, 64, 133); border-color: rgb(0, 64, 133); =
}

.list-group-item-secondary { color: rgb(56, 61, 65); background-color: rgb(=
214, 216, 219); }

.list-group-item-secondary.list-group-item-action:focus, .list-group-item-s=
econdary.list-group-item-action:hover { color: rgb(56, 61, 65); background-=
color: rgb(200, 203, 207); }

.list-group-item-secondary.list-group-item-action.active { color: rgb(255, =
255, 255); background-color: rgb(56, 61, 65); border-color: rgb(56, 61, 65)=
; }

.list-group-item-success { color: rgb(21, 87, 36); background-color: rgb(19=
5, 230, 203); }

.list-group-item-success.list-group-item-action:focus, .list-group-item-suc=
cess.list-group-item-action:hover { color: rgb(21, 87, 36); background-colo=
r: rgb(177, 223, 187); }

.list-group-item-success.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(21, 87, 36); border-color: rgb(21, 87, 36); =
}

.list-group-item-info { color: rgb(12, 84, 96); background-color: rgb(190, =
229, 235); }

.list-group-item-info.list-group-item-action:focus, .list-group-item-info.l=
ist-group-item-action:hover { color: rgb(12, 84, 96); background-color: rgb=
(171, 221, 229); }

.list-group-item-info.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(12, 84, 96); border-color: rgb(12, 84, 96); }

.list-group-item-warning { color: rgb(133, 100, 4); background-color: rgb(2=
55, 238, 186); }

.list-group-item-warning.list-group-item-action:focus, .list-group-item-war=
ning.list-group-item-action:hover { color: rgb(133, 100, 4); background-col=
or: rgb(255, 232, 161); }

.list-group-item-warning.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(133, 100, 4); border-color: rgb(133, 100, 4)=
; }

.list-group-item-danger { color: rgb(114, 28, 36); background-color: rgb(24=
5, 198, 203); }

.list-group-item-danger.list-group-item-action:focus, .list-group-item-dang=
er.list-group-item-action:hover { color: rgb(114, 28, 36); background-color=
: rgb(241, 176, 183); }

.list-group-item-danger.list-group-item-action.active { color: rgb(255, 255=
, 255); background-color: rgb(114, 28, 36); border-color: rgb(114, 28, 36);=
 }

.list-group-item-light { color: rgb(129, 129, 130); background-color: rgb(2=
53, 253, 254); }

.list-group-item-light.list-group-item-action:focus, .list-group-item-light=
.list-group-item-action:hover { color: rgb(129, 129, 130); background-color=
: rgb(236, 236, 246); }

.list-group-item-light.list-group-item-action.active { color: rgb(255, 255,=
 255); background-color: rgb(129, 129, 130); border-color: rgb(129, 129, 13=
0); }

.list-group-item-dark { color: rgb(27, 30, 33); background-color: rgb(198, =
200, 202); }

.list-group-item-dark.list-group-item-action:focus, .list-group-item-dark.l=
ist-group-item-action:hover { color: rgb(27, 30, 33); background-color: rgb=
(185, 187, 190); }

.list-group-item-dark.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(27, 30, 33); border-color: rgb(27, 30, 33); }

.close { float: right; font-size: 1.5rem; font-weight: 700; line-height: 1;=
 color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity:=
 0.5; }

.close:focus, .close:hover { color: rgb(0, 0, 0); text-decoration: none; op=
acity: 0.75; }

.close:not(:disabled):not(.disabled) { cursor: pointer; }

button.close { padding: 0px; background-color: transparent; border: 0px; ap=
pearance: none; }

.modal-open { overflow: hidden; }

.modal { position: fixed; inset: 0px; z-index: 1050; display: none; overflo=
w: hidden; outline: 0px; }

.modal-open .modal { overflow: hidden auto; }

.modal-dialog { position: relative; width: auto; margin: 0.5rem; pointer-ev=
ents: none; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s, -webkit=
-transform 0.3s ease-out 0s; transform: translate(0px, -25%); }

@media screen and (prefers-reduced-motion: reduce) {
  .modal.fade .modal-dialog { transition: none 0s ease 0s; }
}

.modal.show .modal-dialog { transform: translate(0px, 0px); }

.modal-dialog-centered { display: flex; align-items: center; min-height: ca=
lc(100% - 1rem); }

.modal-content { position: relative; display: flex; flex-direction: column;=
 width: 100%; pointer-events: auto; background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-r=
adius: 0.3rem; outline: 0px; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1040; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.show { opacity: 0.5; }

.modal-header { display: flex; align-items: flex-start; justify-content: sp=
ace-between; padding: 1rem; border-bottom: 1px solid rgb(233, 236, 239); bo=
rder-top-left-radius: 0.3rem; border-top-right-radius: 0.3rem; }

.modal-header .close { padding: 1rem; margin: -1rem -1rem -1rem auto; }

.modal-title { margin-bottom: 0px; line-height: 1.5; }

.modal-body { position: relative; flex: 1 1 auto; padding: 1rem; }

.modal-footer { display: flex; align-items: center; justify-content: flex-e=
nd; padding: 1rem; border-top: 1px solid rgb(233, 236, 239); }

.modal-footer > :not(:first-child) { margin-left: 0.25rem; }

.modal-footer > :not(:last-child) { margin-right: 0.25rem; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 576px) {
  .modal-dialog { max-width: 500px; margin: 1.75rem auto; }
  .modal-dialog-centered { min-height: calc(100% - 3.5rem); }
  .modal-sm { max-width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { max-width: 800px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; margin: 0px; =
font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvet=
ica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe=
 UI Symbol"; font-style: normal; font-weight: 400; line-height: 1.5; text-a=
lign: start; text-decoration: none; text-shadow: none; text-transform: none=
; letter-spacing: normal; word-break: normal; word-spacing: normal; white-s=
pace: normal; line-break: auto; font-size: 0.875rem; overflow-wrap: break-w=
ord; opacity: 0; }

.tooltip.show { opacity: 0.9; }

.tooltip .arrow { position: absolute; display: block; width: 0.8rem; height=
: 0.4rem; }

.tooltip .arrow::before { position: absolute; content: ""; border-color: tr=
ansparent; border-style: solid; }

.bs-tooltip-auto[x-placement^=3D"top"], .bs-tooltip-top { padding: 0.4rem 0=
px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow, .bs-tooltip-top .arrow { bot=
tom: 0px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow::before, .bs-tooltip-top .arr=
ow::before { top: 0px; border-width: 0.4rem 0.4rem 0px; border-top-color: r=
gb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"right"], .bs-tooltip-right { padding: 0px =
0.4rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow, .bs-tooltip-right .arrow {=
 left: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow::before, .bs-tooltip-right =
.arrow::before { right: 0px; border-width: 0.4rem 0.4rem 0.4rem 0px; border=
-right-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"bottom"], .bs-tooltip-bottom { padding: 0.=
4rem 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow, .bs-tooltip-bottom .arrow=
 { top: 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow::before, .bs-tooltip-botto=
m .arrow::before { bottom: 0px; border-width: 0px 0.4rem 0.4rem; border-bot=
tom-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"left"], .bs-tooltip-left { padding: 0px 0.=
4rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow, .bs-tooltip-left .arrow { r=
ight: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow::before, .bs-tooltip-left .a=
rrow::before { left: 0px; border-width: 0.4rem 0px 0.4rem 0.4rem; border-le=
ft-color: rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 0.25rem 0.5rem; color: rgb(255,=
 255, 255); text-align: center; background-color: rgb(0, 0, 0); border-radi=
us: 0.25rem; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 block; max-width: 276px; font-family: -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji"=
, "Segoe UI Emoji", "Segoe UI Symbol"; font-style: normal; font-weight: 400=
; line-height: 1.5; text-align: start; text-decoration: none; text-shadow: =
none; text-transform: none; letter-spacing: normal; word-break: normal; wor=
d-spacing: normal; white-space: normal; line-break: auto; font-size: 0.875r=
em; overflow-wrap: break-word; background-color: rgb(255, 255, 255); backgr=
ound-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-radius=
: 0.3rem; }

.popover .arrow { position: absolute; display: block; width: 1rem; height: =
0.5rem; margin: 0px 0.3rem; }

.popover .arrow::after, .popover .arrow::before { position: absolute; displ=
ay: block; content: ""; border-color: transparent; border-style: solid; }

.bs-popover-auto[x-placement^=3D"top"], .bs-popover-top { margin-bottom: 0.=
5rem; }

.bs-popover-auto[x-placement^=3D"top"] .arrow, .bs-popover-top .arrow { bot=
tom: calc((0.5rem + 1px) * -1); }

.bs-popover-auto[x-placement^=3D"top"] .arrow::after, .bs-popover-auto[x-pl=
acement^=3D"top"] .arrow::before, .bs-popover-top .arrow::after, .bs-popove=
r-top .arrow::before { border-width: 0.5rem 0.5rem 0px; }

.bs-popover-auto[x-placement^=3D"top"] .arrow::before, .bs-popover-top .arr=
ow::before { bottom: 0px; border-top-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"top"] .arrow::after, .bs-popover-top .arro=
w::after { bottom: 1px; border-top-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"right"], .bs-popover-right { margin-left: =
0.5rem; }

.bs-popover-auto[x-placement^=3D"right"] .arrow, .bs-popover-right .arrow {=
 left: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: 0.3r=
em 0px; }

.bs-popover-auto[x-placement^=3D"right"] .arrow::after, .bs-popover-auto[x-=
placement^=3D"right"] .arrow::before, .bs-popover-right .arrow::after, .bs-=
popover-right .arrow::before { border-width: 0.5rem 0.5rem 0.5rem 0px; }

.bs-popover-auto[x-placement^=3D"right"] .arrow::before, .bs-popover-right =
.arrow::before { left: 0px; border-right-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"right"] .arrow::after, .bs-popover-right .=
arrow::after { left: 1px; border-right-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"], .bs-popover-bottom { margin-top:=
 0.5rem; }

.bs-popover-auto[x-placement^=3D"bottom"] .arrow, .bs-popover-bottom .arrow=
 { top: calc((0.5rem + 1px) * -1); }

.bs-popover-auto[x-placement^=3D"bottom"] .arrow::after, .bs-popover-auto[x=
-placement^=3D"bottom"] .arrow::before, .bs-popover-bottom .arrow::after, .=
bs-popover-bottom .arrow::before { border-width: 0px 0.5rem 0.5rem; }

.bs-popover-auto[x-placement^=3D"bottom"] .arrow::before, .bs-popover-botto=
m .arrow::before { top: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"bottom"] .arrow::after, .bs-popover-bottom=
 .arrow::after { top: 1px; border-bottom-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"] .popover-header::before, .bs-popo=
ver-bottom .popover-header::before { position: absolute; top: 0px; left: 50=
%; display: block; width: 1rem; margin-left: -0.5rem; content: ""; border-b=
ottom: 1px solid rgb(247, 247, 247); }

.bs-popover-auto[x-placement^=3D"left"], .bs-popover-left { margin-right: 0=
.5rem; }

.bs-popover-auto[x-placement^=3D"left"] .arrow, .bs-popover-left .arrow { r=
ight: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: 0.3re=
m 0px; }

.bs-popover-auto[x-placement^=3D"left"] .arrow::after, .bs-popover-auto[x-p=
lacement^=3D"left"] .arrow::before, .bs-popover-left .arrow::after, .bs-pop=
over-left .arrow::before { border-width: 0.5rem 0px 0.5rem 0.5rem; }

.bs-popover-auto[x-placement^=3D"left"] .arrow::before, .bs-popover-left .a=
rrow::before { right: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"left"] .arrow::after, .bs-popover-left .ar=
row::after { right: 1px; border-left-color: rgb(255, 255, 255); }

.popover-header { padding: 0.5rem 0.75rem; margin-bottom: 0px; font-size: 1=
rem; color: inherit; background-color: rgb(247, 247, 247); border-bottom: 1=
px solid rgb(235, 235, 235); border-top-left-radius: calc(0.3rem - 1px); bo=
rder-top-right-radius: calc(0.3rem - 1px); }

.popover-header:empty { display: none; }

.popover-body { padding: 0.5rem 0.75rem; color: rgb(33, 37, 41); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-item { position: relative; display: none; align-items: center; wi=
dth: 100%; transition: transform 0.6s ease 0s, -webkit-transform 0.6s ease =
0s; backface-visibility: hidden; perspective: 1000px; }

@media screen and (prefers-reduced-motion: reduce) {
  .carousel-item { transition: none 0s ease 0s; }
}

.carousel-item-next, .carousel-item-prev, .carousel-item.active { display: =
block; }

.carousel-item-next, .carousel-item-prev { position: absolute; top: 0px; }

.carousel-item-next.carousel-item-left, .carousel-item-prev.carousel-item-r=
ight { transform: translateX(0px); }

@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preser=
ve-3d)) {
  .carousel-item-next.carousel-item-left, .carousel-item-prev.carousel-item=
-right { transform: translate3d(0px, 0px, 0px); }
}

.active.carousel-item-right, .carousel-item-next { transform: translateX(10=
0%); }

@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preser=
ve-3d)) {
  .active.carousel-item-right, .carousel-item-next { transform: translate3d=
(100%, 0px, 0px); }
}

.active.carousel-item-left, .carousel-item-prev { transform: translateX(-10=
0%); }

@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preser=
ve-3d)) {
  .active.carousel-item-left, .carousel-item-prev { transform: translate3d(=
-100%, 0px, 0px); }
}

.carousel-fade .carousel-item { opacity: 0; transition-duration: 0.6s; tran=
sition-property: opacity; }

.carousel-fade .carousel-item-next.carousel-item-left, .carousel-fade .caro=
usel-item-prev.carousel-item-right, .carousel-fade .carousel-item.active { =
opacity: 1; }

.carousel-fade .active.carousel-item-left, .carousel-fade .active.carousel-=
item-right { opacity: 0; }

.carousel-fade .active.carousel-item-left, .carousel-fade .active.carousel-=
item-prev, .carousel-fade .carousel-item-next, .carousel-fade .carousel-ite=
m-prev, .carousel-fade .carousel-item.active { transform: translateX(0px); =
}

@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preser=
ve-3d)) {
  .carousel-fade .active.carousel-item-left, .carousel-fade .active.carouse=
l-item-prev, .carousel-fade .carousel-item-next, .carousel-fade .carousel-i=
tem-prev, .carousel-fade .carousel-item.active { transform: translate3d(0px=
, 0px, 0px); }
}

.carousel-control-next, .carousel-control-prev { position: absolute; top: 0=
px; bottom: 0px; display: flex; align-items: center; justify-content: cente=
r; width: 15%; color: rgb(255, 255, 255); text-align: center; opacity: 0.5;=
 }

.carousel-control-next:focus, .carousel-control-next:hover, .carousel-contr=
ol-prev:focus, .carousel-control-prev:hover { color: rgb(255, 255, 255); te=
xt-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control-prev { left: 0px; }

.carousel-control-next { right: 0px; }

.carousel-control-next-icon, .carousel-control-prev-icon { display: inline-=
block; width: 20px; height: 20px; background: center center / 100% 100% no-=
repeat transparent; }

.carousel-control-prev-icon { background-image: url("data:image/svg+xml;cha=
rset=3Dutf8,%3Csvg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' vie=
wBox=3D'0 0 8 8'%3E%3Cpath d=3D'M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.=
5-1.5z'/%3E%3C/svg%3E"); }

.carousel-control-next-icon { background-image: url("data:image/svg+xml;cha=
rset=3Dutf8,%3Csvg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' vie=
wBox=3D'0 0 8 8'%3E%3Cpath d=3D'M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-=
4-4-4z'/%3E%3C/svg%3E"); }

.carousel-indicators { position: absolute; right: 0px; bottom: 10px; left: =
0px; z-index: 15; display: flex; justify-content: center; padding-left: 0px=
; margin-right: 15%; margin-left: 15%; list-style: none; }

.carousel-indicators li { position: relative; flex: 0 1 auto; width: 30px; =
height: 3px; margin-right: 3px; margin-left: 3px; text-indent: -999px; curs=
or: pointer; background-color: rgba(255, 255, 255, 0.5); }

.carousel-indicators li::before { position: absolute; top: -10px; left: 0px=
; display: inline-block; width: 100%; height: 10px; content: ""; }

.carousel-indicators li::after { position: absolute; bottom: -10px; left: 0=
px; display: inline-block; width: 100%; height: 10px; content: ""; }

.carousel-indicators .active { background-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; }

.align-baseline { vertical-align: baseline !important; }

.align-top { vertical-align: top !important; }

.align-middle { vertical-align: middle !important; }

.align-bottom { vertical-align: bottom !important; }

.align-text-bottom { vertical-align: text-bottom !important; }

.align-text-top { vertical-align: text-top !important; }

.bg-primary { background-color: rgb(0, 123, 255) !important; }

a.bg-primary:focus, a.bg-primary:hover, button.bg-primary:focus, button.bg-=
primary:hover { background-color: rgb(0, 98, 204) !important; }

.bg-secondary { background-color: rgb(108, 117, 125) !important; }

a.bg-secondary:focus, a.bg-secondary:hover, button.bg-secondary:focus, butt=
on.bg-secondary:hover { background-color: rgb(84, 91, 98) !important; }

.bg-success { background-color: rgb(40, 167, 69) !important; }

a.bg-success:focus, a.bg-success:hover, button.bg-success:focus, button.bg-=
success:hover { background-color: rgb(30, 126, 52) !important; }

.bg-info { background-color: rgb(23, 162, 184) !important; }

a.bg-info:focus, a.bg-info:hover, button.bg-info:focus, button.bg-info:hove=
r { background-color: rgb(17, 122, 139) !important; }

.bg-warning { background-color: rgb(255, 193, 7) !important; }

a.bg-warning:focus, a.bg-warning:hover, button.bg-warning:focus, button.bg-=
warning:hover { background-color: rgb(211, 158, 0) !important; }

.bg-danger { background-color: rgb(220, 53, 69) !important; }

a.bg-danger:focus, a.bg-danger:hover, button.bg-danger:focus, button.bg-dan=
ger:hover { background-color: rgb(189, 33, 48) !important; }

.bg-light { background-color: rgb(248, 249, 250) !important; }

a.bg-light:focus, a.bg-light:hover, button.bg-light:focus, button.bg-light:=
hover { background-color: rgb(218, 224, 229) !important; }

.bg-dark { background-color: rgb(52, 58, 64) !important; }

a.bg-dark:focus, a.bg-dark:hover, button.bg-dark:focus, button.bg-dark:hove=
r { background-color: rgb(29, 33, 36) !important; }

.bg-white { background-color: rgb(255, 255, 255) !important; }

.bg-transparent { background-color: transparent !important; }

.border { border: 1px solid rgb(222, 226, 230) !important; }

.border-top { border-top: 1px solid rgb(222, 226, 230) !important; }

.border-right { border-right: 1px solid rgb(222, 226, 230) !important; }

.border-bottom { border-bottom: 1px solid rgb(222, 226, 230) !important; }

.border-left { border-left: 1px solid rgb(222, 226, 230) !important; }

.border-0 { border: 0px !important; }

.border-top-0 { border-top: 0px !important; }

.border-right-0 { border-right: 0px !important; }

.border-bottom-0 { border-bottom: 0px !important; }

.border-left-0 { border-left: 0px !important; }

.border-primary { border-color: rgb(0, 123, 255) !important; }

.border-secondary { border-color: rgb(108, 117, 125) !important; }

.border-success { border-color: rgb(40, 167, 69) !important; }

.border-info { border-color: rgb(23, 162, 184) !important; }

.border-warning { border-color: rgb(255, 193, 7) !important; }

.border-danger { border-color: rgb(220, 53, 69) !important; }

.border-light { border-color: rgb(248, 249, 250) !important; }

.border-dark { border-color: rgb(52, 58, 64) !important; }

.border-white { border-color: rgb(255, 255, 255) !important; }

.rounded { border-radius: 0.25rem !important; }

.rounded-top { border-top-left-radius: 0.25rem !important; border-top-right=
-radius: 0.25rem !important; }

.rounded-right { border-top-right-radius: 0.25rem !important; border-bottom=
-right-radius: 0.25rem !important; }

.rounded-bottom { border-bottom-right-radius: 0.25rem !important; border-bo=
ttom-left-radius: 0.25rem !important; }

.rounded-left { border-top-left-radius: 0.25rem !important; border-bottom-l=
eft-radius: 0.25rem !important; }

.rounded-circle { border-radius: 50% !important; }

.rounded-0 { border-radius: 0px !important; }

.clearfix::after { display: block; clear: both; content: ""; }

.d-none { display: none !important; }

.d-inline { display: inline !important; }

.d-inline-block { display: inline-block !important; }

.d-block { display: block !important; }

.d-table { display: table !important; }

.d-table-row { display: table-row !important; }

.d-table-cell { display: table-cell !important; }

.d-flex { display: flex !important; }

.d-inline-flex { display: inline-flex !important; }

@media (min-width: 576px) {
  .d-sm-none { display: none !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-block { display: block !important; }
  .d-sm-table { display: table !important; }
  .d-sm-table-row { display: table-row !important; }
  .d-sm-table-cell { display: table-cell !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
}

@media (min-width: 768px) {
  .d-md-none { display: none !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-block { display: block !important; }
  .d-md-table { display: table !important; }
  .d-md-table-row { display: table-row !important; }
  .d-md-table-cell { display: table-cell !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
}

@media (min-width: 992px) {
  .d-lg-none { display: none !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-block { display: block !important; }
  .d-lg-table { display: table !important; }
  .d-lg-table-row { display: table-row !important; }
  .d-lg-table-cell { display: table-cell !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
}

@media (min-width: 1200px) {
  .d-xl-none { display: none !important; }
  .d-xl-inline { display: inline !important; }
  .d-xl-inline-block { display: inline-block !important; }
  .d-xl-block { display: block !important; }
  .d-xl-table { display: table !important; }
  .d-xl-table-row { display: table-row !important; }
  .d-xl-table-cell { display: table-cell !important; }
  .d-xl-flex { display: flex !important; }
  .d-xl-inline-flex { display: inline-flex !important; }
}

@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
}

.embed-responsive { position: relative; display: block; width: 100%; paddin=
g: 0px; overflow: hidden; }

.embed-responsive::before { display: block; content: ""; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-21by9::before { padding-top: 42.8571%; }

.embed-responsive-16by9::before { padding-top: 56.25%; }

.embed-responsive-4by3::before { padding-top: 75%; }

.embed-responsive-1by1::before { padding-top: 100%; }

.flex-row { flex-direction: row !important; }

.flex-column { flex-direction: column !important; }

.flex-row-reverse { flex-direction: row-reverse !important; }

.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }

.flex-nowrap { flex-wrap: nowrap !important; }

.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.flex-fill { flex: 1 1 auto !important; }

.flex-grow-0 { flex-grow: 0 !important; }

.flex-grow-1 { flex-grow: 1 !important; }

.flex-shrink-0 { flex-shrink: 0 !important; }

.flex-shrink-1 { flex-shrink: 1 !important; }

.justify-content-start { justify-content: flex-start !important; }

.justify-content-end { justify-content: flex-end !important; }

.justify-content-center { justify-content: center !important; }

.justify-content-between { justify-content: space-between !important; }

.justify-content-around { justify-content: space-around !important; }

.align-items-start { align-items: flex-start !important; }

.align-items-end { align-items: flex-end !important; }

.align-items-center { align-items: center !important; }

.align-items-baseline { align-items: baseline !important; }

.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }

.align-content-end { align-content: flex-end !important; }

.align-content-center { align-content: center !important; }

.align-content-between { align-content: space-between !important; }

.align-content-around { align-content: space-around !important; }

.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }

.align-self-start { align-self: flex-start !important; }

.align-self-end { align-self: flex-end !important; }

.align-self-center { align-self: center !important; }

.align-self-baseline { align-self: baseline !important; }

.align-self-stretch { align-self: stretch !important; }

@media (min-width: 576px) {
  .flex-sm-row { flex-direction: row !important; }
  .flex-sm-column { flex-direction: column !important; }
  .flex-sm-row-reverse { flex-direction: row-reverse !important; }
  .flex-sm-column-reverse { flex-direction: column-reverse !important; }
  .flex-sm-wrap { flex-wrap: wrap !important; }
  .flex-sm-nowrap { flex-wrap: nowrap !important; }
  .flex-sm-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-sm-fill { flex: 1 1 auto !important; }
  .flex-sm-grow-0 { flex-grow: 0 !important; }
  .flex-sm-grow-1 { flex-grow: 1 !important; }
  .flex-sm-shrink-0 { flex-shrink: 0 !important; }
  .flex-sm-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-sm-start { justify-content: flex-start !important; }
  .justify-content-sm-end { justify-content: flex-end !important; }
  .justify-content-sm-center { justify-content: center !important; }
  .justify-content-sm-between { justify-content: space-between !important; =
}
  .justify-content-sm-around { justify-content: space-around !important; }
  .align-items-sm-start { align-items: flex-start !important; }
  .align-items-sm-end { align-items: flex-end !important; }
  .align-items-sm-center { align-items: center !important; }
  .align-items-sm-baseline { align-items: baseline !important; }
  .align-items-sm-stretch { align-items: stretch !important; }
  .align-content-sm-start { align-content: flex-start !important; }
  .align-content-sm-end { align-content: flex-end !important; }
  .align-content-sm-center { align-content: center !important; }
  .align-content-sm-between { align-content: space-between !important; }
  .align-content-sm-around { align-content: space-around !important; }
  .align-content-sm-stretch { align-content: stretch !important; }
  .align-self-sm-auto { align-self: auto !important; }
  .align-self-sm-start { align-self: flex-start !important; }
  .align-self-sm-end { align-self: flex-end !important; }
  .align-self-sm-center { align-self: center !important; }
  .align-self-sm-baseline { align-self: baseline !important; }
  .align-self-sm-stretch { align-self: stretch !important; }
}

@media (min-width: 768px) {
  .flex-md-row { flex-direction: row !important; }
  .flex-md-column { flex-direction: column !important; }
  .flex-md-row-reverse { flex-direction: row-reverse !important; }
  .flex-md-column-reverse { flex-direction: column-reverse !important; }
  .flex-md-wrap { flex-wrap: wrap !important; }
  .flex-md-nowrap { flex-wrap: nowrap !important; }
  .flex-md-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-md-fill { flex: 1 1 auto !important; }
  .flex-md-grow-0 { flex-grow: 0 !important; }
  .flex-md-grow-1 { flex-grow: 1 !important; }
  .flex-md-shrink-0 { flex-shrink: 0 !important; }
  .flex-md-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-md-start { justify-content: flex-start !important; }
  .justify-content-md-end { justify-content: flex-end !important; }
  .justify-content-md-center { justify-content: center !important; }
  .justify-content-md-between { justify-content: space-between !important; =
}
  .justify-content-md-around { justify-content: space-around !important; }
  .align-items-md-start { align-items: flex-start !important; }
  .align-items-md-end { align-items: flex-end !important; }
  .align-items-md-center { align-items: center !important; }
  .align-items-md-baseline { align-items: baseline !important; }
  .align-items-md-stretch { align-items: stretch !important; }
  .align-content-md-start { align-content: flex-start !important; }
  .align-content-md-end { align-content: flex-end !important; }
  .align-content-md-center { align-content: center !important; }
  .align-content-md-between { align-content: space-between !important; }
  .align-content-md-around { align-content: space-around !important; }
  .align-content-md-stretch { align-content: stretch !important; }
  .align-self-md-auto { align-self: auto !important; }
  .align-self-md-start { align-self: flex-start !important; }
  .align-self-md-end { align-self: flex-end !important; }
  .align-self-md-center { align-self: center !important; }
  .align-self-md-baseline { align-self: baseline !important; }
  .align-self-md-stretch { align-self: stretch !important; }
}

@media (min-width: 992px) {
  .flex-lg-row { flex-direction: row !important; }
  .flex-lg-column { flex-direction: column !important; }
  .flex-lg-row-reverse { flex-direction: row-reverse !important; }
  .flex-lg-column-reverse { flex-direction: column-reverse !important; }
  .flex-lg-wrap { flex-wrap: wrap !important; }
  .flex-lg-nowrap { flex-wrap: nowrap !important; }
  .flex-lg-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-lg-fill { flex: 1 1 auto !important; }
  .flex-lg-grow-0 { flex-grow: 0 !important; }
  .flex-lg-grow-1 { flex-grow: 1 !important; }
  .flex-lg-shrink-0 { flex-shrink: 0 !important; }
  .flex-lg-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-lg-start { justify-content: flex-start !important; }
  .justify-content-lg-end { justify-content: flex-end !important; }
  .justify-content-lg-center { justify-content: center !important; }
  .justify-content-lg-between { justify-content: space-between !important; =
}
  .justify-content-lg-around { justify-content: space-around !important; }
  .align-items-lg-start { align-items: flex-start !important; }
  .align-items-lg-end { align-items: flex-end !important; }
  .align-items-lg-center { align-items: center !important; }
  .align-items-lg-baseline { align-items: baseline !important; }
  .align-items-lg-stretch { align-items: stretch !important; }
  .align-content-lg-start { align-content: flex-start !important; }
  .align-content-lg-end { align-content: flex-end !important; }
  .align-content-lg-center { align-content: center !important; }
  .align-content-lg-between { align-content: space-between !important; }
  .align-content-lg-around { align-content: space-around !important; }
  .align-content-lg-stretch { align-content: stretch !important; }
  .align-self-lg-auto { align-self: auto !important; }
  .align-self-lg-start { align-self: flex-start !important; }
  .align-self-lg-end { align-self: flex-end !important; }
  .align-self-lg-center { align-self: center !important; }
  .align-self-lg-baseline { align-self: baseline !important; }
  .align-self-lg-stretch { align-self: stretch !important; }
}

@media (min-width: 1200px) {
  .flex-xl-row { flex-direction: row !important; }
  .flex-xl-column { flex-direction: column !important; }
  .flex-xl-row-reverse { flex-direction: row-reverse !important; }
  .flex-xl-column-reverse { flex-direction: column-reverse !important; }
  .flex-xl-wrap { flex-wrap: wrap !important; }
  .flex-xl-nowrap { flex-wrap: nowrap !important; }
  .flex-xl-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-xl-fill { flex: 1 1 auto !important; }
  .flex-xl-grow-0 { flex-grow: 0 !important; }
  .flex-xl-grow-1 { flex-grow: 1 !important; }
  .flex-xl-shrink-0 { flex-shrink: 0 !important; }
  .flex-xl-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-xl-start { justify-content: flex-start !important; }
  .justify-content-xl-end { justify-content: flex-end !important; }
  .justify-content-xl-center { justify-content: center !important; }
  .justify-content-xl-between { justify-content: space-between !important; =
}
  .justify-content-xl-around { justify-content: space-around !important; }
  .align-items-xl-start { align-items: flex-start !important; }
  .align-items-xl-end { align-items: flex-end !important; }
  .align-items-xl-center { align-items: center !important; }
  .align-items-xl-baseline { align-items: baseline !important; }
  .align-items-xl-stretch { align-items: stretch !important; }
  .align-content-xl-start { align-content: flex-start !important; }
  .align-content-xl-end { align-content: flex-end !important; }
  .align-content-xl-center { align-content: center !important; }
  .align-content-xl-between { align-content: space-between !important; }
  .align-content-xl-around { align-content: space-around !important; }
  .align-content-xl-stretch { align-content: stretch !important; }
  .align-self-xl-auto { align-self: auto !important; }
  .align-self-xl-start { align-self: flex-start !important; }
  .align-self-xl-end { align-self: flex-end !important; }
  .align-self-xl-center { align-self: center !important; }
  .align-self-xl-baseline { align-self: baseline !important; }
  .align-self-xl-stretch { align-self: stretch !important; }
}

.float-left { float: left !important; }

.float-right { float: right !important; }

.float-none { float: none !important; }

@media (min-width: 576px) {
  .float-sm-left { float: left !important; }
  .float-sm-right { float: right !important; }
  .float-sm-none { float: none !important; }
}

@media (min-width: 768px) {
  .float-md-left { float: left !important; }
  .float-md-right { float: right !important; }
  .float-md-none { float: none !important; }
}

@media (min-width: 992px) {
  .float-lg-left { float: left !important; }
  .float-lg-right { float: right !important; }
  .float-lg-none { float: none !important; }
}

@media (min-width: 1200px) {
  .float-xl-left { float: left !important; }
  .float-xl-right { float: right !important; }
  .float-xl-none { float: none !important; }
}

.position-static { position: static !important; }

.position-relative { position: relative !important; }

.position-absolute { position: absolute !important; }

.position-fixed { position: fixed !important; }

.position-sticky { position: sticky !important; }

.fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-index: 103=
0; }

.fixed-bottom { position: fixed; right: 0px; bottom: 0px; left: 0px; z-inde=
x: 1030; }

@supports ((position:-webkit-sticky) or (position:sticky)) {
  .sticky-top { position: sticky; top: 0px; z-index: 1020; }
}

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; overf=
low: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; border: 0=
px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; overflow: visible; clip: auto; white-space: normal;=
 }

.shadow-sm { box-shadow: rgba(0, 0, 0, 0.075) 0px 0.125rem 0.25rem !importa=
nt; }

.shadow { box-shadow: rgba(0, 0, 0, 0.15) 0px 0.5rem 1rem !important; }

.shadow-lg { box-shadow: rgba(0, 0, 0, 0.176) 0px 1rem 3rem !important; }

.shadow-none { box-shadow: none !important; }

.w-25 { width: 25% !important; }

.w-50 { width: 50% !important; }

.w-75 { width: 75% !important; }

.w-100 { width: 100% !important; }

.w-auto { width: auto !important; }

.h-25 { height: 25% !important; }

.h-50 { height: 50% !important; }

.h-75 { height: 75% !important; }

.h-100 { height: 100% !important; }

.h-auto { height: auto !important; }

.mw-100 { max-width: 100% !important; }

.mh-100 { max-height: 100% !important; }

.m-0 { margin: 0px !important; }

.mt-0, .my-0 { margin-top: 0px !important; }

.mr-0, .mx-0 { margin-right: 0px !important; }

.mb-0, .my-0 { margin-bottom: 0px !important; }

.ml-0, .mx-0 { margin-left: 0px !important; }

.m-1 { margin: 0.25rem !important; }

.mt-1, .my-1 { margin-top: 0.25rem !important; }

.mr-1, .mx-1 { margin-right: 0.25rem !important; }

.mb-1, .my-1 { margin-bottom: 0.25rem !important; }

.ml-1, .mx-1 { margin-left: 0.25rem !important; }

.m-2 { margin: 0.5rem !important; }

.mt-2, .my-2 { margin-top: 0.5rem !important; }

.mr-2, .mx-2 { margin-right: 0.5rem !important; }

.mb-2, .my-2 { margin-bottom: 0.5rem !important; }

.ml-2, .mx-2 { margin-left: 0.5rem !important; }

.m-3 { margin: 1rem !important; }

.mt-3, .my-3 { margin-top: 1rem !important; }

.mr-3, .mx-3 { margin-right: 1rem !important; }

.mb-3, .my-3 { margin-bottom: 1rem !important; }

.ml-3, .mx-3 { margin-left: 1rem !important; }

.m-4 { margin: 1.5rem !important; }

.mt-4, .my-4 { margin-top: 1.5rem !important; }

.mr-4, .mx-4 { margin-right: 1.5rem !important; }

.mb-4, .my-4 { margin-bottom: 1.5rem !important; }

.ml-4, .mx-4 { margin-left: 1.5rem !important; }

.m-5 { margin: 3rem !important; }

.mt-5, .my-5 { margin-top: 3rem !important; }

.mr-5, .mx-5 { margin-right: 3rem !important; }

.mb-5, .my-5 { margin-bottom: 3rem !important; }

.ml-5, .mx-5 { margin-left: 3rem !important; }

.p-0 { padding: 0px !important; }

.pt-0, .py-0 { padding-top: 0px !important; }

.pr-0, .px-0 { padding-right: 0px !important; }

.pb-0, .py-0 { padding-bottom: 0px !important; }

.pl-0, .px-0 { padding-left: 0px !important; }

.p-1 { padding: 0.25rem !important; }

.pt-1, .py-1 { padding-top: 0.25rem !important; }

.pr-1, .px-1 { padding-right: 0.25rem !important; }

.pb-1, .py-1 { padding-bottom: 0.25rem !important; }

.pl-1, .px-1 { padding-left: 0.25rem !important; }

.p-2 { padding: 0.5rem !important; }

.pt-2, .py-2 { padding-top: 0.5rem !important; }

.pr-2, .px-2 { padding-right: 0.5rem !important; }

.pb-2, .py-2 { padding-bottom: 0.5rem !important; }

.pl-2, .px-2 { padding-left: 0.5rem !important; }

.p-3 { padding: 1rem !important; }

.pt-3, .py-3 { padding-top: 1rem !important; }

.pr-3, .px-3 { padding-right: 1rem !important; }

.pb-3, .py-3 { padding-bottom: 1rem !important; }

.pl-3, .px-3 { padding-left: 1rem !important; }

.p-4 { padding: 1.5rem !important; }

.pt-4, .py-4 { padding-top: 1.5rem !important; }

.pr-4, .px-4 { padding-right: 1.5rem !important; }

.pb-4, .py-4 { padding-bottom: 1.5rem !important; }

.pl-4, .px-4 { padding-left: 1.5rem !important; }

.p-5 { padding: 3rem !important; }

.pt-5, .py-5 { padding-top: 3rem !important; }

.pr-5, .px-5 { padding-right: 3rem !important; }

.pb-5, .py-5 { padding-bottom: 3rem !important; }

.pl-5, .px-5 { padding-left: 3rem !important; }

.m-auto { margin: auto !important; }

.mt-auto, .my-auto { margin-top: auto !important; }

.mr-auto, .mx-auto { margin-right: auto !important; }

.mb-auto, .my-auto { margin-bottom: auto !important; }

.ml-auto, .mx-auto { margin-left: auto !important; }

@media (min-width: 576px) {
  .m-sm-0 { margin: 0px !important; }
  .mt-sm-0, .my-sm-0 { margin-top: 0px !important; }
  .mr-sm-0, .mx-sm-0 { margin-right: 0px !important; }
  .mb-sm-0, .my-sm-0 { margin-bottom: 0px !important; }
  .ml-sm-0, .mx-sm-0 { margin-left: 0px !important; }
  .m-sm-1 { margin: 0.25rem !important; }
  .mt-sm-1, .my-sm-1 { margin-top: 0.25rem !important; }
  .mr-sm-1, .mx-sm-1 { margin-right: 0.25rem !important; }
  .mb-sm-1, .my-sm-1 { margin-bottom: 0.25rem !important; }
  .ml-sm-1, .mx-sm-1 { margin-left: 0.25rem !important; }
  .m-sm-2 { margin: 0.5rem !important; }
  .mt-sm-2, .my-sm-2 { margin-top: 0.5rem !important; }
  .mr-sm-2, .mx-sm-2 { margin-right: 0.5rem !important; }
  .mb-sm-2, .my-sm-2 { margin-bottom: 0.5rem !important; }
  .ml-sm-2, .mx-sm-2 { margin-left: 0.5rem !important; }
  .m-sm-3 { margin: 1rem !important; }
  .mt-sm-3, .my-sm-3 { margin-top: 1rem !important; }
  .mr-sm-3, .mx-sm-3 { margin-right: 1rem !important; }
  .mb-sm-3, .my-sm-3 { margin-bottom: 1rem !important; }
  .ml-sm-3, .mx-sm-3 { margin-left: 1rem !important; }
  .m-sm-4 { margin: 1.5rem !important; }
  .mt-sm-4, .my-sm-4 { margin-top: 1.5rem !important; }
  .mr-sm-4, .mx-sm-4 { margin-right: 1.5rem !important; }
  .mb-sm-4, .my-sm-4 { margin-bottom: 1.5rem !important; }
  .ml-sm-4, .mx-sm-4 { margin-left: 1.5rem !important; }
  .m-sm-5 { margin: 3rem !important; }
  .mt-sm-5, .my-sm-5 { margin-top: 3rem !important; }
  .mr-sm-5, .mx-sm-5 { margin-right: 3rem !important; }
  .mb-sm-5, .my-sm-5 { margin-bottom: 3rem !important; }
  .ml-sm-5, .mx-sm-5 { margin-left: 3rem !important; }
  .p-sm-0 { padding: 0px !important; }
  .pt-sm-0, .py-sm-0 { padding-top: 0px !important; }
  .pr-sm-0, .px-sm-0 { padding-right: 0px !important; }
  .pb-sm-0, .py-sm-0 { padding-bottom: 0px !important; }
  .pl-sm-0, .px-sm-0 { padding-left: 0px !important; }
  .p-sm-1 { padding: 0.25rem !important; }
  .pt-sm-1, .py-sm-1 { padding-top: 0.25rem !important; }
  .pr-sm-1, .px-sm-1 { padding-right: 0.25rem !important; }
  .pb-sm-1, .py-sm-1 { padding-bottom: 0.25rem !important; }
  .pl-sm-1, .px-sm-1 { padding-left: 0.25rem !important; }
  .p-sm-2 { padding: 0.5rem !important; }
  .pt-sm-2, .py-sm-2 { padding-top: 0.5rem !important; }
  .pr-sm-2, .px-sm-2 { padding-right: 0.5rem !important; }
  .pb-sm-2, .py-sm-2 { padding-bottom: 0.5rem !important; }
  .pl-sm-2, .px-sm-2 { padding-left: 0.5rem !important; }
  .p-sm-3 { padding: 1rem !important; }
  .pt-sm-3, .py-sm-3 { padding-top: 1rem !important; }
  .pr-sm-3, .px-sm-3 { padding-right: 1rem !important; }
  .pb-sm-3, .py-sm-3 { padding-bottom: 1rem !important; }
  .pl-sm-3, .px-sm-3 { padding-left: 1rem !important; }
  .p-sm-4 { padding: 1.5rem !important; }
  .pt-sm-4, .py-sm-4 { padding-top: 1.5rem !important; }
  .pr-sm-4, .px-sm-4 { padding-right: 1.5rem !important; }
  .pb-sm-4, .py-sm-4 { padding-bottom: 1.5rem !important; }
  .pl-sm-4, .px-sm-4 { padding-left: 1.5rem !important; }
  .p-sm-5 { padding: 3rem !important; }
  .pt-sm-5, .py-sm-5 { padding-top: 3rem !important; }
  .pr-sm-5, .px-sm-5 { padding-right: 3rem !important; }
  .pb-sm-5, .py-sm-5 { padding-bottom: 3rem !important; }
  .pl-sm-5, .px-sm-5 { padding-left: 3rem !important; }
  .m-sm-auto { margin: auto !important; }
  .mt-sm-auto, .my-sm-auto { margin-top: auto !important; }
  .mr-sm-auto, .mx-sm-auto { margin-right: auto !important; }
  .mb-sm-auto, .my-sm-auto { margin-bottom: auto !important; }
  .ml-sm-auto, .mx-sm-auto { margin-left: auto !important; }
}

@media (min-width: 768px) {
  .m-md-0 { margin: 0px !important; }
  .mt-md-0, .my-md-0 { margin-top: 0px !important; }
  .mr-md-0, .mx-md-0 { margin-right: 0px !important; }
  .mb-md-0, .my-md-0 { margin-bottom: 0px !important; }
  .ml-md-0, .mx-md-0 { margin-left: 0px !important; }
  .m-md-1 { margin: 0.25rem !important; }
  .mt-md-1, .my-md-1 { margin-top: 0.25rem !important; }
  .mr-md-1, .mx-md-1 { margin-right: 0.25rem !important; }
  .mb-md-1, .my-md-1 { margin-bottom: 0.25rem !important; }
  .ml-md-1, .mx-md-1 { margin-left: 0.25rem !important; }
  .m-md-2 { margin: 0.5rem !important; }
  .mt-md-2, .my-md-2 { margin-top: 0.5rem !important; }
  .mr-md-2, .mx-md-2 { margin-right: 0.5rem !important; }
  .mb-md-2, .my-md-2 { margin-bottom: 0.5rem !important; }
  .ml-md-2, .mx-md-2 { margin-left: 0.5rem !important; }
  .m-md-3 { margin: 1rem !important; }
  .mt-md-3, .my-md-3 { margin-top: 1rem !important; }
  .mr-md-3, .mx-md-3 { margin-right: 1rem !important; }
  .mb-md-3, .my-md-3 { margin-bottom: 1rem !important; }
  .ml-md-3, .mx-md-3 { margin-left: 1rem !important; }
  .m-md-4 { margin: 1.5rem !important; }
  .mt-md-4, .my-md-4 { margin-top: 1.5rem !important; }
  .mr-md-4, .mx-md-4 { margin-right: 1.5rem !important; }
  .mb-md-4, .my-md-4 { margin-bottom: 1.5rem !important; }
  .ml-md-4, .mx-md-4 { margin-left: 1.5rem !important; }
  .m-md-5 { margin: 3rem !important; }
  .mt-md-5, .my-md-5 { margin-top: 3rem !important; }
  .mr-md-5, .mx-md-5 { margin-right: 3rem !important; }
  .mb-md-5, .my-md-5 { margin-bottom: 3rem !important; }
  .ml-md-5, .mx-md-5 { margin-left: 3rem !important; }
  .p-md-0 { padding: 0px !important; }
  .pt-md-0, .py-md-0 { padding-top: 0px !important; }
  .pr-md-0, .px-md-0 { padding-right: 0px !important; }
  .pb-md-0, .py-md-0 { padding-bottom: 0px !important; }
  .pl-md-0, .px-md-0 { padding-left: 0px !important; }
  .p-md-1 { padding: 0.25rem !important; }
  .pt-md-1, .py-md-1 { padding-top: 0.25rem !important; }
  .pr-md-1, .px-md-1 { padding-right: 0.25rem !important; }
  .pb-md-1, .py-md-1 { padding-bottom: 0.25rem !important; }
  .pl-md-1, .px-md-1 { padding-left: 0.25rem !important; }
  .p-md-2 { padding: 0.5rem !important; }
  .pt-md-2, .py-md-2 { padding-top: 0.5rem !important; }
  .pr-md-2, .px-md-2 { padding-right: 0.5rem !important; }
  .pb-md-2, .py-md-2 { padding-bottom: 0.5rem !important; }
  .pl-md-2, .px-md-2 { padding-left: 0.5rem !important; }
  .p-md-3 { padding: 1rem !important; }
  .pt-md-3, .py-md-3 { padding-top: 1rem !important; }
  .pr-md-3, .px-md-3 { padding-right: 1rem !important; }
  .pb-md-3, .py-md-3 { padding-bottom: 1rem !important; }
  .pl-md-3, .px-md-3 { padding-left: 1rem !important; }
  .p-md-4 { padding: 1.5rem !important; }
  .pt-md-4, .py-md-4 { padding-top: 1.5rem !important; }
  .pr-md-4, .px-md-4 { padding-right: 1.5rem !important; }
  .pb-md-4, .py-md-4 { padding-bottom: 1.5rem !important; }
  .pl-md-4, .px-md-4 { padding-left: 1.5rem !important; }
  .p-md-5 { padding: 3rem !important; }
  .pt-md-5, .py-md-5 { padding-top: 3rem !important; }
  .pr-md-5, .px-md-5 { padding-right: 3rem !important; }
  .pb-md-5, .py-md-5 { padding-bottom: 3rem !important; }
  .pl-md-5, .px-md-5 { padding-left: 3rem !important; }
  .m-md-auto { margin: auto !important; }
  .mt-md-auto, .my-md-auto { margin-top: auto !important; }
  .mr-md-auto, .mx-md-auto { margin-right: auto !important; }
  .mb-md-auto, .my-md-auto { margin-bottom: auto !important; }
  .ml-md-auto, .mx-md-auto { margin-left: auto !important; }
}

@media (min-width: 992px) {
  .m-lg-0 { margin: 0px !important; }
  .mt-lg-0, .my-lg-0 { margin-top: 0px !important; }
  .mr-lg-0, .mx-lg-0 { margin-right: 0px !important; }
  .mb-lg-0, .my-lg-0 { margin-bottom: 0px !important; }
  .ml-lg-0, .mx-lg-0 { margin-left: 0px !important; }
  .m-lg-1 { margin: 0.25rem !important; }
  .mt-lg-1, .my-lg-1 { margin-top: 0.25rem !important; }
  .mr-lg-1, .mx-lg-1 { margin-right: 0.25rem !important; }
  .mb-lg-1, .my-lg-1 { margin-bottom: 0.25rem !important; }
  .ml-lg-1, .mx-lg-1 { margin-left: 0.25rem !important; }
  .m-lg-2 { margin: 0.5rem !important; }
  .mt-lg-2, .my-lg-2 { margin-top: 0.5rem !important; }
  .mr-lg-2, .mx-lg-2 { margin-right: 0.5rem !important; }
  .mb-lg-2, .my-lg-2 { margin-bottom: 0.5rem !important; }
  .ml-lg-2, .mx-lg-2 { margin-left: 0.5rem !important; }
  .m-lg-3 { margin: 1rem !important; }
  .mt-lg-3, .my-lg-3 { margin-top: 1rem !important; }
  .mr-lg-3, .mx-lg-3 { margin-right: 1rem !important; }
  .mb-lg-3, .my-lg-3 { margin-bottom: 1rem !important; }
  .ml-lg-3, .mx-lg-3 { margin-left: 1rem !important; }
  .m-lg-4 { margin: 1.5rem !important; }
  .mt-lg-4, .my-lg-4 { margin-top: 1.5rem !important; }
  .mr-lg-4, .mx-lg-4 { margin-right: 1.5rem !important; }
  .mb-lg-4, .my-lg-4 { margin-bottom: 1.5rem !important; }
  .ml-lg-4, .mx-lg-4 { margin-left: 1.5rem !important; }
  .m-lg-5 { margin: 3rem !important; }
  .mt-lg-5, .my-lg-5 { margin-top: 3rem !important; }
  .mr-lg-5, .mx-lg-5 { margin-right: 3rem !important; }
  .mb-lg-5, .my-lg-5 { margin-bottom: 3rem !important; }
  .ml-lg-5, .mx-lg-5 { margin-left: 3rem !important; }
  .p-lg-0 { padding: 0px !important; }
  .pt-lg-0, .py-lg-0 { padding-top: 0px !important; }
  .pr-lg-0, .px-lg-0 { padding-right: 0px !important; }
  .pb-lg-0, .py-lg-0 { padding-bottom: 0px !important; }
  .pl-lg-0, .px-lg-0 { padding-left: 0px !important; }
  .p-lg-1 { padding: 0.25rem !important; }
  .pt-lg-1, .py-lg-1 { padding-top: 0.25rem !important; }
  .pr-lg-1, .px-lg-1 { padding-right: 0.25rem !important; }
  .pb-lg-1, .py-lg-1 { padding-bottom: 0.25rem !important; }
  .pl-lg-1, .px-lg-1 { padding-left: 0.25rem !important; }
  .p-lg-2 { padding: 0.5rem !important; }
  .pt-lg-2, .py-lg-2 { padding-top: 0.5rem !important; }
  .pr-lg-2, .px-lg-2 { padding-right: 0.5rem !important; }
  .pb-lg-2, .py-lg-2 { padding-bottom: 0.5rem !important; }
  .pl-lg-2, .px-lg-2 { padding-left: 0.5rem !important; }
  .p-lg-3 { padding: 1rem !important; }
  .pt-lg-3, .py-lg-3 { padding-top: 1rem !important; }
  .pr-lg-3, .px-lg-3 { padding-right: 1rem !important; }
  .pb-lg-3, .py-lg-3 { padding-bottom: 1rem !important; }
  .pl-lg-3, .px-lg-3 { padding-left: 1rem !important; }
  .p-lg-4 { padding: 1.5rem !important; }
  .pt-lg-4, .py-lg-4 { padding-top: 1.5rem !important; }
  .pr-lg-4, .px-lg-4 { padding-right: 1.5rem !important; }
  .pb-lg-4, .py-lg-4 { padding-bottom: 1.5rem !important; }
  .pl-lg-4, .px-lg-4 { padding-left: 1.5rem !important; }
  .p-lg-5 { padding: 3rem !important; }
  .pt-lg-5, .py-lg-5 { padding-top: 3rem !important; }
  .pr-lg-5, .px-lg-5 { padding-right: 3rem !important; }
  .pb-lg-5, .py-lg-5 { padding-bottom: 3rem !important; }
  .pl-lg-5, .px-lg-5 { padding-left: 3rem !important; }
  .m-lg-auto { margin: auto !important; }
  .mt-lg-auto, .my-lg-auto { margin-top: auto !important; }
  .mr-lg-auto, .mx-lg-auto { margin-right: auto !important; }
  .mb-lg-auto, .my-lg-auto { margin-bottom: auto !important; }
  .ml-lg-auto, .mx-lg-auto { margin-left: auto !important; }
}

@media (min-width: 1200px) {
  .m-xl-0 { margin: 0px !important; }
  .mt-xl-0, .my-xl-0 { margin-top: 0px !important; }
  .mr-xl-0, .mx-xl-0 { margin-right: 0px !important; }
  .mb-xl-0, .my-xl-0 { margin-bottom: 0px !important; }
  .ml-xl-0, .mx-xl-0 { margin-left: 0px !important; }
  .m-xl-1 { margin: 0.25rem !important; }
  .mt-xl-1, .my-xl-1 { margin-top: 0.25rem !important; }
  .mr-xl-1, .mx-xl-1 { margin-right: 0.25rem !important; }
  .mb-xl-1, .my-xl-1 { margin-bottom: 0.25rem !important; }
  .ml-xl-1, .mx-xl-1 { margin-left: 0.25rem !important; }
  .m-xl-2 { margin: 0.5rem !important; }
  .mt-xl-2, .my-xl-2 { margin-top: 0.5rem !important; }
  .mr-xl-2, .mx-xl-2 { margin-right: 0.5rem !important; }
  .mb-xl-2, .my-xl-2 { margin-bottom: 0.5rem !important; }
  .ml-xl-2, .mx-xl-2 { margin-left: 0.5rem !important; }
  .m-xl-3 { margin: 1rem !important; }
  .mt-xl-3, .my-xl-3 { margin-top: 1rem !important; }
  .mr-xl-3, .mx-xl-3 { margin-right: 1rem !important; }
  .mb-xl-3, .my-xl-3 { margin-bottom: 1rem !important; }
  .ml-xl-3, .mx-xl-3 { margin-left: 1rem !important; }
  .m-xl-4 { margin: 1.5rem !important; }
  .mt-xl-4, .my-xl-4 { margin-top: 1.5rem !important; }
  .mr-xl-4, .mx-xl-4 { margin-right: 1.5rem !important; }
  .mb-xl-4, .my-xl-4 { margin-bottom: 1.5rem !important; }
  .ml-xl-4, .mx-xl-4 { margin-left: 1.5rem !important; }
  .m-xl-5 { margin: 3rem !important; }
  .mt-xl-5, .my-xl-5 { margin-top: 3rem !important; }
  .mr-xl-5, .mx-xl-5 { margin-right: 3rem !important; }
  .mb-xl-5, .my-xl-5 { margin-bottom: 3rem !important; }
  .ml-xl-5, .mx-xl-5 { margin-left: 3rem !important; }
  .p-xl-0 { padding: 0px !important; }
  .pt-xl-0, .py-xl-0 { padding-top: 0px !important; }
  .pr-xl-0, .px-xl-0 { padding-right: 0px !important; }
  .pb-xl-0, .py-xl-0 { padding-bottom: 0px !important; }
  .pl-xl-0, .px-xl-0 { padding-left: 0px !important; }
  .p-xl-1 { padding: 0.25rem !important; }
  .pt-xl-1, .py-xl-1 { padding-top: 0.25rem !important; }
  .pr-xl-1, .px-xl-1 { padding-right: 0.25rem !important; }
  .pb-xl-1, .py-xl-1 { padding-bottom: 0.25rem !important; }
  .pl-xl-1, .px-xl-1 { padding-left: 0.25rem !important; }
  .p-xl-2 { padding: 0.5rem !important; }
  .pt-xl-2, .py-xl-2 { padding-top: 0.5rem !important; }
  .pr-xl-2, .px-xl-2 { padding-right: 0.5rem !important; }
  .pb-xl-2, .py-xl-2 { padding-bottom: 0.5rem !important; }
  .pl-xl-2, .px-xl-2 { padding-left: 0.5rem !important; }
  .p-xl-3 { padding: 1rem !important; }
  .pt-xl-3, .py-xl-3 { padding-top: 1rem !important; }
  .pr-xl-3, .px-xl-3 { padding-right: 1rem !important; }
  .pb-xl-3, .py-xl-3 { padding-bottom: 1rem !important; }
  .pl-xl-3, .px-xl-3 { padding-left: 1rem !important; }
  .p-xl-4 { padding: 1.5rem !important; }
  .pt-xl-4, .py-xl-4 { padding-top: 1.5rem !important; }
  .pr-xl-4, .px-xl-4 { padding-right: 1.5rem !important; }
  .pb-xl-4, .py-xl-4 { padding-bottom: 1.5rem !important; }
  .pl-xl-4, .px-xl-4 { padding-left: 1.5rem !important; }
  .p-xl-5 { padding: 3rem !important; }
  .pt-xl-5, .py-xl-5 { padding-top: 3rem !important; }
  .pr-xl-5, .px-xl-5 { padding-right: 3rem !important; }
  .pb-xl-5, .py-xl-5 { padding-bottom: 3rem !important; }
  .pl-xl-5, .px-xl-5 { padding-left: 3rem !important; }
  .m-xl-auto { margin: auto !important; }
  .mt-xl-auto, .my-xl-auto { margin-top: auto !important; }
  .mr-xl-auto, .mx-xl-auto { margin-right: auto !important; }
  .mb-xl-auto, .my-xl-auto { margin-bottom: auto !important; }
  .ml-xl-auto, .mx-xl-auto { margin-left: auto !important; }
}

.text-monospace { font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Li=
beration Mono", "Courier New", monospace; }

.text-justify { text-align: justify !important; }

.text-nowrap { white-space: nowrap !important; }

.text-truncate { overflow: hidden; text-overflow: ellipsis; white-space: no=
wrap; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

@media (min-width: 576px) {
  .text-sm-left { text-align: left !important; }
  .text-sm-right { text-align: right !important; }
  .text-sm-center { text-align: center !important; }
}

@media (min-width: 768px) {
  .text-md-left { text-align: left !important; }
  .text-md-right { text-align: right !important; }
  .text-md-center { text-align: center !important; }
}

@media (min-width: 992px) {
  .text-lg-left { text-align: left !important; }
  .text-lg-right { text-align: right !important; }
  .text-lg-center { text-align: center !important; }
}

@media (min-width: 1200px) {
  .text-xl-left { text-align: left !important; }
  .text-xl-right { text-align: right !important; }
  .text-xl-center { text-align: center !important; }
}

.text-lowercase { text-transform: lowercase !important; }

.text-uppercase { text-transform: uppercase !important; }

.text-capitalize { text-transform: capitalize !important; }

.font-weight-light { font-weight: 300 !important; }

.font-weight-normal { font-weight: 400 !important; }

.font-weight-bold { font-weight: 700 !important; }

.font-italic { font-style: italic !important; }

.text-white { color: rgb(255, 255, 255) !important; }

.text-primary { color: rgb(0, 123, 255) !important; }

a.text-primary:focus, a.text-primary:hover { color: rgb(0, 98, 204) !import=
ant; }

.text-secondary { color: rgb(108, 117, 125) !important; }

a.text-secondary:focus, a.text-secondary:hover { color: rgb(84, 91, 98) !im=
portant; }

.text-success { color: rgb(40, 167, 69) !important; }

a.text-success:focus, a.text-success:hover { color: rgb(30, 126, 52) !impor=
tant; }

.text-info { color: rgb(23, 162, 184) !important; }

a.text-info:focus, a.text-info:hover { color: rgb(17, 122, 139) !important;=
 }

.text-warning { color: rgb(255, 193, 7) !important; }

a.text-warning:focus, a.text-warning:hover { color: rgb(211, 158, 0) !impor=
tant; }

.text-danger { color: rgb(220, 53, 69) !important; }

a.text-danger:focus, a.text-danger:hover { color: rgb(189, 33, 48) !importa=
nt; }

.text-light { color: rgb(248, 249, 250) !important; }

a.text-light:focus, a.text-light:hover { color: rgb(218, 224, 229) !importa=
nt; }

.text-dark { color: rgb(52, 58, 64) !important; }

a.text-dark:focus, a.text-dark:hover { color: rgb(29, 33, 36) !important; }

.text-body { color: rgb(33, 37, 41) !important; }

.text-muted { color: rgb(108, 117, 125) !important; }

.text-black-50 { color: rgba(0, 0, 0, 0.5) !important; }

.text-white-50 { color: rgba(255, 255, 255, 0.5) !important; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.visible { visibility: visible !important; }

.invisible { visibility: hidden !important; }

@media print {
  *, ::after, ::before { text-shadow: none !important; box-shadow: none !im=
portant; }
  a:not(.btn) { text-decoration: underline; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  pre { white-space: pre-wrap !important; }
  blockquote, pre { border: 1px solid rgb(173, 181, 189); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  @page { size: a3; }
  body { min-width: 992px !important; }
  .container { min-width: 992px !important; }
  .navbar { display: none; }
  .badge { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, =
230) !important; }
  .table-dark { color: inherit; }
  .table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark th=
ead th { border-color: rgb(222, 226, 230); }
  .table .thead-dark th { color: inherit; border-color: rgb(222, 226, 230);=
 }
}
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.cse.ust.hk/comp2012/assignments/assignment3/css/blog-home.css

@charset "utf-8";

body { padding-top: 54px; }

@media (min-width: 992px) {
  body { padding-top: 56px; }
}
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.cse.ust.hk/comp2012/assignments/assignment3/vendor/prism/prism.css

@charset "utf-8";

code[class*=3D"language-"], pre[class*=3D"language-"] { color: black; backg=
round: none; text-shadow: white 0px 1px; font-family: Consolas, Monaco, "An=
dale Mono", "Ubuntu Mono", monospace; font-size: 1em; text-align: left; whi=
te-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: nor=
mal; line-height: 1.5; tab-size: 4; hyphens: none; }

pre[class*=3D"language-"]::selection, pre[class*=3D"language-"] ::selection=
, code[class*=3D"language-"]::selection, code[class*=3D"language-"] ::selec=
tion { text-shadow: none; background: rgb(179, 212, 252); }

@media print {
  code[class*=3D"language-"], pre[class*=3D"language-"] { text-shadow: none=
; }
}

pre[class*=3D"language-"] { padding: 1em; margin: 0.5em 0px; overflow: auto=
; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(245, 242, 240); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; white-space: normal; }

.token.comment, .token.prolog, .token.doctype, .token.cdata { color: slateg=
ray; }

.token.punctuation { color: rgb(153, 153, 153); }

.token.namespace { opacity: 0.7; }

.token.property, .token.tag, .token.boolean, .token.number, .token.constant=
, .token.symbol, .token.deleted { color: rgb(153, 0, 85); }

.token.selector, .token.attr-name, .token.string, .token.char, .token.built=
in, .token.inserted { color: rgb(102, 153, 0); }

.token.operator, .token.entity, .token.url, .language-css .token.string, .s=
tyle .token.string { color: rgb(154, 110, 58); background: rgba(255, 255, 2=
55, 0.5); }

.token.atrule, .token.attr-value, .token.keyword { color: rgb(0, 119, 170);=
 }

.token.function, .token.class-name { color: rgb(221, 74, 104); }

.token.regex, .token.important, .token.variable { color: rgb(238, 153, 0); =
}

.token.important, .token.bold { font-weight: bold; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }
------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://course.cse.ust.hk/comp2012/assignments/assignment3/images/flights.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4SyyRXhpZgAASUkqAAgAAAAHABIBAwABAAAAAQAAABoBBQAB
AAAAYgAAABsBBQABAAAAagAAACgBAwABAAAAAgAAADEBAgANAAAAcgAAADIBAgAUAAAAgAAAAGmH
BAABAAAAlAAAAKYAAABIAAAAAQAAAEgAAAABAAAAR0lNUCAyLjEwLjMwAAAyMDIyOjA0OjA3IDIz
OjEyOjA4AAEAAaADAAEAAAABAAAAAAAAAAkA/gAEAAEAAAABAAAAAAEEAAEAAAAAAQAAAQEEAAEA
AAC+AAAAAgEDAAMAAAAYAQAAAwEDAAEAAAAGAAAABgEDAAEAAAAGAAAAFQEDAAEAAAADAAAAAQIE
AAEAAAAeAQAAAgIEAAEAAACMKwAAAAAAAAgACAAIAP/Y/+AAEEpGSUYAAQEAAAEAAQAA/9sAQwAI
BgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04
MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAvgEAAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAA
AAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
anN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkK
C//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy
0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKD
hIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
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
PJbtbxvnHlFuje+CBxU3hfVIrCeeC7R7g3QVEleU/umHQ478cYrGG3yG4P3l7+xpgKjs351Lpxbb
7lKtJJK+iPU3tYXaQ21yjIHVEEvyO2e+OQAPUmnppV27qoRMG4Ftu3gjzPTjt71zGka2LyT7LMpW
YA4bOQ2P61tqxVgykhgcgg8iuWUZR0OyMoy1Lup6XNpUyRzPG+9dwaMkj9aoMQFJbGAOc1NPcz3U
nmXEzyvjG52JOKy9ZcJo9ySWA24+U+pxRFPRMJtatbHG3kkct7cvCAI2YlcDHGarU9duG4PT196b
8vofzruWh5z11Hz/AOsH+4n/AKCK0tEvNbF1HaaPeXcc8hVY44XIBO7PTpjrnPv71nT7fMHB+4vf
/ZFeleEvElpDrcen6noNlpt6cRpPFaiKRSw43Z5Gcge+axrSahornRh4KVTWVjsrbX7fSbzTPDuq
akbvVZo8vNtVVL9gcYxnkDjJwM9a4/XrJbbxjeMbadQyho5pMlXJ+ZtvAAxuAxz09689lN2fGobU
bpp5kuzumzjLK2M/TivSfEU51OXR9SWRy4R7eePccKRghse+efw9K4PZezkmup6XtlVhJPpsUaxv
E0bPpO4YxHIGOfTkf1FbNc/4i1OAWz2K5eRsbsHhcHP58V1QvzKxxVGuV3OVp8X3z/ut/I1u6hYQ
aXogQHzJZ3UlvoM8e3+NYcW3eeD91u/sa6VK6ucko8rszsvCOjav4j1bTLu6SVrDT/LVJXjGzYjF
tg6buc9M+9ZXjTS7jTPEt2JbUwQyzSPBhcIyFiRtxx0I47Vjy6teLZLatd3bWyfcg81ioPsvQV6t
4Im1Lxb4eNn4n0trizUbo7mcbWY54x0J4P3h15znNctScqUud7djtpQjXh7NXv3MbxPpCad8OdBi
aVYpUDStFICGdnGWA9xnvjgfhXnNe0/FON/+Edt/Ks1lhWQ7pQhJg4457Z6c14v8vofzq8JJyp3f
dkY6KjUSXZGj9uiaOD7Zai5ITAfzCrYBIxUUbWwkeSKaa3JBIULu49Ac/wA8VXk2+XDwfuHv/tGp
rCxkv7lYo1YA/efsoreySOZNt2IZEUyKsbtK7dcKeT7dzWtpGoy6dP5M0EpEhChBwQen3T3P4V0V
npVpZMjxR/vFXbvPU+9Ry6X5msRXxkJVB9w9jjjHt3rJ1E9GaxpSjqjFutUhvik8WyG5R9oDICzL
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
4/WnD/Ut/vD+RoAlhuBEhjJ3xE5MbrkZ9euQfcVaiuLK2uZGWK4B2vHw4IwylT1HoTWbT5v9fJ/v
H+dJxTKU2i0JLNI2eKBy4YAGVg4HXsMDt3yPaq8snnSGSSR2Y9SR/wDXpo/1D/7y/wAjTKEhOTY9
gm9vmbqf4f8A69KoTa/zN09Pf60xvvt9TSr91/p/UUxdQwn95v8Avn/69OcJv+83Qfw+31qOnP8A
f/AfyoAcoTDfM3T+77/Wm4T+83/fP/16F6N9P602gCecJ5g+ZvuJ2/2R70xQm1/mb7vp7j3pZ/8A
WD/cT/0EUxfuv/u/1FHQOoYT+83/AHz/APXpSEz95v8Avn/69MpT1oAeoTD/ADN09Pce9Nwn95v+
+f8A69C9H+n9RTaAHYT+83/fP/16fEE3n5m+63b2PvUVPi++f91v5GgFuJhP7zf98/8A16e4TbH8
zfd9Pc+9RU9/ux/7v9TQAqBN33m6H+H2+tNwn95v++f/AK9Cfe/A/wAqbQBNIE8uH5m+4e3+0fem
AJ/ebof4f/r06X/Vw/7h/wDQjUY6/gaB9RcJ/eb/AL5/+vS4TYPmbqf4fp70yl/gH1P9KBEsATz4
/mb7w7f/AF6jwn95v++f/r06D/j4j/3hUdAdCQhPLHzN1Pb6e9CBPMX5m6jt/wDXph+4Pqf6Usf+
sX6igD//2f/hDM5odHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i
77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0i
YWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4gPHJkZjpSREYg
eG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4g
PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9i
ZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8x
LjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxl
bWVudHMvMS4xLyIgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIiB4bWxuczp4
bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6
ZG9jaWQ6Z2ltcDpjMTQzMDUxOC1kZDNlLTQ0MDUtYjVhNi0wMGE2ZjNkYjQ5MDgiIHhtcE1NOklu
c3RhbmNlSUQ9InhtcC5paWQ6YmFhZjhhODgtZTQzOC00M2NkLWEzYTktZmZlZGIxZTk5Nzc1IiB4
bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZjNkZWQ1OWUtMjJjNS00NmQwLTgzMmUt
MDViMzg5YjBmMjY0IiBkYzpGb3JtYXQ9ImltYWdlL2pwZWciIEdJTVA6QVBJPSIyLjAiIEdJTVA6
UGxhdGZvcm09IldpbmRvd3MiIEdJTVA6VGltZVN0YW1wPSIxNjQ5MzQ0MzQwNzk2NTA3IiBHSU1Q
OlZlcnNpb249IjIuMTAuMzAiIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4gPHhtcE1NOkhp
c3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0OmNoYW5n
ZWQ9Ii8iIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6NTI4NzhjMmEtNjI1Yy00ZjVkLTgwYTkt
MTA0OWUzMGJhN2I3IiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIiBz
dEV2dDp3aGVuPSIyMDIyLTA0LTA3VDIzOjEyOjIwIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0
b3J5PiA8ZGM6Y3JlYXRvcj4gPHJkZjpTZXE+IDxyZGY6bGk+VmVjdG9yU3RvY2suY29tLzUwMzEw
NjY8L3JkZjpsaT4gPC9yZGY6U2VxPiA8L2RjOmNyZWF0b3I+IDwvcmRmOkRlc2NyaXB0aW9uPiA8
L3JkZjpSREY+IDwveDp4bXBtZXRhPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
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
Yebr2TR1c69DygAMpq6Pkr1rq3BgAXI2U71gAWZ2Vq1gAWpurUAAXI2071AAWZ2Vq1gAWp2Va1gA
WJ2V61gAWZ2Vq1gAXJ2061AAWZ2Vq1gAWY21r1AD1m3F071gAzZmq1QADNqaq1AAkxUmM16gATzc
VT8sACbF+MRZkAfTM01XqM5o6qN66OzSANg5+q5OzU+rhAGS1dE+Kw27ltRsq3BgAXI2U71gAWZ2
Vq1gAWp2Va1gAXY20r1AAWZ2Vq1gAWp21a1AAWJ2V61gAWZ2Vq1gAXI2071AAWZ2Vq1gAWY2Vr1g
AXJ2U61gAzZmq1QADNmarVAAkxUuKrVrAE83FU/LAAmxXhFmQB9MzTVeoGX09U85wXRy+MDYefqp
1OK3c49VsHP1U714rbzi1F1bkwALkbKd6wALM7K1awALM7K1awALsbaV6gALM7K1awALM7K1awAL
M7K1awALM3WqAALkbad6gALM7K1awALMbK16wALsbKV6wAZszVaoABmzNVqgASYqXGa1QAJ5uKp+
WABNihHnAA9xmbGYKkD7xWf5+r5Y+c4kK+cSYzJjMZgujl8zgCzN1an1gAXI2Ur1+gAsTdeoAAsT
deoAAuRtpXq9ABYm61R6ACxN16gACxN16gACxNV6kAC5GynesACxN16gACxGyvesAeF2NlO9YA8Z
tTVaoAHhZm69QAJMVJjNeoAE01FmfMgBJjMuK+GAAJsVDmQBPioyKpnmxDWuzN1sz6ACxi62Y9AB
bi6dx6ACfF18x6ACfFV8z6AC3N1KgACfFV8z6ACeagqQAJ8VXzPoAJ8VBmQB4XJupUADwsYqDMgD
wsTcFQAPC5N1KgAeFnFV8yAPCxioMyAPvFSlfMgCbFQ5kAD7ZhzMWZAH0zNNV6gAWZuLOI8yALM3
WqTAAszdapMAC7GylesACzOytWsACzGytesAC7G2leoACzOytWsACzOytWsACxN16gACzN1qgAC7
G2leoACzGytesAGbM3WrWAPWbkXSvWADNmarVAAM2ZqtUACXFSYzWqABPNxVPywAJcUIsyAPpmaa
r1AAszcWcR5kAWZutUmABZm61SYAF2NlK9YAFmdlatYAFmNla9YAF2NtK9QAFmdlatYAFmdlatYA
Fibr1AAFmbrVAAF2NtK9QAFmNla9YAM2ZutWsAes3IulesAGbM1WqAAZszVaoAEuKkxmtUACebiq
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
ccpxynHKccpwWXocpxynHKccpxynBZf68pxynHKccpxynBpRynHKccpxynHKcOpepynHKccpxynH
KcOJetynHKccpxynHKcOZf8ARynHKccpxynA5eo4l/0cpxynHKccpwCXrTlPnynHKccpxynA5eos
xJLvli+WL5YvliRyczmJevli+WL5YvlhuYk3BDkuXiRJ64TE3rhUXiQ3MSZ75Ivli+WL5YvlhuYk
zXyRfLF8sXyxfLDUxJkvki+WL5Yvli+WAmJF8kXyxfLF8sXywIxOV8kXyxfLF8sXywIxLF8kXyxf
LF8sXywk5LN8kXyxfLF8sXyxeJ298sXyxfLF8sXyxfJYvli+WL5Yvli+WFGJYvli+WL5Yvli+SCm
JYvli+WL5Yvli+SCmJyvli+WL5Yvli+SDGJF8sXyxfLF8sXyQ6MS5fLF8sXyxfLF8kODEvXyxfLF
8sXyxfJDgxJHvli+WL5YvlgZyXHBiScXyxfLF8sXywE5L0zk53yxfLF8sXywMxJrJuYS9z7+DfyC
bmDbyMW2/i03cQ5C+OItjFOxj/Xxn4+KtjEvj4l+OJsne7i538XPkYD3HHkYA35++A9wm5hL3Pv4
N/IJuYNvIxbb+LTdxDkL44i2MU7GP9fGfj4q2MS+PiX44myd7uLnfxc+RgPcceRgDfn74D3CbmEv
c+/g38gm5g28jFtv4tN3EOQvjiLYxTsY/wBfGfj4q2MS+PiX44myd7uLnfxc+RgPcceRgDfn74D3
CfPCXuafM2AJ8jk3MAT5HxBPkXFsqSSYinyyHP8A1xEqUg4pn6OPP0MefoYqn6OJVSmHEk+csSz5
5OVSUTE85TLiefM+CPmefM+AZ8jT98B/P//EADcRAAECBQIGAQQBAwUAAgMBAAEAAgMREiAxBCEQ
EyIyQVFhBRQwQkAjM3FSgZGhsRVQQ1PR8f/aAAgBAwEBPwE3Oza3Kdm1ubm5uZm5twuHabvF3i7x
d4uPaLjc659zs3OzaMp2bW5uCObnZtbkJ2bW5ubm5mbm3Dzc3tN3i7xd4uOLndouPi51z83Ozc7N
rcp2Ta3NwRzc7NrchOza3Nzc3Mzc24ebm9pu8XeLvFxxc7tFx8XOufm52bnZtblOybW5uCObnZtb
kJ2bW5ubm5mbm3Dzc3tN3i7xd4uOLndouPi51z83Ozc7Nrcp2Ta3NwRCpKpKpKpKpKI3VJVJVJVJ
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
G+K1w5e/whjdRYbYrCxy1UHkxKVMi12bW5T82tzcMo5u1G76vdwE1p9O1jedGwojxE1IePMlrn0Q
ZhBzdfDof3hOaWGk3QNg4/Fzc3Nub5ub2m7xd+t363HFzu0XHAudbMpyblVAbEpjqHVBajWR/wBN
gtLr2xemJsVqtONQyXlPYYbqXWuza3Kdk2tzcMo3RBVDB9bWgTUJjIDeZG/2HtR9Q/UOm5Q++Gvq
h/pgJjy0p8ta2Y7x/wB3N6YX+bmXNuHm4dpu8Xfrd+txxc7tFx8XOufxgno3K2cFEZQ5afXmEaIm
4WtiwI4qZ3Wuza3Kdk2tzcMouKqKqKrKrKDyoZqLoZ82sDYAqfu71/8A1RIjorqncIPcz/K+qntH
BjywzCiUxxzG58//ANsaKjIKI7rpbgKoqoqoqsqsprjNVFVFVFVlVlNcVUVUVUVWVWUHHdVFVFVF
VlVlBxkVUVUVUVWVWVUZKoqoqsqsqsqo0qoqoqsqsqsqoyVRVRVZVZVZRcZKoqoqsqsqsouMgqiq
iqyqyqyi4qoqoqsqsqspziqiqiqyqyqynOKqKqKrKbFcw7IPEYSTyWukqiqiqyqyqynOM1UVUVWV
WUHGac4zVRVRVZVZQcZqoqoqoqsqsoOKObQiZOmowq/qjz/7xBluiZ8YHcP8hfVD/VA+OIJaZiyG
OW3mH/ZNzczNzbm4Nze03eLv1u/W7xce0XHxc651zs3OzaMp2bW5ublHNoTsqE8N6XYKiMMMyu0/
eF9RM45uhMqO+FFfWdsJmbmZubc3zc3tN363frd+t3i49ouOBc65+bnZudm0ZTs2tzc3KObnZ4Me
COW/H/ifDLDvbp/7gWsM47rYcMv/AMKI8EUNxwbm5mbm3N83N7Td4u/W79bj23HtFx8XOudc7Nzs
2tyn5tbm4ZRzc7PFkSQpduEYM+qHvZpv7zf8qMZxHGwQgzeL/wAeVEil+w2HFubm5ubcPNze03eL
v1u/W44ud2i44Fzrn5udm52bW5Tsm1ubhlG52bAS3cLmB+0QIw4Z7Xf8r7d5xumQ4rHB1JRgxSe0
r7d/7bKiGO50/wDC51P9sSRmbG5uZm5tzfNze03eLv1u8XeLndouPi51z83Ozc7Nrcp2Ta3Nwyi4
qoqoqoqoqopzjNVFVFVFVFNcZouM1UVzX+1zHnyqimuM1UVUVUVUVUU1xmqiqiqiqiqimkqoqoqo
qoqopriqiqiqiqiqig47qoqoqoqoqooE0lVFVFVFVFVFVGSqKqKqKqKqKqMlUVUVUVUVUVUZKoqo
qoqoqoqoyVRVRVRVRVRRJpCqKqKqKqKqKLiqiqiqiqiqinOKqKqKqKqKqKcTNVFVFVFVFVFOcZqo
qoqoqoqopzjNVFVFVFVFBxmnOM1UVUVUVUU1xmqiqiqiqiqig4o5udm1uQnZtbm5ubmZubcPNze0
3eLvF3i44ud2i4+LnXPzc7Nzs2tynZNrc3DKObnZtbkJ2bW5ubm5mbm3Dzc3tN3i7xd4uOLndouP
i51z83Ozc7Nrcp2Ta3Nwyjm52bW5Cdm1ubm5uZm5tw83N7Td4u8XeLji53aLj4udc/Nzs3Oza3Kd
k2tzcMo3Oza3KObW5ubm5u1wuFwwbvF3i7xd4uOBcbnXO3udm52bRlOzaM3Bf//EADcRAAEDBAED
BAIABQQCAgIDAAEAAhEDEiAxIQQQQRMiUWEwMgUUI0BCM1JxsZGhUIEVwdHh8f/aAAgBAgEBPwEZ
DWLtIaxOsnaydrI5OyOxl5y85ecvOQ2chkMm6ybrIaxOk3WJ1mMhrF2kNYu1k7WTtZHI+MjsZecv
OXnLzkNnIechk3WTdZN1idJusTrIoZDWLtIaxdrJ2snayOR8ZHYy85ecvOXnIbOQ85DJusm6ybrE
6TdYnWRQyGsXaQ1i7WTtZO1kcj4yOxl5y85ecvOQ2ch5yGTdZN1k3WJ0m6xOsigVcFcFcFcFcECI
VwVwVwVwTjwgRCuCuCuCuCJ4VwVwVwVwVwTiIVwVwVwVwVwTjwrgrgrgrgrgiVcFcFcFcFcESrgr
grgrgrgieQrgrgrgrgrgpEq4K4K4K4K4KeVIVwVwVwVwUiVcFcFcFcFcFPKuCuCuCuCuCB5KuCuC
uCuCuCBCuCuCuCuCuCBVwVwVwVwVwTSFcFcFcFcFcE0iFcFcFcFcFIQIhXBXBXBXBEhNIhXBXBXB
XBEiFIVwVwVwVwVwQyGsXaQ1i7WTtZO1kcj4yOxl5y85ecvOQ2chkMm5N1k3WJ0m6xdrI6QyGsXa
Q1i7WTtZO1gXAbRqtCNb6Xrlev8AS9f6QquPhXgbRqNXrBeuEa/wF6zl6zkajivVchWPleq1eq3t
5y85ecvOQ2chvIZN1k3WTdYnSbrE6yKGshrF2kNYu1k7WJMCV6gcpGlUeWaUuchP+eu/puQa3yUX
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
h3CslcN7oW/98OwISw9z2KEhhttX+KBLxT8gg/xQKFLjX8cFFac/jCGRXY9hhK3LDaqq91YbJVbj
DvUO0JOfkVzzq551c86uedMmq+KMMJupc1c86uedXPOrnnRLMI60NUQWr1uauedXPOrnnVzzoknL
sdCx/quedXPOrnnVzzosmvpHVBoW+quedXPOrnnVzzotHzTqrnnVzzq551c86uedC3l9qx51c86u
edXPOrnnQtTeCrnnVzzq551c86uedBhnPRuquedXPOrnnVzzq550x78qrnnVzzq551c86uedMafa
tSuedXPOrnnVzzq550xp9o1K551c86uedXPOrnnTHvyquedXPOrnnVzzq550eGcdW6q551c86ued
XPOrnnRNDeCrnnVzzq551c86uedH3l9q551c86uedXPOrnnRbHinVXPOrnnVzzq550Wjb6osinpD
VXPOrnnVzzq551c86JAnOx1c86uedXPOrnnQGi9bmiWIT1g6q551c86uedXPOhDGTqXNOmq+Ksed
WPOrHnVrzowENFPItwm0TaJtE2iHrK6VTaJtE2ibRWuhb33TaJtE2ibRbAhJNom0TaJtF3PYoCCb
RNom0TaK61pk2ibRNom4AyZMmTIVhk2ibjbaeLaJtE2nDZk2ibRNom04KG0TaJtE2ibRFAMm0TaJ
tE2nBRk2ibRNomV1rTJtE2ibRNwkbRNom0TacQbRNom0TaJlbaU2ibRNom0RECg2ewTaJtE2ibRM
tyTaJtE2ibRX6qvdSbRNom0TaK6VQ9ZNom0TaJtFuVvMO4VkrhvdC3fvh2BCWHvexQkMNlrwSEJO
8FIQ0UNn219nXranj1bom8dUD5fAeUb42WLqmskQiZ2eEM0f2fCtT4TqE1POgARIas8KcgUceEOb
DQ7L5oF3EKhBkxECUc/IgU/JFEMSDAj/AJfwgAoWpFppwmRXY9hhK3LDaqqx1OGyVW4w79bzDuFZ
K4bnULc++HYEJYe57FCQwEbxCQEWMSCyjyQIzzTuUt8nNBfeFZH7KJMgQON9ciQ5oSmbiTT+kRjD
mRgiQx7kpDMZyx6LJq6t9Kf5U49Sm+EcAZyUghjLosB9Iyd84Lb4HLFTEPyQKbLHWTGqJPNEyAQ+
/ih0gAxLZzkME+I2WnCZFdr2GErecNqqrVXDZKrcYd8t9h3CslcNzqFvffDsCEsE01Z5gU0TMFGF
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
AI9Bqf8A/Jt8Nt+tt8tt/tt8tt8Nt+Nt+tvutv8A7b7rb7b/AItG3m22U2/42/i/e/f/APdXw/8A
ESVU7Vd7Ff7tT7pS7Jc7Ja7pe6rZ7ua77T7vr6rH6rX4rFYr8TKP/wD7J+3+B/x+u/8A9f8A/r//
AP8A/wD3/wD5/wD/AP8A/wDf/wDn/wD7/wD8f/8A3/8A/wD/AL//AO1/+v8A/wCP/wCf/wDgEf8A
/wDv/wDnZ/8A6/8A+v8A/wB//wDv/wDz/wD5/wD/AD//AJ//AOf/APv/AP8Av/1//wB//wDS/wD9
/wD/AB//AJ//AMrn/wD6n/8Ap0//APf/APv/APx//wDf/wDP/wDx/wD+f/8A/wD/AP8A/wDz/wD/
AP8A/wC//v8A/wC9/wD1f/4//wC//wCV/Ov6v4D+3/8A/wD/AOv/APz/AP8Av/8Aj/8A4/8A+P8A
/n//AO//AO//AP8A/wD+/wD93/8Ae/8A+/8A/H/9UklMk2OlV7kkAkmUkkkkmEkmUkk0kmkkkEkk
kkkkkmEknEk3EkgEk2EkkEk5kk2AAZAAXSAhgABAAfAATAAXAAUAAHAAcAAXAAQADUADUADYAB0A
BkAB0ADEACcAC/8A/K//AHf/APr/AP7/AP1//wAf/wDX/wD9/wD8f/8AH/8A7/8A9f8A/X//AF//
AK//AK//AO7/APvf/wDf/wDj/wD7/wD5X/7v/wD1/wD9/wD6/wD+P/8Ar/8A+/8A+P8A/j//AN//
AOv/APr/AP6//wBf/wBf/wDd/wD3v/8Av/8Ax/8A9/8A8r/93/8A6/8A+/8A9f8A/H//AF//APf/
APH/APx//wC//wDX/wD1/wD9f/6//r//ALv/AO9//wB//wCP/wDjbaBba5ba5bbxbabbajbb7bbL
bb7bb7bb7bazbbLbb7bQrbabbR7babbd7bQLbX//xAAqEQACAQIFAwUBAQEBAQAAAAAAAREhMSBB
UWFxEJHwMIGhscHh0UDxUP/aAAgBAwEBPxC7CrlD4a1kuYalHhrDvhSWnR/Q8KTOK18YlQPCrh4U
q8WXnE7MSrEWrjEkRiRJqNF9YVcVKjCih8NopfnDYHfDdilcu84fnFzDZHinfD9D+mPDnxWcP3GH
hV/sPDn5xZecVn1Bbw/cWXjCixwvrCr4pF/DYPnYbA74bsUrl3nD84uYbI8U74fof0x4c+Kzh+4w
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
WfuO8fuZkjK1Hqm6zdZus3WO1MctzdZus3WbrHm65P6N03WbrN1m6xmam6brN1m6zdZFqyN03Wbr
N1m6ycSbrN1m6zdZusUupum6zdZus3WVdczdZus3WbrN1jh1zNw3WbrN1m6xw3Jus3WbrN1m6TiT
dZus3WbrN0pa5G6zdZus3WbghFTdZus3WbrN0XSuS+jdZus3WbrFLcUoZus3WbrN1i1RF6m6zdZu
s3WOpUQeuZus3WbrN1kHUctzdZus3WbrGXE4pXLvOH5xcw2R4p3w/Q/pjw58VnD9xh4Vf7Dw5+cW
XnFZ9QW8P3Fl4woscL6wq+KRfw2D52GwO+G1ilcu84fnFzDZHinfD9D+mPDnxWcP3GHhV/sPDn5x
ZecVn1Bbw/cWXjCixwvrCr4pF/DYPnYbA74bWKVy7zh+cXMNkeKd8P0P6Y8OfFZw/cYeFX+w8Ofn
Fl5xWfUFvD9xZeMKLHC+sKvikX8Ng+dhsDvhtFTKlSpUVypmipUqVKFbK2gqVKlShGxlSpUqUVDu
VKlSo8q6P6KlSpUqPEz0qVKlSlOSpUqVKjpKZUqVKlRXoqVKlSor0VKlSpUdqKlSpUqO1FSpUqVH
TUipUqVKlSRUqVKlRpiCpUqV6PJNaL6KlSpUVyqgqVKlRFTNFSpUqUo2VO0VKlSpSjY7lSpUqUuW
f//EACoRAAEDAgUEAgMBAQEAAAAAAAEAETEgIRBBUWFxgZGx8DDhocHRQPFQ/9oACAECAQE/EICk
qKmw1BTNVYVRN1DzVl5qkOajqjGom3ioT4qEvk0zVnq8h81XBVFTIoaZkIpMKFJhQUy8KKmSqSrz
DzVl5qnyq87xUY9ajHioT4qE/k0+VWfmrzHzVDVDTIoeKZkIpgoUmFBTLwoqZKpKvMPNWXmqfKrz
vFRj1qMeKhPioT+TT5VZ+avMfNUNUNMih4pmQimChSYUFMvCipkqkq8w81Zeap8qvO8VGPWox4qE
+KhP5NPlVn5q8x81Q1Q0yKHimZCKYIIFIAUDBSABJhMlIAN1QAFFUAAz1DzUAA7c1AAFxUAAaoAC
161AARbVAAemoAALjUAA6gAAiagAHeoAGXU+agACCoAmykAZFMtIAcSDWB6McD0ZFhQpKiplUVMl
UlXmHmrLzVPlV7uKjGox4qM+KhP5NM81Z+ao9T5qgqhpmUPFMiEUzKApMKCmVQUyfIeYeaJMyhi6
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

------MultipartBoundary--accI3Wo9rSes4V4hWRbcnMh8gZqIBa8QAW8Wcq5EZR------
